;  ASM code generated by mikroVirtualMachine for PIC - V. 8.2.0.0
;  Date/Time: 17/05/2010 07:08:46
;  Info: http://www.mikroe.com


; ADDRESS	OPCODE	ASM
; ----------------------------------------------
$0000	$2C4E			GOTO	_main
$06C9	$	_Usart_Read:
$06C9	$1303			BCF	STATUS, RP1
$06CA	$1283			BCF	STATUS, RP0
$06CB	$081A			MOVF	RCREG, 0
$06CC	$00AC			MOVWF	Usart_Read_tmp_L0
$06CD	$1C98			BTFSS	RCSTA, 1
$06CE	$2ED1			GOTO	L_Usart_Read_2
$06CF	$1218			BCF	RCSTA, 4
$06D0	$1618			BSF	RCSTA, 4
$06D1	$	L_Usart_Read_2:
$06D1	$082C			MOVF	Usart_Read_tmp_L0, 0
$06D2	$00F0			MOVWF	STACK_0
$06D3	$0008			RETURN
$0004	$	_interrupt:
$0004	$00FF			MOVWF	STACK_15
$0005	$0E03			SWAPF	STATUS, 0
$0006	$0183			CLRF	STATUS
$0007	$00AA			MOVWF	?saveSTATUS
$0008	$0804			MOVF	FSR, 0
$0009	$00A9			MOVWF	?saveFSR
$000A	$080A			MOVF	PCLATH, 0
$000B	$00AB			MOVWF	?savePCLATH
$000C	$018A			CLRF	PCLATH
$000D	$0870			MOVF	STACK_0, 0
$000E	$00E7			MOVWF	STSAVED_0
;porta_ou_exclusivo.c,10 :: 		void interrupt()
;porta_ou_exclusivo.c,12 :: 		if(PIR1.RCIF) gen = Usart_Read();
$000F	$1E8C			BTFSS	PIR1, 5
$0010	$2814			GOTO	L_interrupt_34
$0011	$26C9			CALL	_Usart_Read
$0012	$0870			MOVF	STACK_0, 0
$0013	$00A2			MOVWF	_gen
$0014	$	L_interrupt_34:
;porta_ou_exclusivo.c,14 :: 		}
$0014	$	L_Interrupt_end:
$0014	$0867			MOVF	STSAVED_0, 0
$0015	$00F0			MOVWF	STACK_0
$0016	$082B			MOVF	?savePCLATH, 0
$0017	$008A			MOVWF	PCLATH
$0018	$0829			MOVF	?saveFSR, 0
$0019	$0084			MOVWF	FSR
$001A	$0E2A			SWAPF	?saveSTATUS, 0
$001B	$0083			MOVWF	STATUS
$001C	$0EFF			SWAPF	STACK_15, 1
$001D	$0E7F			SWAPF	STACK_15, 0
$001E	$0009			RETFIE
$01E8	$	_SDIV3232L:
$01E8	$1303			BCF	STATUS, RP1
$01E9	$1283			BCF	STATUS, RP0
$01EA	$0874			MOVF	STACK_4, W
$01EB	$02F8			SUBWF	STACK_8, F
$01EC	$0875			MOVF	STACK_5, W
$01ED	$1C03			BTFSS	STATUS, C
$01EE	$0F75			INCFSZ	STACK_5, W
$01EF	$02F9			SUBWF	STACK_9, F
$01F0	$0876			MOVF	STACK_6, W
$01F1	$1C03			BTFSS	STATUS, C
$01F2	$0F76			INCFSZ	STACK_6, W
$01F3	$02FA			SUBWF	STACK_10, F
$01F4	$0877			MOVF	STACK_7, W
$01F5	$1C03			BTFSS	STATUS, C
$01F6	$0F77			INCFSZ	STACK_7, W
$01F7	$02FB			SUBWF	STACK_11, F
$01F8	$0DF3			RLF	STACK_3, F
$01F9	$3007			MOVLW	7
$01FA	$00FC			MOVWF	STACK_12
$01FB	$	LOOPS3232A:
$01FB	$0D73			RLF	STACK_3, W
$01FC	$0DF8			RLF	STACK_8, F
$01FD	$0DF9			RLF	STACK_9, F
$01FE	$0DFA			RLF	STACK_10, F
$01FF	$0DFB			RLF	STACK_11, F
$0200	$0874			MOVF	STACK_4, W
$0201	$1C73			BTFSS	STACK_3, 0
$0202	$2A11			GOTO	SADD22LA
$0203	$02F8			SUBWF	STACK_8, F
$0204	$0875			MOVF	STACK_5, W
$0205	$1C03			BTFSS	STATUS, C
$0206	$0F75			INCFSZ	STACK_5, W
$0207	$02F9			SUBWF	STACK_9, F
$0208	$0876			MOVF	STACK_6, W
$0209	$1C03			BTFSS	STATUS, C
$020A	$0F76			INCFSZ	STACK_6, W
$020B	$02FA			SUBWF	STACK_10, F
$020C	$0877			MOVF	STACK_7, W
$020D	$1C03			BTFSS	STATUS, C
$020E	$0F77			INCFSZ	STACK_7, W
$020F	$02FB			SUBWF	STACK_11, F
$0210	$2A1E			GOTO	SOK22LA
$0211	$	SADD22LA:
$0211	$07F8			ADDWF	STACK_8, F
$0212	$0875			MOVF	STACK_5, W
$0213	$1803			BTFSC	STATUS, C
$0214	$0F75			INCFSZ	STACK_5, W
$0215	$07F9			ADDWF	STACK_9, F
$0216	$0876			MOVF	STACK_6, W
$0217	$1803			BTFSC	STATUS, C
$0218	$0F76			INCFSZ	STACK_6, W
$0219	$07FA			ADDWF	STACK_10, F
$021A	$0877			MOVF	STACK_7, W
$021B	$1803			BTFSC	STATUS, C
$021C	$0F77			INCFSZ	STACK_7, W
$021D	$07FB			ADDWF	STACK_11, F
$021E	$	SOK22LA:
$021E	$0DF3			RLF	STACK_3, F
$021F	$0BFC			DECFSZ	STACK_12, F
$0220	$29FB			GOTO	LOOPS3232A
$0221	$0D72			RLF	STACK_2, W
$0222	$0DF8			RLF	STACK_8, F
$0223	$0DF9			RLF	STACK_9, F
$0224	$0DFA			RLF	STACK_10, F
$0225	$0DFB			RLF	STACK_11, F
$0226	$0874			MOVF	STACK_4, W
$0227	$1C73			BTFSS	STACK_3, 0
$0228	$2A37			GOTO	SADD22L8
$0229	$02F8			SUBWF	STACK_8, F
$022A	$0875			MOVF	STACK_5, W
$022B	$1C03			BTFSS	STATUS, C
$022C	$0F75			INCFSZ	STACK_5, W
$022D	$02F9			SUBWF	STACK_9, F
$022E	$0876			MOVF	STACK_6, W
$022F	$1C03			BTFSS	STATUS, C
$0230	$0F76			INCFSZ	STACK_6, W
$0231	$02FA			SUBWF	STACK_10, F
$0232	$0877			MOVF	STACK_7, W
$0233	$1C03			BTFSS	STATUS, C
$0234	$0F77			INCFSZ	STACK_7, W
$0235	$02FB			SUBWF	STACK_11, F
$0236	$2A44			GOTO	SOK22L8
$0237	$	SADD22L8:
$0237	$07F8			ADDWF	STACK_8, F
$0238	$0875			MOVF	STACK_5, W
$0239	$1803			BTFSC	STATUS, C
$023A	$0F75			INCFSZ	STACK_5, W
$023B	$07F9			ADDWF	STACK_9, F
$023C	$0876			MOVF	STACK_6, W
$023D	$1803			BTFSC	STATUS, C
$023E	$0F76			INCFSZ	STACK_6, W
$023F	$07FA			ADDWF	STACK_10, F
$0240	$0877			MOVF	STACK_7, W
$0241	$1803			BTFSC	STATUS, C
$0242	$0F77			INCFSZ	STACK_7, W
$0243	$07FB			ADDWF	STACK_11, F
$0244	$	SOK22L8:
$0244	$0DF2			RLF	STACK_2, F
$0245	$3007			MOVLW	7
$0246	$00FC			MOVWF	STACK_12
$0247	$	LOOPS3232B:
$0247	$0D72			RLF	STACK_2, W
$0248	$0DF8			RLF	STACK_8, F
$0249	$0DF9			RLF	STACK_9, F
$024A	$0DFA			RLF	STACK_10, F
$024B	$0DFB			RLF	STACK_11, F
$024C	$0874			MOVF	STACK_4, W
$024D	$1C72			BTFSS	STACK_2, 0
$024E	$2A5D			GOTO	SADD22LB
$024F	$02F8			SUBWF	STACK_8, F
$0250	$0875			MOVF	STACK_5, W
$0251	$1C03			BTFSS	STATUS, C
$0252	$0F75			INCFSZ	STACK_5, W
$0253	$02F9			SUBWF	STACK_9, F
$0254	$0876			MOVF	STACK_6, W
$0255	$1C03			BTFSS	STATUS, C
$0256	$0F76			INCFSZ	STACK_6, W
$0257	$02FA			SUBWF	STACK_10, F
$0258	$0877			MOVF	STACK_7, W
$0259	$1C03			BTFSS	STATUS, C
$025A	$0F77			INCFSZ	STACK_7, W
$025B	$02FB			SUBWF	STACK_11, F
$025C	$2A6A			GOTO	SOK22LB
$025D	$	SADD22LB:
$025D	$07F8			ADDWF	STACK_8, F
$025E	$0875			MOVF	STACK_5, W
$025F	$1803			BTFSC	STATUS, C
$0260	$0F75			INCFSZ	STACK_5, W
$0261	$07F9			ADDWF	STACK_9, F
$0262	$0876			MOVF	STACK_6, W
$0263	$1803			BTFSC	STATUS, C
$0264	$0F76			INCFSZ	STACK_6, W
$0265	$07FA			ADDWF	STACK_10, F
$0266	$0877			MOVF	STACK_7, W
$0267	$1803			BTFSC	STATUS, C
$0268	$0F77			INCFSZ	STACK_7, W
$0269	$07FB			ADDWF	STACK_11, F
$026A	$	SOK22LB:
$026A	$0DF2			RLF	STACK_2, F
$026B	$0BFC			DECFSZ	STACK_12, F
$026C	$2A47			GOTO	LOOPS3232B
$026D	$0D71			RLF	STACK_1, W
$026E	$0DF8			RLF	STACK_8, F
$026F	$0DF9			RLF	STACK_9, F
$0270	$0DFA			RLF	STACK_10, F
$0271	$0DFB			RLF	STACK_11, F
$0272	$0874			MOVF	STACK_4, W
$0273	$1C72			BTFSS	STACK_2, 0
$0274	$2A83			GOTO	SADD22L16
$0275	$02F8			SUBWF	STACK_8, F
$0276	$0875			MOVF	STACK_5, W
$0277	$1C03			BTFSS	STATUS, C
$0278	$0F75			INCFSZ	STACK_5, W
$0279	$02F9			SUBWF	STACK_9, F
$027A	$0876			MOVF	STACK_6, W
$027B	$1C03			BTFSS	STATUS, C
$027C	$0F76			INCFSZ	STACK_6, W
$027D	$02FA			SUBWF	STACK_10, F
$027E	$0877			MOVF	STACK_7, W
$027F	$1C03			BTFSS	STATUS, C
$0280	$0F77			INCFSZ	STACK_7, W
$0281	$02FB			SUBWF	STACK_11, F
$0282	$2A90			GOTO	SOK22L16
$0283	$	SADD22L16:
$0283	$07F8			ADDWF	STACK_8, F
$0284	$0875			MOVF	STACK_5, W
$0285	$1803			BTFSC	STATUS, C
$0286	$0F75			INCFSZ	STACK_5, W
$0287	$07F9			ADDWF	STACK_9, F
$0288	$0876			MOVF	STACK_6, W
$0289	$1803			BTFSC	STATUS, C
$028A	$0F76			INCFSZ	STACK_6, W
$028B	$07FA			ADDWF	STACK_10, F
$028C	$0877			MOVF	STACK_7, W
$028D	$1803			BTFSC	STATUS, C
$028E	$0F77			INCFSZ	STACK_7, W
$028F	$07FB			ADDWF	STACK_11, F
$0290	$	SOK22L16:
$0290	$0DF1			RLF	STACK_1, F
$0291	$3007			MOVLW	7
$0292	$00FC			MOVWF	STACK_12
$0293	$	LOOPS3232C:
$0293	$0D71			RLF	STACK_1, W
$0294	$0DF8			RLF	STACK_8, F
$0295	$0DF9			RLF	STACK_9, F
$0296	$0DFA			RLF	STACK_10, F
$0297	$0DFB			RLF	STACK_11, F
$0298	$0874			MOVF	STACK_4, W
$0299	$1C71			BTFSS	STACK_1, 0
$029A	$2AA9			GOTO	SADD22LC
$029B	$02F8			SUBWF	STACK_8, F
$029C	$0875			MOVF	STACK_5, W
$029D	$1C03			BTFSS	STATUS, C
$029E	$0F75			INCFSZ	STACK_5, W
$029F	$02F9			SUBWF	STACK_9, F
$02A0	$0876			MOVF	STACK_6, W
$02A1	$1C03			BTFSS	STATUS, C
$02A2	$0F76			INCFSZ	STACK_6, W
$02A3	$02FA			SUBWF	STACK_10, F
$02A4	$0877			MOVF	STACK_7, W
$02A5	$1C03			BTFSS	STATUS, C
$02A6	$0F77			INCFSZ	STACK_7, W
$02A7	$02FB			SUBWF	STACK_11, F
$02A8	$2AB6			GOTO	SOK22LC
$02A9	$	SADD22LC:
$02A9	$07F8			ADDWF	STACK_8, F
$02AA	$0875			MOVF	STACK_5, W
$02AB	$1803			BTFSC	STATUS, C
$02AC	$0F75			INCFSZ	STACK_5, W
$02AD	$07F9			ADDWF	STACK_9, F
$02AE	$0876			MOVF	STACK_6, W
$02AF	$1803			BTFSC	STATUS, C
$02B0	$0F76			INCFSZ	STACK_6, W
$02B1	$07FA			ADDWF	STACK_10, F
$02B2	$0877			MOVF	STACK_7, W
$02B3	$1803			BTFSC	STATUS, C
$02B4	$0F77			INCFSZ	STACK_7, W
$02B5	$07FB			ADDWF	STACK_11, F
$02B6	$	SOK22LC:
$02B6	$0DF1			RLF	STACK_1, F
$02B7	$0BFC			DECFSZ	STACK_12, F
$02B8	$2A93			GOTO	LOOPS3232C
$02B9	$0D70			RLF	STACK_0, W
$02BA	$0DF8			RLF	STACK_8, F
$02BB	$0DF9			RLF	STACK_9, F
$02BC	$0DFA			RLF	STACK_10, F
$02BD	$0DFB			RLF	STACK_11, F
$02BE	$0874			MOVF	STACK_4, W
$02BF	$1C71			BTFSS	STACK_1, 0
$02C0	$2ACF			GOTO	SADD22L24
$02C1	$02F8			SUBWF	STACK_8, F
$02C2	$0875			MOVF	STACK_5, W
$02C3	$1C03			BTFSS	STATUS, C
$02C4	$0F75			INCFSZ	STACK_5, W
$02C5	$02F9			SUBWF	STACK_9, F
$02C6	$0876			MOVF	STACK_6, W
$02C7	$1C03			BTFSS	STATUS, C
$02C8	$0F76			INCFSZ	STACK_6, W
$02C9	$02FA			SUBWF	STACK_10, F
$02CA	$0877			MOVF	STACK_7, W
$02CB	$1C03			BTFSS	STATUS, C
$02CC	$0F77			INCFSZ	STACK_7, W
$02CD	$02FB			SUBWF	STACK_11, F
$02CE	$2ADC			GOTO	SOK22L24
$02CF	$	SADD22L24:
$02CF	$07F8			ADDWF	STACK_8, F
$02D0	$0875			MOVF	STACK_5, W
$02D1	$1803			BTFSC	STATUS, C
$02D2	$0F75			INCFSZ	STACK_5, W
$02D3	$07F9			ADDWF	STACK_9, F
$02D4	$0876			MOVF	STACK_6, W
$02D5	$1803			BTFSC	STATUS, C
$02D6	$0F76			INCFSZ	STACK_6, W
$02D7	$07FA			ADDWF	STACK_10, F
$02D8	$0877			MOVF	STACK_7, W
$02D9	$1803			BTFSC	STATUS, C
$02DA	$0F77			INCFSZ	STACK_7, W
$02DB	$07FB			ADDWF	STACK_11, F
$02DC	$	SOK22L24:
$02DC	$0DF0			RLF	STACK_0, F
$02DD	$3007			MOVLW	7
$02DE	$00FC			MOVWF	STACK_12
$02DF	$	LOOPS3232D:
$02DF	$0D70			RLF	STACK_0, W
$02E0	$0DF8			RLF	STACK_8, F
$02E1	$0DF9			RLF	STACK_9, F
$02E2	$0DFA			RLF	STACK_10, F
$02E3	$0DFB			RLF	STACK_11, F
$02E4	$0874			MOVF	STACK_4, W
$02E5	$1C70			BTFSS	STACK_0, 0
$02E6	$2AF5			GOTO	SADD22LD
$02E7	$02F8			SUBWF	STACK_8, F
$02E8	$0875			MOVF	STACK_5, W
$02E9	$1C03			BTFSS	STATUS, C
$02EA	$0F75			INCFSZ	STACK_5, W
$02EB	$02F9			SUBWF	STACK_9, F
$02EC	$0876			MOVF	STACK_6, W
$02ED	$1C03			BTFSS	STATUS, C
$02EE	$0F76			INCFSZ	STACK_6, W
$02EF	$02FA			SUBWF	STACK_10, F
$02F0	$0877			MOVF	STACK_7, W
$02F1	$1C03			BTFSS	STATUS, C
$02F2	$0F77			INCFSZ	STACK_7, W
$02F3	$02FB			SUBWF	STACK_11, F
$02F4	$2B02			GOTO	SOK22LD
$02F5	$	SADD22LD:
$02F5	$07F8			ADDWF	STACK_8, F
$02F6	$0875			MOVF	STACK_5, W
$02F7	$1803			BTFSC	STATUS, C
$02F8	$0F75			INCFSZ	STACK_5, W
$02F9	$07F9			ADDWF	STACK_9, F
$02FA	$0876			MOVF	STACK_6, W
$02FB	$1803			BTFSC	STATUS, C
$02FC	$0F76			INCFSZ	STACK_6, W
$02FD	$07FA			ADDWF	STACK_10, F
$02FE	$0877			MOVF	STACK_7, W
$02FF	$1803			BTFSC	STATUS, C
$0300	$0F77			INCFSZ	STACK_7, W
$0301	$07FB			ADDWF	STACK_11, F
$0302	$	SOK22LD:
$0302	$0DF0			RLF	STACK_0, F
$0303	$0BFC			DECFSZ	STACK_12, F
$0304	$2ADF			GOTO	LOOPS3232D
$0305	$1870			BTFSC	STACK_0, 0
$0306	$2B15			GOTO	SOK22L
$0307	$0874			MOVF	STACK_4, W
$0308	$07F8			ADDWF	STACK_8, F
$0309	$0875			MOVF	STACK_5, W
$030A	$1803			BTFSC	STATUS, C
$030B	$0F75			INCFSZ	STACK_5, W
$030C	$07F9			ADDWF	STACK_9, F
$030D	$0876			MOVF	STACK_6, W
$030E	$1803			BTFSC	STATUS, C
$030F	$0F76			INCFSZ	STACK_6, W
$0310	$07FA			ADDWF	STACK_10, F
$0311	$0877			MOVF	STACK_7, W
$0312	$1803			BTFSC	STATUS, C
$0313	$0F77			INCFSZ	STACK_7, W
$0314	$07FB			ADDWF	STACK_11, F
$0315	$	SOK22L:
$0315	$0008			RETURN
$069F	$	_COMFREM:
$069F	$1303			BCF	STATUS, RP1
$06A0	$1283			BCF	STATUS, RP0
$06A1	$09FB			COMF	STACK_11, F
$06A2	$09FA			COMF	STACK_10, F
$06A3	$09F9			COMF	STACK_9, F
$06A4	$09F8			COMF	STACK_8, F
$06A5	$0AF8			INCF	STACK_8, F
$06A6	$1903			BTFSC	STATUS, Z
$06A7	$0AF9			INCF	STACK_9, F
$06A8	$1903			BTFSC	STATUS, Z
$06A9	$0AFA			INCF	STACK_10, F
$06AA	$1903			BTFSC	STATUS, Z
$06AB	$0AFB			INCF	STACK_11, F
$06AC	$0008			RETURN
$06D4	$	_Get_Fosc_kHz:
;delays.c,1 :: 		unsigned long Get_Fosc_kHz(){
;delays.c,3 :: 		return Clock_kHz();
$06D4	$3020			MOVLW	32
$06D5	$1303			BCF	STATUS, RP1
$06D6	$1283			BCF	STATUS, RP0
$06D7	$00F0			MOVWF	STACK_0
$06D8	$304E			MOVLW	78
$06D9	$00F1			MOVWF	STACK_0+1
$06DA	$01F2			CLRF	STACK_0+2
$06DB	$01F3			CLRF	STACK_0+3
;delays.c,5 :: 		}
$06DC	$0008			RETURN
$03B4	$	_Div_32x32_S:
$03B4	$1303			BCF	STATUS, RP1
$03B5	$1283			BCF	STATUS, RP0
$03B6	$	FXD3232S:
$03B6	$01FC			CLRF	STACK_12
$03B7	$1BF7			BTFSC	STACK_7, 7
$03B8	$0AFC			INCF	STACK_12, F
$03B9	$01FD			CLRF	STACK_13
$03BA	$01FB			CLRF	STACK_11
$03BB	$01FA			CLRF	STACK_10
$03BC	$01F9			CLRF	STACK_9
$03BD	$01F8			CLRF	STACK_8
$03BE	$0873			MOVF	STACK_3, W
$03BF	$0472			IORWF	STACK_2, W
$03C0	$0471			IORWF	STACK_1, W
$03C1	$0470			IORWF	STACK_0, W
$03C2	$1903			BTFSC	STATUS, Z
$03C3	$2C48			GOTO	END_ALL
$03C4	$0873			MOVF	STACK_3, W
$03C5	$0677			XORWF	STACK_7, W
$03C6	$00A1			MOVWF	___math_tempb
$03C7	$1BA1			BTFSC	___math_tempb, 7
$03C8	$09FD			COMF	STACK_13, F
$03C9	$1FF7			BTFSS	STACK_7, 7
$03CA	$2BD6			GOTO	CA3232S
$03CB	$09F4			COMF	STACK_4, F
$03CC	$09F5			COMF	STACK_5, F
$03CD	$09F6			COMF	STACK_6, F
$03CE	$09F7			COMF	STACK_7, F
$03CF	$0AF4			INCF	STACK_4, F
$03D0	$1903			BTFSC	STATUS, Z
$03D1	$0AF5			INCF	STACK_5, F
$03D2	$1903			BTFSC	STATUS, Z
$03D3	$0AF6			INCF	STACK_6, F
$03D4	$1903			BTFSC	STATUS, Z
$03D5	$0AF7			INCF	STACK_7, F
$03D6	$	CA3232S:
$03D6	$1FF3			BTFSS	STACK_3, 7
$03D7	$2BE3			GOTO	C3232SX
$03D8	$09F0			COMF	STACK_0, F
$03D9	$09F1			COMF	STACK_1, F
$03DA	$09F2			COMF	STACK_2, F
$03DB	$09F3			COMF	STACK_3, F
$03DC	$0AF0			INCF	STACK_0, F
$03DD	$1903			BTFSC	STATUS, Z
$03DE	$0AF1			INCF	STACK_1, F
$03DF	$1903			BTFSC	STATUS, Z
$03E0	$0AF2			INCF	STACK_2, F
$03E1	$1903			BTFSC	STATUS, Z
$03E2	$0AF3			INCF	STACK_3, F
$03E3	$	C3232SX:
$03E3	$0873			MOVF	STACK_3, W
$03E4	$0477			IORWF	STACK_7, W
$03E5	$00A1			MOVWF	___math_tempb
$03E6	$1BA1			BTFSC	___math_tempb, 7
$03E7	$2C04			GOTO	C3232SX1
$03E8	$	C3232S:
$03E8	$21E8			CALL	_SDIV3232L
$03E9	$	C3232S2:
$03E9	$1BFC			BTFSC	STACK_12, 7
$03EA	$2C21			GOTO	C3232SX4
$03EB	$	C3232SOK:
$03EB	$1FFD			BTFSS	STACK_13, 7
$03EC	$2C48			GOTO	END_ALL
$03ED	$09F0			COMF	STACK_0, F
$03EE	$09F1			COMF	STACK_1, F
$03EF	$09F2			COMF	STACK_2, F
$03F0	$09F3			COMF	STACK_3, F
$03F1	$0AF0			INCF	STACK_0, F
$03F2	$1903			BTFSC	STATUS, Z
$03F3	$0AF1			INCF	STACK_1, F
$03F4	$1903			BTFSC	STATUS, Z
$03F5	$0AF2			INCF	STACK_2, F
$03F6	$1903			BTFSC	STATUS, Z
$03F7	$0AF3			INCF	STACK_3, F
$03F8	$09F8			COMF	STACK_8, F
$03F9	$09F9			COMF	STACK_9, F
$03FA	$09FA			COMF	STACK_10, F
$03FB	$09FB			COMF	STACK_11, F
$03FC	$0AF8			INCF	STACK_8, F
$03FD	$1903			BTFSC	STATUS, Z
$03FE	$0AF9			INCF	STACK_9, F
$03FF	$1903			BTFSC	STATUS, Z
$0400	$0AFA			INCF	STACK_10, F
$0401	$1903			BTFSC	STATUS, Z
$0402	$0AFB			INCF	STACK_11, F
$0403	$2C48			GOTO	END_ALL
$0404	$	C3232SX1:
$0404	$1FF7			BTFSS	STACK_7, 7
$0405	$2C1B			GOTO	C3232SX3
$0406	$1BF3			BTFSC	STACK_3, 7
$0407	$2C15			GOTO	C3232SX2
$0408	$0873			MOVF	STACK_3, W
$0409	$00FB			MOVWF	STACK_11
$040A	$0872			MOVF	STACK_2, W
$040B	$00FA			MOVWF	STACK_10
$040C	$0871			MOVF	STACK_1, W
$040D	$00F9			MOVWF	STACK_9
$040E	$0870			MOVF	STACK_0, W
$040F	$00F8			MOVWF	STACK_8
$0410	$01F3			CLRF	STACK_3
$0411	$01F2			CLRF	STACK_2
$0412	$01F1			CLRF	STACK_1
$0413	$01F0			CLRF	STACK_0
$0414	$2BEB			GOTO	C3232SOK
$0415	$	C3232SX2:
$0415	$01F3			CLRF	STACK_3
$0416	$01F2			CLRF	STACK_2
$0417	$01F1			CLRF	STACK_1
$0418	$01F0			CLRF	STACK_0
$0419	$0AF0			INCF	STACK_0, F
$041A	$3400			RETLW	0x00
$041B	$	C3232SX3:
$041B	$09F3			COMF	STACK_3, F
$041C	$09F2			COMF	STACK_2, F
$041D	$09F1			COMF	STACK_1, F
$041E	$09F0			COMF	STACK_0, F
$041F	$17FC			BSF	STACK_12, 7
$0420	$2BE8			GOTO	C3232S
$0421	$	C3232SX4:
$0421	$0AF8			INCF	STACK_8, F
$0422	$1903			BTFSC	STATUS, Z
$0423	$0AF9			INCF	STACK_9, F
$0424	$1903			BTFSC	STATUS, Z
$0425	$0AFA			INCF	STACK_10, F
$0426	$1903			BTFSC	STATUS, Z
$0427	$0AFB			INCF	STACK_11, F
$0428	$0874			MOVF	STACK_4, W
$0429	$0278			SUBWF	STACK_8, W
$042A	$1D03			BTFSS	STATUS, Z
$042B	$2BEB			GOTO	C3232SOK
$042C	$0875			MOVF	STACK_5, W
$042D	$0279			SUBWF	STACK_9, W
$042E	$1D03			BTFSS	STATUS, Z
$042F	$2BEB			GOTO	C3232SOK
$0430	$0876			MOVF	STACK_6, W
$0431	$027A			SUBWF	STACK_10, W
$0432	$1D03			BTFSS	STATUS, Z
$0433	$2BEB			GOTO	C3232SOK
$0434	$0877			MOVF	STACK_7, W
$0435	$027B			SUBWF	STACK_11, W
$0436	$1D03			BTFSS	STATUS, Z
$0437	$2BEB			GOTO	C3232SOK
$0438	$01FB			CLRF	STACK_11
$0439	$01FA			CLRF	STACK_10
$043A	$01F9			CLRF	STACK_9
$043B	$01F8			CLRF	STACK_8
$043C	$0AF0			INCF	STACK_0, F
$043D	$1903			BTFSC	STATUS, Z
$043E	$0AF1			INCF	STACK_1, F
$043F	$1903			BTFSC	STATUS, Z
$0440	$0AF2			INCF	STACK_2, F
$0441	$1903			BTFSC	STATUS, Z
$0442	$0AF3			INCF	STACK_3, F
$0443	$1FF3			BTFSS	STACK_3, 7
$0444	$2BEB			GOTO	C3232SOK
$0445	$01A1			CLRF	___math_tempb
$0446	$1621			BSF	___math_tempb, 4
$0447	$34FF			RETLW	0xFF
$0448	$	END_ALL:
$0448	$01A1			CLRF	___math_tempb
$0449	$1C7C			BTFSS	STACK_12, 0
$044A	$2C4C			GOTO	avoid_comfrem
$044B	$269F			CALL	_COMFREM
$044C	$	avoid_comfrem:
$044C	$3F00			ADDLW	0x00
$044D	$0008			RETURN
$0511	$	_lcd_gen_send_nibble:
;lcd.h,118 :: 		void lcd_gen_send_nibble(unsigned char dado)
;lcd.h,121 :: 		lcd_d4 =0;
$0511	$1303			BCF	STATUS, RP1
$0512	$1283			BCF	STATUS, RP0
$0513	$1208			BCF	PORTD, 4
;lcd.h,122 :: 		lcd_d5 =0;
$0514	$1288			BCF	PORTD, 5
;lcd.h,123 :: 		lcd_d6 =0;
$0515	$1308			BCF	PORTD, 6
;lcd.h,124 :: 		lcd_d7 =0;
$0516	$1388			BCF	PORTD, 7
;lcd.h,126 :: 		if ((dado & 0x01) >> 0) {lcd_d4 =1;}
$0517	$3001			MOVLW	1
$0518	$0565			ANDWF	FARG_lcd_gen_send_nibble+0, 0
$0519	$00F5			MOVWF	STACK_5
$051A	$0875			MOVF	STACK_5, 0
$051B	$00F0			MOVWF	STACK_0
$051C	$0870			MOVF	STACK_0, 0
$051D	$1903			BTFSC	STATUS, Z
$051E	$2D20			GOTO	L_lcd_gen_send_nibble_6
$051F	$1608			BSF	PORTD, 4
$0520	$	L_lcd_gen_send_nibble_6:
;lcd.h,127 :: 		if ((dado & 0x02) >> 1) {lcd_d5 =1;}
$0520	$3002			MOVLW	2
$0521	$0565			ANDWF	FARG_lcd_gen_send_nibble+0, 0
$0522	$00F5			MOVWF	STACK_5
$0523	$0875			MOVF	STACK_5, 0
$0524	$00F0			MOVWF	STACK_0
$0525	$0CF0			RRF	STACK_0, 1
$0526	$13F0			BCF	STACK_0, 7
$0527	$0870			MOVF	STACK_0, 0
$0528	$1903			BTFSC	STATUS, Z
$0529	$2D2B			GOTO	L_lcd_gen_send_nibble_7
$052A	$1688			BSF	PORTD, 5
$052B	$	L_lcd_gen_send_nibble_7:
;lcd.h,128 :: 		if ((dado & 0x04) >> 2) {lcd_d6 =1;}
$052B	$3004			MOVLW	4
$052C	$0565			ANDWF	FARG_lcd_gen_send_nibble+0, 0
$052D	$00F5			MOVWF	STACK_5
$052E	$0875			MOVF	STACK_5, 0
$052F	$00F0			MOVWF	STACK_0
$0530	$0CF0			RRF	STACK_0, 1
$0531	$13F0			BCF	STACK_0, 7
$0532	$0CF0			RRF	STACK_0, 1
$0533	$13F0			BCF	STACK_0, 7
$0534	$0870			MOVF	STACK_0, 0
$0535	$1903			BTFSC	STATUS, Z
$0536	$2D38			GOTO	L_lcd_gen_send_nibble_8
$0537	$1708			BSF	PORTD, 6
$0538	$	L_lcd_gen_send_nibble_8:
;lcd.h,129 :: 		if ((dado & 0x08) >> 3) {lcd_d7 =1;}
$0538	$3008			MOVLW	8
$0539	$0565			ANDWF	FARG_lcd_gen_send_nibble+0, 0
$053A	$00F5			MOVWF	STACK_5
$053B	$0875			MOVF	STACK_5, 0
$053C	$00F0			MOVWF	STACK_0
$053D	$0CF0			RRF	STACK_0, 1
$053E	$13F0			BCF	STACK_0, 7
$053F	$0CF0			RRF	STACK_0, 1
$0540	$13F0			BCF	STACK_0, 7
$0541	$0CF0			RRF	STACK_0, 1
$0542	$13F0			BCF	STACK_0, 7
$0543	$0870			MOVF	STACK_0, 0
$0544	$1903			BTFSC	STATUS, Z
$0545	$2D47			GOTO	L_lcd_gen_send_nibble_9
$0546	$1788			BSF	PORTD, 7
$0547	$	L_lcd_gen_send_nibble_9:
;lcd.h,131 :: 		EN = 1;
$0547	$1489			BSF	PORTE, 1
;lcd.h,132 :: 		for(c=0; c<=razao;c++) {
$0548	$01E6			CLRF	lcd_gen_send_nibble_c_L0, 1
$0549	$	L_lcd_gen_send_nibble_10:
$0549	$26D4			CALL	_Get_Fosc_kHz
$054A	$30A0			MOVLW	160
$054B	$00F4			MOVWF	STACK_4
$054C	$300F			MOVLW	15
$054D	$00F5			MOVWF	STACK_4+1
$054E	$3000			MOVLW	0
$054F	$00F6			MOVWF	STACK_4+2
$0550	$3000			MOVLW	0
$0551	$00F7			MOVWF	STACK_4+3
$0552	$23B4			CALL	_div_32x32_s
$0553	$3000			MOVLW	0
$0554	$0273			SUBWF	STACK_0+3, 0
$0555	$1D03			BTFSS	STATUS, Z
$0556	$2D61			GOTO	L_lcd_gen_send_nibble_39
$0557	$3000			MOVLW	0
$0558	$0272			SUBWF	STACK_0+2, 0
$0559	$1D03			BTFSS	STATUS, Z
$055A	$2D61			GOTO	L_lcd_gen_send_nibble_39
$055B	$3000			MOVLW	0
$055C	$0271			SUBWF	STACK_0+1, 0
$055D	$1D03			BTFSS	STATUS, Z
$055E	$2D61			GOTO	L_lcd_gen_send_nibble_39
$055F	$0866			MOVF	lcd_gen_send_nibble_c_L0, 0
$0560	$0270			SUBWF	STACK_0, 0
$0561	$	L_lcd_gen_send_nibble_39:
$0561	$1C03			BTFSS	STATUS, C
$0562	$2D68			GOTO	L_lcd_gen_send_nibble_11
;lcd.h,134 :: 		nop
$0563	$0000			NOP
;lcd.h,135 :: 		nop
$0564	$0000			NOP
;lcd.h,136 :: 		nop
$0565	$0000			NOP
;lcd.h,139 :: 		}
$0566	$	L_lcd_gen_send_nibble_12:
;lcd.h,132 :: 		for(c=0; c<=razao;c++) {
$0566	$0AE6			INCF	lcd_gen_send_nibble_c_L0, 1
;lcd.h,139 :: 		}
$0567	$2D49			GOTO	L_lcd_gen_send_nibble_10
$0568	$	L_lcd_gen_send_nibble_11:
;lcd.h,140 :: 		EN = 0;
$0568	$1089			BCF	PORTE, 1
;lcd.h,141 :: 		}
$0569	$0008			RETURN
$06DD	$	_RES032:
$06DD	$1303			BCF	STATUS, RP1
$06DE	$1283			BCF	STATUS, RP0
$06DF	$01F2			CLRF	STACK_2
$06E0	$01F1			CLRF	STACK_1
$06E1	$01F0			CLRF	STACK_0
$06E2	$01F8			CLRF	STACK_8
$06E3	$01F3			CLRF	STACK_3
$06E4	$3000			MOVLW	0
$06E5	$0008			RETURN
$06AD	$	_SETFOV32:
$06AD	$1303			BCF	STATUS, RP1
$06AE	$1283			BCF	STATUS, RP0
$06AF	$14FB			BSF	STACK_11, 1
$06B0	$1FFB			BTFSS	STACK_11, 7
$06B1	$2EB9			GOTO	SETFOV32EEE
$06B2	$30FF			MOVLW	0xFF
$06B3	$00F3			MOVWF	STACK_3
$06B4	$00F2			MOVWF	STACK_2
$06B5	$00F1			MOVWF	STACK_1
$06B6	$00F0			MOVWF	STACK_0
$06B7	$0DFA			RLF	STACK_10, F
$06B8	$0CF2			RRF	STACK_2, F
$06B9	$	SETFOV32EEE:
$06B9	$30FF			MOVLW	0xFF
$06BA	$0008			RETURN
$06BB	$	_SETFUN32:
$06BB	$1303			BCF	STATUS, RP1
$06BC	$1283			BCF	STATUS, RP0
$06BD	$157B			BSF	STACK_11, 2
$06BE	$1FFB			BTFSS	STACK_11, 7
$06BF	$2EC7			GOTO	SETFUN32EEE
$06C0	$3001			MOVLW	0x01
$06C1	$00F3			MOVWF	STACK_3
$06C2	$01F2			CLRF	STACK_2
$06C3	$01F1			CLRF	STACK_1
$06C4	$01F0			CLRF	STACK_0
$06C5	$0DFA			RLF	STACK_10, F
$06C6	$0CF2			RRF	STACK_2, F
$06C7	$	SETFUN32EEE:
$06C7	$30FF			MOVLW	0xFF
$06C8	$0008			RETURN
$06E6	$	_Delay_22us:
;delays.c,15 :: 		void Delay_22us() {
;delays.c,16 :: 		Delay_us(22);
$06E6	$3024			MOVLW	36
$06E7	$1303			BCF	STATUS, RP1
$06E8	$1283			BCF	STATUS, RP0
$06E9	$00FA			MOVWF	STACK_10
$06EA	$0BFA			DECFSZ	STACK_10, F
$06EB	$2EEA			GOTO	$-1
$06EC	$0000			NOP
;delays.c,17 :: 		}
$06ED	$0008			RETURN
$062E	$	_lcd_gen_send_command:
;lcd.h,143 :: 		void lcd_gen_send_command(unsigned char command)
;lcd.h,145 :: 		RS = 0;
$062E	$1303			BCF	STATUS, RP1
$062F	$1283			BCF	STATUS, RP0
$0630	$1009			BCF	PORTE, 0
;lcd.h,146 :: 		lcd_gen_send_nibble(command>>4);
$0631	$0862			MOVF	FARG_lcd_gen_send_command+0, 0
$0632	$00E5			MOVWF	FARG_lcd_gen_send_nibble+0
$0633	$0CE5			RRF	FARG_lcd_gen_send_nibble+0, 1
$0634	$13E5			BCF	FARG_lcd_gen_send_nibble+0, 7
$0635	$0CE5			RRF	FARG_lcd_gen_send_nibble+0, 1
$0636	$13E5			BCF	FARG_lcd_gen_send_nibble+0, 7
$0637	$0CE5			RRF	FARG_lcd_gen_send_nibble+0, 1
$0638	$13E5			BCF	FARG_lcd_gen_send_nibble+0, 7
$0639	$0CE5			RRF	FARG_lcd_gen_send_nibble+0, 1
$063A	$13E5			BCF	FARG_lcd_gen_send_nibble+0, 7
$063B	$2511			CALL	_lcd_gen_send_nibble
;lcd.h,147 :: 		lcd_gen_send_nibble(command & 0x0F);
$063C	$300F			MOVLW	15
$063D	$0562			ANDWF	FARG_lcd_gen_send_command+0, 0
$063E	$00E5			MOVWF	FARG_lcd_gen_send_nibble+0
$063F	$2511			CALL	_lcd_gen_send_nibble
;lcd.h,149 :: 		}
$0640	$0008			RETURN
$0654	$	_strcpy:
$0654	$1303			BCF	STATUS, RP1
$0655	$1283			BCF	STATUS, RP0
$0656	$0862			MOVF	FARG_strcpy+0, 0
$0657	$00E4			MOVWF	strcpy_cp_L0
$0658	$	L_strcpy_31:
$0658	$0864			MOVF	strcpy_cp_L0, 0
$0659	$00F1			MOVWF	STACK_1
$065A	$0AE4			INCF	strcpy_cp_L0, 1
$065B	$0863			MOVF	FARG_strcpy+1, 0
$065C	$0084			MOVWF	FSR
$065D	$0AE3			INCF	FARG_strcpy+1, 1
$065E	$0800			MOVF	INDF, 0
$065F	$00F0			MOVWF	STACK_0
$0660	$0871			MOVF	STACK_1, 0
$0661	$0084			MOVWF	FSR
$0662	$0870			MOVF	STACK_0, 0
$0663	$0080			MOVWF	INDF
$0664	$0871			MOVF	STACK_1, 0
$0665	$0084			MOVWF	FSR
$0666	$0800			MOVF	INDF, 0
$0667	$00F0			MOVWF	STACK_0
$0668	$0870			MOVF	STACK_0, 0
$0669	$1D03			BTFSS	STATUS, Z
$066A	$2E58			GOTO	L_strcpy_31
$066B	$	L_strcpy_32:
$066B	$0862			MOVF	FARG_strcpy+0, 0
$066C	$00F0			MOVWF	STACK_0
$066D	$0008			RETURN
$056A	$	_Compare_Double:
$056A	$1303			BCF	STATUS, RP1
$056B	$1283			BCF	STATUS, RP0
$056C	$01FA			CLRF	STACK_10
$056D	$0873			MOVF	STACK_3, W
$056E	$1D03			BTFSS	STATUS, Z
$056F	$147A			BSF	STACK_10, 0
$0570	$0877			MOVF	STACK_7, W
$0571	$1D03			BTFSS	STATUS, Z
$0572	$14FA			BSF	STACK_10, 1
$0573	$087A			MOVF	STACK_10, W
$0574	$1903			BTFSC	STATUS, Z
$0575	$2DB6			GOTO	COMPARE_EQU
$0576	$3A03			XORLW	0x03
$0577	$1903			BTFSC	STATUS, Z
$0578	$2D81			GOTO	COMPARE_NOTZERO
$0579	$187A			BTFSC	STACK_10, 0
$057A	$2D7E			GOTO	COMPARE_XNOTZERO
$057B	$	COMPARE_YNOTZERO:
$057B	$1FF6			BTFSS	STACK_6, 7
$057C	$2DB4			GOTO	COMPARE_LT
$057D	$2DB2			GOTO	COMPARE_GT
$057E	$	COMPARE_XNOTZERO:
$057E	$1FF2			BTFSS	STACK_2, 7
$057F	$2DB2			GOTO	COMPARE_GT
$0580	$2DB4			GOTO	COMPARE_LT
$0581	$	COMPARE_NOTZERO:
$0581	$0872			MOVF	STACK_2, W
$0582	$3980			ANDLW	0x80
$0583	$00FA			MOVWF	STACK_10
$0584	$13F2			BCF	STACK_2, 7
$0585	$0876			MOVF	STACK_6, W
$0586	$3980			ANDLW	0x80
$0587	$13F6			BCF	STACK_6, 7
$0588	$067A			XORWF	STACK_10, W
$0589	$1903			BTFSC	STATUS, Z
$058A	$2D8F			GOTO	COMPARE_TESTALL
$058B	$087A			MOVF	STACK_10, W
$058C	$1903			BTFSC	STATUS, Z
$058D	$2DB2			GOTO	COMPARE_GT
$058E	$2DB4			GOTO	COMPARE_LT
$058F	$	COMPARE_TESTALL:
$058F	$0877			MOVF	STACK_7, W
$0590	$0273			SUBWF	STACK_3, W
$0591	$1903			BTFSC	STATUS, Z
$0592	$2D96			GOTO	COMPARE_C1
$0593	$1C03			BTFSS	STATUS, C
$0594	$2DAA			GOTO	GT_FALSE
$0595	$2DAE			GOTO	GT_TRUE
$0596	$	COMPARE_C1:
$0596	$0876			MOVF	STACK_6, W
$0597	$0272			SUBWF	STACK_2, W
$0598	$1903			BTFSC	STATUS, Z
$0599	$2D9D			GOTO	COMPARE_C2
$059A	$1C03			BTFSS	STATUS, C
$059B	$2DAA			GOTO	GT_FALSE
$059C	$2DAE			GOTO	GT_TRUE
$059D	$	COMPARE_C2:
$059D	$0875			MOVF	STACK_5, W
$059E	$0271			SUBWF	STACK_1, W
$059F	$1903			BTFSC	STATUS, Z
$05A0	$2DA4			GOTO	COMPARE_C3
$05A1	$1C03			BTFSS	STATUS, C
$05A2	$2DAA			GOTO	GT_FALSE
$05A3	$2DAE			GOTO	GT_TRUE
$05A4	$	COMPARE_C3:
$05A4	$0874			MOVF	STACK_4, W
$05A5	$0270			SUBWF	STACK_0, W
$05A6	$1903			BTFSC	STATUS, Z
$05A7	$2DB6			GOTO	COMPARE_EQU
$05A8	$1803			BTFSC	STATUS, C
$05A9	$2DAE			GOTO	GT_TRUE
$05AA	$	GT_FALSE:
$05AA	$08FA			MOVF	STACK_10, F
$05AB	$1903			BTFSC	STATUS, Z
$05AC	$2DB4			GOTO	COMPARE_LT
$05AD	$2DB2			GOTO	COMPARE_GT
$05AE	$	GT_TRUE:
$05AE	$08FA			MOVF	STACK_10, F
$05AF	$1903			BTFSC	STATUS, Z
$05B0	$2DB2			GOTO	COMPARE_GT
$05B1	$2DB4			GOTO	COMPARE_LT
$05B2	$	COMPARE_GT:
$05B2	$1403			BSF	STATUS, C
$05B3	$0008			RETURN
$05B4	$	COMPARE_LT:
$05B4	$1003			BCF	STATUS, C
$05B5	$0008			RETURN
$05B6	$	COMPARE_EQU:
$05B6	$1403			BSF	STATUS, C
$05B7	$1503			BSF	STATUS, Z
$05B8	$0008			RETURN
$05B9	$0008			RETURN
$04B0	$	_Mul_32x32_FP:
$04B0	$1303			BCF	STATUS, RP1
$04B1	$1283			BCF	STATUS, RP0
$04B2	$	FPM32:
$04B2	$01FB			CLRF	STACK_11
$04B3	$0873			MOVF	STACK_3, W
$04B4	$1D03			BTFSS	STATUS, Z
$04B5	$0877			MOVF	STACK_7, W
$04B6	$1903			BTFSC	STATUS, Z
$04B7	$2D07			GOTO	JPMRES032
$04B8	$	M32BNE0:
$04B8	$0872			MOVF	STACK_2, W
$04B9	$0676			XORWF	STACK_6, W
$04BA	$00FA			MOVWF	STACK_10
$04BB	$0877			MOVF	STACK_7, W
$04BC	$07F3			ADDWF	STACK_3, F
$04BD	$307E			MOVLW	126
$04BE	$1C03			BTFSS	STATUS, C
$04BF	$2CC4			GOTO	MTUN32
$04C0	$02F3			SUBWF	STACK_3, F
$04C1	$1803			BTFSC	STATUS, C
$04C2	$2D0A			GOTO	JPMSETFOV32
$04C3	$2CC7			GOTO	MOK32
$04C4	$	MTUN32:
$04C4	$02F3			SUBWF	STACK_3, F
$04C5	$1C03			BTFSS	STATUS, C
$04C6	$2D0D			GOTO	JPMSETFUN32
$04C7	$	MOK32:
$04C7	$0872			MOVF	STACK_2, W
$04C8	$00F8			MOVWF	STACK_8
$04C9	$0871			MOVF	STACK_1, W
$04CA	$00FC			MOVWF	STACK_12
$04CB	$0870			MOVF	STACK_0, W
$04CC	$00FD			MOVWF	STACK_13
$04CD	$17F8			BSF	STACK_8, 7
$04CE	$17F6			BSF	STACK_6, 7
$04CF	$1003			BCF	STATUS, C
$04D0	$01F2			CLRF	STACK_2
$04D1	$01F1			CLRF	STACK_1
$04D2	$01F0			CLRF	STACK_0
$04D3	$3018			MOVLW	24
$04D4	$00A0			MOVWF	__math_tempbD
$04D5	$	MLOOP32:
$04D5	$1C7D			BTFSS	STACK_13, 0
$04D6	$2CE1			GOTO	MNOADD32
$04D7	$	MADD32:
$04D7	$0874			MOVF	STACK_4, W
$04D8	$07F0			ADDWF	STACK_0, F
$04D9	$0875			MOVF	STACK_5, W
$04DA	$1803			BTFSC	STATUS, C
$04DB	$0F75			INCFSZ	STACK_5, W
$04DC	$07F1			ADDWF	STACK_1, F
$04DD	$0876			MOVF	STACK_6, W
$04DE	$1803			BTFSC	STATUS, C
$04DF	$0F76			INCFSZ	STACK_6, W
$04E0	$07F2			ADDWF	STACK_2, F
$04E1	$	MNOADD32:
$04E1	$0CF2			RRF	STACK_2, F
$04E2	$0CF1			RRF	STACK_1, F
$04E3	$0CF0			RRF	STACK_0, F
$04E4	$0CF8			RRF	STACK_8, F
$04E5	$0CFC			RRF	STACK_12, F
$04E6	$0CFD			RRF	STACK_13, F
$04E7	$1003			BCF	STATUS, C
$04E8	$0BA0			DECFSZ	__math_tempbD, F
$04E9	$2CD5			GOTO	MLOOP32
$04EA	$1BF2			BTFSC	STACK_2, 7
$04EB	$2CF1			GOTO	MROUND32
$04EC	$0DF8			RLF	STACK_8, F
$04ED	$0DF0			RLF	STACK_0, F
$04EE	$0DF1			RLF	STACK_1, F
$04EF	$0DF2			RLF	STACK_2, F
$04F0	$03F3			DECF	STACK_3, F
$04F1	$	MROUND32:
$04F1	$1B7B			BTFSC	STACK_11, 6
$04F2	$1C70			BTFSS	STACK_0, 0
$04F3	$2D03			GOTO	MUL32OK
$04F4	$1FF8			BTFSS	STACK_8, 7
$04F5	$2D03			GOTO	MUL32OK
$04F6	$0AF0			INCF	STACK_0, F
$04F7	$1903			BTFSC	STATUS, Z
$04F8	$0AF1			INCF	STACK_1, F
$04F9	$1903			BTFSC	STATUS, Z
$04FA	$0AF2			INCF	STACK_2, F
$04FB	$1D03			BTFSS	STATUS, Z
$04FC	$2D03			GOTO	MUL32OK
$04FD	$0CF2			RRF	STACK_2, F
$04FE	$0CF1			RRF	STACK_1, F
$04FF	$0CF0			RRF	STACK_0, F
$0500	$0AF3			INCF	STACK_3, F
$0501	$1903			BTFSC	STATUS, Z
$0502	$2D0A			GOTO	JPMSETFOV32
$0503	$	MUL32OK:
$0503	$1FFA			BTFSS	STACK_10, 7
$0504	$13F2			BCF	STACK_2, 7
$0505	$3000			MOVLW	0x00
$0506	$2D0F			GOTO	MUL32EEE
$0507	$	JPMRES032:
$0507	$3001			MOVLW	0x01
$0508	$26DD			CALL	_RES032
$0509	$2D0F			GOTO	MUL32EEE
$050A	$	JPMSETFOV32:
$050A	$3002			MOVLW	0x02
$050B	$26AD			CALL	_SETFOV32
$050C	$2D0F			GOTO	MUL32EEE
$050D	$	JPMSETFUN32:
$050D	$3004			MOVLW	0x04
$050E	$26BB			CALL	_SETFUN32
$050F	$	MUL32EEE:
$050F	$0000			NOP
$0510	$0008			RETURN
$066E	$	_Div_8x8_U:
$066E	$1303			BCF	STATUS, RP1
$066F	$1283			BCF	STATUS, RP0
$0670	$01F8			CLRF	STACK_8, F
$0671	$3008			MOVLW	8
$0672	$00FC			MOVWF	STACK_12
$0673	$0D70			RLF	STACK_0, W
$0674	$0DF8			RLF	STACK_8, F
$0675	$0874			MOVF	STACK_4, W
$0676	$02F8			SUBWF	STACK_8, F
$0677	$1803			BTFSC	STATUS, C
$0678	$2E7B			GOTO	$+3
$0679	$07F8			ADDWF	STACK_8, F
$067A	$1003			BCF	STATUS, C
$067B	$0DF0			RLF	STACK_0, F
$067C	$0BFC			DECFSZ	STACK_12, F
$067D	$2E73			GOTO	$-10
$067E	$0008			RETURN
$0641	$	_lcd_gen_send_data:
;lcd.h,151 :: 		void lcd_gen_send_data(unsigned char valor)
;lcd.h,153 :: 		RS = 1;
$0641	$1303			BCF	STATUS, RP1
$0642	$1283			BCF	STATUS, RP0
$0643	$1409			BSF	PORTE, 0
;lcd.h,154 :: 		lcd_gen_send_nibble(valor>>4);
$0644	$0862			MOVF	FARG_lcd_gen_send_data+0, 0
$0645	$00E5			MOVWF	FARG_lcd_gen_send_nibble+0
$0646	$0CE5			RRF	FARG_lcd_gen_send_nibble+0, 1
$0647	$13E5			BCF	FARG_lcd_gen_send_nibble+0, 7
$0648	$0CE5			RRF	FARG_lcd_gen_send_nibble+0, 1
$0649	$13E5			BCF	FARG_lcd_gen_send_nibble+0, 7
$064A	$0CE5			RRF	FARG_lcd_gen_send_nibble+0, 1
$064B	$13E5			BCF	FARG_lcd_gen_send_nibble+0, 7
$064C	$0CE5			RRF	FARG_lcd_gen_send_nibble+0, 1
$064D	$13E5			BCF	FARG_lcd_gen_send_nibble+0, 7
$064E	$2511			CALL	_lcd_gen_send_nibble
;lcd.h,155 :: 		lcd_gen_send_nibble(valor & 0x0F);
$064F	$300F			MOVLW	15
$0650	$0562			ANDWF	FARG_lcd_gen_send_data+0, 0
$0651	$00E5			MOVWF	FARG_lcd_gen_send_nibble+0
$0652	$2511			CALL	_lcd_gen_send_nibble
;lcd.h,157 :: 		}
$0653	$0008			RETURN
$0600	$	_Adc_Read:
$0600	$1303			BCF	STATUS, RP1
$0601	$1283			BCF	STATUS, RP0
$0602	$019F			CLRF	ADCON0, 1
$0603	$30C0			MOVLW	192
$0604	$049F			IORWF	ADCON0, 1
$0605	$1683			BSF	STATUS, RP0
$0606	$171F			BSF	ADCON1, 6
$0607	$179F			BSF	ADCON1, 7
$0608	$1283			BCF	STATUS, RP0
$0609	$084B			MOVF	FARG_Adc_Read+0, 0
$060A	$00F0			MOVWF	STACK_0
$060B	$0DF0			RLF	STACK_0, 1
$060C	$1070			BCF	STACK_0, 0
$060D	$0DF0			RLF	STACK_0, 1
$060E	$1070			BCF	STACK_0, 0
$060F	$0DF0			RLF	STACK_0, 1
$0610	$1070			BCF	STACK_0, 0
$0611	$0870			MOVF	STACK_0, 0
$0612	$049F			IORWF	ADCON0, 1
$0613	$141F			BSF	ADCON0, 0
$0614	$26E6			CALL	_Delay_22us
$0615	$151F			BSF	ADCON0, 2
$0616	$	L_Adc_Read_0:
$0616	$1D1F			BTFSS	ADCON0, 2
$0617	$2E1A			GOTO	L_Adc_Read_1
$0618	$0000			NOP
$0619	$2E16			GOTO	L_Adc_Read_0
$061A	$	L_Adc_Read_1:
$061A	$101F			BCF	ADCON0, 0
$061B	$3008			MOVLW	8
$061C	$00F2			MOVWF	STACK_2
$061D	$081E			MOVF	ADRESH, 0
$061E	$00F0			MOVWF	STACK_0
$061F	$01F1			CLRF	STACK_0+1
$0620	$0872			MOVF	STACK_2, 0
$0621	$	L_Adc_Read_2:
$0621	$1903			BTFSC	STATUS, Z
$0622	$2E28			GOTO	L_Adc_Read_3
$0623	$0DF0			RLF	STACK_0, 1
$0624	$0DF1			RLF	STACK_0+1, 1
$0625	$1070			BCF	STACK_0, 0
$0626	$3FFF			ADDLW	255
$0627	$2E21			GOTO	L_Adc_Read_2
$0628	$	L_Adc_Read_3:
$0628	$1683			BSF	STATUS, RP0
$0629	$081E			MOVF	ADRESL, 0
$062A	$04F0			IORWF	STACK_0, 1
$062B	$3000			MOVLW	0
$062C	$04F1			IORWF	STACK_0+1, 1
$062D	$0008			RETURN
$06EE	$	_lcd_gen_setup:
;lcd.h,97 :: 		void  lcd_gen_setup()
;lcd.h,101 :: 		}
$06EE	$	L_lcd_gen_setup_0:
;lcd.h,106 :: 		}
$06EE	$	L_lcd_gen_setup_1:
;lcd.h,110 :: 		}
$06EE	$	L_lcd_gen_setup_2:
;lcd.h,112 :: 		TRISD = TRISD & 0x0F;
$06EE	$300F			MOVLW	15
$06EF	$1303			BCF	STATUS, RP1
$06F0	$1683			BSF	STATUS, RP0
$06F1	$0588			ANDWF	TRISD, 1
;lcd.h,113 :: 		TRISE = TRISE & 0x04;
$06F2	$3004			MOVLW	4
$06F3	$0589			ANDWF	TRISE, 1
;lcd.h,114 :: 		}
$06F4	$	L_lcd_gen_setup_5:
;lcd.h,115 :: 		}
$06F4	$0008			RETURN
$0316	$	_lcd_gen_init:
;lcd.h,159 :: 		void lcd_gen_init( )
;lcd.h,163 :: 		delay_ms(40);
$0316	$3002			MOVLW	2
$0317	$1303			BCF	STATUS, RP1
$0318	$1283			BCF	STATUS, RP0
$0319	$00FC			MOVWF	STACK_12
$031A	$30FF			MOVLW	255
$031B	$00FB			MOVWF	STACK_11
$031C	$30FF			MOVLW	255
$031D	$00FA			MOVWF	STACK_10
$031E	$0BFC			DECFSZ	STACK_12, F
$031F	$2B21			GOTO	$+2
$0320	$2B28			GOTO	$+8
$0321	$0BFB			DECFSZ	STACK_11, F
$0322	$2B24			GOTO	$+2
$0323	$2B27			GOTO	$+4
$0324	$0BFA			DECFSZ	STACK_10, F
$0325	$2B24			GOTO	$-1
$0326	$2B21			GOTO	$-5
$0327	$2B1E			GOTO	$-9
$0328	$3006			MOVLW	6
$0329	$00FB			MOVWF	STACK_11
$032A	$30FF			MOVLW	255
$032B	$00FA			MOVWF	STACK_10
$032C	$0BFB			DECFSZ	STACK_11, F
$032D	$2B2F			GOTO	$+2
$032E	$2B32			GOTO	$+4
$032F	$0BFA			DECFSZ	STACK_10, F
$0330	$2B2F			GOTO	$-1
$0331	$2B2C			GOTO	$-5
$0332	$300A			MOVLW	10
$0333	$00FA			MOVWF	STACK_10
$0334	$0BFA			DECFSZ	STACK_10, F
$0335	$2B34			GOTO	$-1
;lcd.h,164 :: 		RS = 0;
$0336	$1009			BCF	PORTE, 0
;lcd.h,165 :: 		lcd_gen_send_nibble(0x03);
$0337	$3003			MOVLW	3
$0338	$00E5			MOVWF	FARG_lcd_gen_send_nibble+0
$0339	$2511			CALL	_lcd_gen_send_nibble
;lcd.h,166 :: 		delay_ms(5);
$033A	$3021			MOVLW	33
$033B	$00FB			MOVWF	STACK_11
$033C	$30FF			MOVLW	255
$033D	$00FA			MOVWF	STACK_10
$033E	$0BFB			DECFSZ	STACK_11, F
$033F	$2B41			GOTO	$+2
$0340	$2B44			GOTO	$+4
$0341	$0BFA			DECFSZ	STACK_10, F
$0342	$2B41			GOTO	$-1
$0343	$2B3E			GOTO	$-5
$0344	$3060			MOVLW	96
$0345	$00FA			MOVWF	STACK_10
$0346	$0BFA			DECFSZ	STACK_10, F
$0347	$2B46			GOTO	$-1
$0348	$0000			NOP
$0349	$0000			NOP
;lcd.h,167 :: 		lcd_gen_send_nibble(0x03);
$034A	$3003			MOVLW	3
$034B	$00E5			MOVWF	FARG_lcd_gen_send_nibble+0
$034C	$2511			CALL	_lcd_gen_send_nibble
;lcd.h,169 :: 		lcd_gen_send_nibble(0x03);
$034D	$3003			MOVLW	3
$034E	$00E5			MOVWF	FARG_lcd_gen_send_nibble+0
$034F	$2511			CALL	_lcd_gen_send_nibble
;lcd.h,171 :: 		lcd_gen_send_nibble(0x02);
$0350	$3002			MOVLW	2
$0351	$00E5			MOVWF	FARG_lcd_gen_send_nibble+0
$0352	$2511			CALL	_lcd_gen_send_nibble
;lcd.h,172 :: 		for(c=0; c<45;c++); // aproximadamente 100us, para 4Mhz coloque 8
$0353	$01CB			CLRF	lcd_gen_init_c_L0
$0354	$01CC			CLRF	lcd_gen_init_c_L0+1
$0355	$	L_lcd_gen_init_13:
$0355	$3080			MOVLW	128
$0356	$064C			XORWF	lcd_gen_init_c_L0+1, 0
$0357	$00F0			MOVWF	STACK_0
$0358	$3080			MOVLW	128
$0359	$0270			SUBWF	STACK_0, 0
$035A	$1D03			BTFSS	STATUS, Z
$035B	$2B5E			GOTO	L_lcd_gen_init_40
$035C	$302D			MOVLW	45
$035D	$024B			SUBWF	lcd_gen_init_c_L0, 0
$035E	$	L_lcd_gen_init_40:
$035E	$1803			BTFSC	STATUS, C
$035F	$2B64			GOTO	L_lcd_gen_init_14
$0360	$	L_lcd_gen_init_15:
$0360	$0ACB			INCF	lcd_gen_init_c_L0, 1
$0361	$1903			BTFSC	STATUS, Z
$0362	$0ACC			INCF	lcd_gen_init_c_L0+1, 1
$0363	$2B55			GOTO	L_lcd_gen_init_13
$0364	$	L_lcd_gen_init_14:
;lcd.h,174 :: 		lcd_gen_send_command(0x28);
$0364	$3028			MOVLW	40
$0365	$00E2			MOVWF	FARG_lcd_gen_send_command+0
$0366	$262E			CALL	_lcd_gen_send_command
;lcd.h,175 :: 		for(c=0; c<45;c++);
$0367	$01CB			CLRF	lcd_gen_init_c_L0
$0368	$01CC			CLRF	lcd_gen_init_c_L0+1
$0369	$	L_lcd_gen_init_16:
$0369	$3080			MOVLW	128
$036A	$064C			XORWF	lcd_gen_init_c_L0+1, 0
$036B	$00F0			MOVWF	STACK_0
$036C	$3080			MOVLW	128
$036D	$0270			SUBWF	STACK_0, 0
$036E	$1D03			BTFSS	STATUS, Z
$036F	$2B72			GOTO	L_lcd_gen_init_41
$0370	$302D			MOVLW	45
$0371	$024B			SUBWF	lcd_gen_init_c_L0, 0
$0372	$	L_lcd_gen_init_41:
$0372	$1803			BTFSC	STATUS, C
$0373	$2B78			GOTO	L_lcd_gen_init_17
$0374	$	L_lcd_gen_init_18:
$0374	$0ACB			INCF	lcd_gen_init_c_L0, 1
$0375	$1903			BTFSC	STATUS, Z
$0376	$0ACC			INCF	lcd_gen_init_c_L0+1, 1
$0377	$2B69			GOTO	L_lcd_gen_init_16
$0378	$	L_lcd_gen_init_17:
;lcd.h,176 :: 		lcd_gen_send_command(0x01);
$0378	$3001			MOVLW	1
$0379	$00E2			MOVWF	FARG_lcd_gen_send_command+0
$037A	$262E			CALL	_lcd_gen_send_command
;lcd.h,177 :: 		delay_ms(2);
$037B	$300D			MOVLW	13
$037C	$00FB			MOVWF	STACK_11
$037D	$30FF			MOVLW	255
$037E	$00FA			MOVWF	STACK_10
$037F	$0BFB			DECFSZ	STACK_11, F
$0380	$2B82			GOTO	$+2
$0381	$2B85			GOTO	$+4
$0382	$0BFA			DECFSZ	STACK_10, F
$0383	$2B82			GOTO	$-1
$0384	$2B7F			GOTO	$-5
$0385	$30F3			MOVLW	243
$0386	$00FA			MOVWF	STACK_10
$0387	$0BFA			DECFSZ	STACK_10, F
$0388	$2B87			GOTO	$-1
$0389	$0000			NOP
;lcd.h,178 :: 		lcd_gen_send_command(0x0C);
$038A	$300C			MOVLW	12
$038B	$00E2			MOVWF	FARG_lcd_gen_send_command+0
$038C	$262E			CALL	_lcd_gen_send_command
;lcd.h,179 :: 		for(c=0; c<45;c++);
$038D	$01CB			CLRF	lcd_gen_init_c_L0
$038E	$01CC			CLRF	lcd_gen_init_c_L0+1
$038F	$	L_lcd_gen_init_19:
$038F	$3080			MOVLW	128
$0390	$064C			XORWF	lcd_gen_init_c_L0+1, 0
$0391	$00F0			MOVWF	STACK_0
$0392	$3080			MOVLW	128
$0393	$0270			SUBWF	STACK_0, 0
$0394	$1D03			BTFSS	STATUS, Z
$0395	$2B98			GOTO	L_lcd_gen_init_42
$0396	$302D			MOVLW	45
$0397	$024B			SUBWF	lcd_gen_init_c_L0, 0
$0398	$	L_lcd_gen_init_42:
$0398	$1803			BTFSC	STATUS, C
$0399	$2B9E			GOTO	L_lcd_gen_init_20
$039A	$	L_lcd_gen_init_21:
$039A	$0ACB			INCF	lcd_gen_init_c_L0, 1
$039B	$1903			BTFSC	STATUS, Z
$039C	$0ACC			INCF	lcd_gen_init_c_L0+1, 1
$039D	$2B8F			GOTO	L_lcd_gen_init_19
$039E	$	L_lcd_gen_init_20:
;lcd.h,180 :: 		lcd_gen_send_command(0x06);
$039E	$3006			MOVLW	6
$039F	$00E2			MOVWF	FARG_lcd_gen_send_command+0
$03A0	$262E			CALL	_lcd_gen_send_command
;lcd.h,181 :: 		for(c=0; c<45;c++);
$03A1	$01CB			CLRF	lcd_gen_init_c_L0
$03A2	$01CC			CLRF	lcd_gen_init_c_L0+1
$03A3	$	L_lcd_gen_init_22:
$03A3	$3080			MOVLW	128
$03A4	$064C			XORWF	lcd_gen_init_c_L0+1, 0
$03A5	$00F0			MOVWF	STACK_0
$03A6	$3080			MOVLW	128
$03A7	$0270			SUBWF	STACK_0, 0
$03A8	$1D03			BTFSS	STATUS, Z
$03A9	$2BAC			GOTO	L_lcd_gen_init_43
$03AA	$302D			MOVLW	45
$03AB	$024B			SUBWF	lcd_gen_init_c_L0, 0
$03AC	$	L_lcd_gen_init_43:
$03AC	$1803			BTFSC	STATUS, C
$03AD	$2BB2			GOTO	L_lcd_gen_init_23
$03AE	$	L_lcd_gen_init_24:
$03AE	$0ACB			INCF	lcd_gen_init_c_L0, 1
$03AF	$1903			BTFSC	STATUS, Z
$03B0	$0ACC			INCF	lcd_gen_init_c_L0+1, 1
$03B1	$2BA3			GOTO	L_lcd_gen_init_22
$03B2	$	L_lcd_gen_init_23:
;lcd.h,183 :: 		RS =1;   //aceita dados
$03B2	$1409			BSF	PORTE, 0
;lcd.h,184 :: 		}
$03B3	$0008			RETURN
$001F	$	_FloatToStr:
$001F	$304E			MOVLW	78
$0020	$1303			BCF	STATUS, RP1
$0021	$1283			BCF	STATUS, RP0
$0022	$00D0			MOVWF	lstr1_conv+0
$0023	$3061			MOVLW	97
$0024	$00D1			MOVWF	lstr1_conv+1
$0025	$304E			MOVLW	78
$0026	$00D2			MOVWF	lstr1_conv+2
$0027	$01D3			CLRF	lstr1_conv+3
$0028	$3030			MOVLW	48
$0029	$00D4			MOVWF	lstr2_conv+0
$002A	$01D5			CLRF	lstr2_conv+1
$002B	$3049			MOVLW	73
$002C	$00D6			MOVWF	lstr3_conv+0
$002D	$304E			MOVLW	78
$002E	$00D7			MOVWF	lstr3_conv+1
$002F	$3046			MOVLW	70
$0030	$00D8			MOVWF	lstr3_conv+2
$0031	$01D9			CLRF	lstr3_conv+3
$0032	$01DA			CLRF	FloatToStr_bpoint_L0, 1
$0033	$01DD			CLRF	FloatToStr_dexpon_L0, 1
$0034	$084B			MOVF	FARG_FloatToStr+0, 0
$0035	$00DE			MOVWF	FloatToStr_un_L0
$0036	$084C			MOVF	FARG_FloatToStr+1, 0
$0037	$00DF			MOVWF	FloatToStr_un_L0+1
$0038	$084D			MOVF	FARG_FloatToStr+2, 0
$0039	$00E0			MOVWF	FloatToStr_un_L0+2
$003A	$084E			MOVF	FARG_FloatToStr+3, 0
$003B	$00E1			MOVWF	FloatToStr_un_L0+3
$003C	$0861			MOVF	FloatToStr_un_L0+3, 0
$003D	$3AFF			XORLW	255
$003E	$1D03			BTFSS	STATUS, Z
$003F	$284A			GOTO	L_FloatToStr_60
$0040	$0860			MOVF	FloatToStr_un_L0+2, 0
$0041	$3AFF			XORLW	255
$0042	$1D03			BTFSS	STATUS, Z
$0043	$284A			GOTO	L_FloatToStr_60
$0044	$085F			MOVF	FloatToStr_un_L0+1, 0
$0045	$3AFF			XORLW	255
$0046	$1D03			BTFSS	STATUS, Z
$0047	$284A			GOTO	L_FloatToStr_60
$0048	$085E			MOVF	FloatToStr_un_L0, 0
$0049	$3AFF			XORLW	255
$004A	$	L_FloatToStr_60:
$004A	$1D03			BTFSS	STATUS, Z
$004B	$2854			GOTO	L_FloatToStr_29
$004C	$084F			MOVF	FARG_FloatToStr+4, 0
$004D	$00E2			MOVWF	FARG_strcpy+0
$004E	$3050			MOVLW	lstr1_conv
$004F	$00E3			MOVWF	FARG_strcpy+1
$0050	$2654			CALL	_strcpy
$0051	$3003			MOVLW	3
$0052	$00F0			MOVWF	STACK_0
$0053	$0008			RETURN
$0054	$	L_FloatToStr_29:
$0054	$3001			MOVLW	1
$0055	$00DB			MOVWF	FloatToStr_i_L0
$0056	$1FE0			BTFSS	FloatToStr_un_L0+2, 7
$0057	$2860			GOTO	L_FloatToStr_30
$0058	$3080			MOVLW	128
$0059	$06E0			XORWF	FloatToStr_un_L0+2, 1
$005A	$0ADB			INCF	FloatToStr_i_L0, 1
$005B	$084F			MOVF	FARG_FloatToStr+4, 0
$005C	$0084			MOVWF	FSR
$005D	$302D			MOVLW	45
$005E	$0080			MOVWF	INDF
$005F	$0ACF			INCF	FARG_FloatToStr+4, 1
$0060	$	L_FloatToStr_30:
$0060	$3000			MOVLW	0
$0061	$00F0			MOVWF	STACK_0
$0062	$0661			XORWF	FloatToStr_un_L0+3, 0
$0063	$1D03			BTFSS	STATUS, Z
$0064	$286F			GOTO	L_FloatToStr_61
$0065	$0870			MOVF	STACK_0, 0
$0066	$0660			XORWF	FloatToStr_un_L0+2, 0
$0067	$1D03			BTFSS	STATUS, Z
$0068	$286F			GOTO	L_FloatToStr_61
$0069	$0870			MOVF	STACK_0, 0
$006A	$065F			XORWF	FloatToStr_un_L0+1, 0
$006B	$1D03			BTFSS	STATUS, Z
$006C	$286F			GOTO	L_FloatToStr_61
$006D	$085E			MOVF	FloatToStr_un_L0, 0
$006E	$3A00			XORLW	0
$006F	$	L_FloatToStr_61:
$006F	$1D03			BTFSS	STATUS, Z
$0070	$2878			GOTO	L_FloatToStr_31
$0071	$084F			MOVF	FARG_FloatToStr+4, 0
$0072	$00E2			MOVWF	FARG_strcpy+0
$0073	$3054			MOVLW	lstr2_conv
$0074	$00E3			MOVWF	FARG_strcpy+1
$0075	$2654			CALL	_strcpy
$0076	$01F0			CLRF	STACK_0, 1
$0077	$0008			RETURN
$0078	$	L_FloatToStr_31:
$0078	$0861			MOVF	FloatToStr_un_L0+3, 0
$0079	$3A7F			XORLW	127
$007A	$1D03			BTFSS	STATUS, Z
$007B	$2886			GOTO	L_FloatToStr_62
$007C	$0860			MOVF	FloatToStr_un_L0+2, 0
$007D	$3A80			XORLW	128
$007E	$1D03			BTFSS	STATUS, Z
$007F	$2886			GOTO	L_FloatToStr_62
$0080	$085F			MOVF	FloatToStr_un_L0+1, 0
$0081	$3A00			XORLW	0
$0082	$1D03			BTFSS	STATUS, Z
$0083	$2886			GOTO	L_FloatToStr_62
$0084	$085E			MOVF	FloatToStr_un_L0, 0
$0085	$3A00			XORLW	0
$0086	$	L_FloatToStr_62:
$0086	$1D03			BTFSS	STATUS, Z
$0087	$2890			GOTO	L_FloatToStr_32
$0088	$084F			MOVF	FARG_FloatToStr+4, 0
$0089	$00E2			MOVWF	FARG_strcpy+0
$008A	$3056			MOVLW	lstr3_conv
$008B	$00E3			MOVWF	FARG_strcpy+1
$008C	$2654			CALL	_strcpy
$008D	$085B			MOVF	FloatToStr_i_L0, 0
$008E	$00F0			MOVWF	STACK_0
$008F	$0008			RETURN
$0090	$	L_FloatToStr_32:
$0090	$	L_FloatToStr_33:
$0090	$3000			MOVLW	0
$0091	$00F4			MOVWF	STACK_4
$0092	$3000			MOVLW	0
$0093	$00F5			MOVWF	STACK_4+1
$0094	$3000			MOVLW	0
$0095	$00F6			MOVWF	STACK_4+2
$0096	$307F			MOVLW	127
$0097	$00F7			MOVWF	STACK_4+3
$0098	$085E			MOVF	FloatToStr_un_L0, 0
$0099	$00F0			MOVWF	STACK_0
$009A	$085F			MOVF	FloatToStr_un_L0+1, 0
$009B	$00F1			MOVWF	STACK_0+1
$009C	$0860			MOVF	FloatToStr_un_L0+2, 0
$009D	$00F2			MOVWF	STACK_0+2
$009E	$0861			MOVF	FloatToStr_un_L0+3, 0
$009F	$00F3			MOVWF	STACK_0+3
$00A0	$256A			CALL	_compare_double
$00A1	$3001			MOVLW	1
$00A2	$1803			BTFSC	STATUS, C
$00A3	$3000			MOVLW	0
$00A4	$00F0			MOVWF	STACK_0
$00A5	$0870			MOVF	STACK_0, 0
$00A6	$1903			BTFSC	STATUS, Z
$00A7	$28C3			GOTO	L_FloatToStr_34
$00A8	$085E			MOVF	FloatToStr_un_L0, 0
$00A9	$00F0			MOVWF	STACK_0
$00AA	$085F			MOVF	FloatToStr_un_L0+1, 0
$00AB	$00F1			MOVWF	STACK_0+1
$00AC	$0860			MOVF	FloatToStr_un_L0+2, 0
$00AD	$00F2			MOVWF	STACK_0+2
$00AE	$0861			MOVF	FloatToStr_un_L0+3, 0
$00AF	$00F3			MOVWF	STACK_0+3
$00B0	$3000			MOVLW	0
$00B1	$00F4			MOVWF	STACK_4
$00B2	$3000			MOVLW	0
$00B3	$00F5			MOVWF	STACK_4+1
$00B4	$3020			MOVLW	32
$00B5	$00F6			MOVWF	STACK_4+2
$00B6	$3082			MOVLW	130
$00B7	$00F7			MOVWF	STACK_4+3
$00B8	$24B0			CALL	_mul_32x32_fp
$00B9	$0870			MOVF	STACK_0, 0
$00BA	$00DE			MOVWF	FloatToStr_un_L0
$00BB	$0871			MOVF	STACK_0+1, 0
$00BC	$00DF			MOVWF	FloatToStr_un_L0+1
$00BD	$0872			MOVF	STACK_0+2, 0
$00BE	$00E0			MOVWF	FloatToStr_un_L0+2
$00BF	$0873			MOVF	STACK_0+3, 0
$00C0	$00E1			MOVWF	FloatToStr_un_L0+3
$00C1	$03DD			DECF	FloatToStr_dexpon_L0, 1
$00C2	$2890			GOTO	L_FloatToStr_33
$00C3	$	L_FloatToStr_34:
$00C3	$	L_FloatToStr_35:
$00C3	$3000			MOVLW	0
$00C4	$00F4			MOVWF	STACK_4
$00C5	$3000			MOVLW	0
$00C6	$00F5			MOVWF	STACK_4+1
$00C7	$3020			MOVLW	32
$00C8	$00F6			MOVWF	STACK_4+2
$00C9	$3082			MOVLW	130
$00CA	$00F7			MOVWF	STACK_4+3
$00CB	$085E			MOVF	FloatToStr_un_L0, 0
$00CC	$00F0			MOVWF	STACK_0
$00CD	$085F			MOVF	FloatToStr_un_L0+1, 0
$00CE	$00F1			MOVWF	STACK_0+1
$00CF	$0860			MOVF	FloatToStr_un_L0+2, 0
$00D0	$00F2			MOVWF	STACK_0+2
$00D1	$0861			MOVF	FloatToStr_un_L0+3, 0
$00D2	$00F3			MOVWF	STACK_0+3
$00D3	$256A			CALL	_compare_double
$00D4	$3001			MOVLW	1
$00D5	$1C03			BTFSS	STATUS, C
$00D6	$3000			MOVLW	0
$00D7	$00F0			MOVWF	STACK_0
$00D8	$0870			MOVF	STACK_0, 0
$00D9	$1903			BTFSC	STATUS, Z
$00DA	$28F6			GOTO	L_FloatToStr_36
$00DB	$085E			MOVF	FloatToStr_un_L0, 0
$00DC	$00F0			MOVWF	STACK_0
$00DD	$085F			MOVF	FloatToStr_un_L0+1, 0
$00DE	$00F1			MOVWF	STACK_0+1
$00DF	$0860			MOVF	FloatToStr_un_L0+2, 0
$00E0	$00F2			MOVWF	STACK_0+2
$00E1	$0861			MOVF	FloatToStr_un_L0+3, 0
$00E2	$00F3			MOVWF	STACK_0+3
$00E3	$30CD			MOVLW	205
$00E4	$00F4			MOVWF	STACK_4
$00E5	$30CC			MOVLW	204
$00E6	$00F5			MOVWF	STACK_4+1
$00E7	$304C			MOVLW	76
$00E8	$00F6			MOVWF	STACK_4+2
$00E9	$307B			MOVLW	123
$00EA	$00F7			MOVWF	STACK_4+3
$00EB	$24B0			CALL	_mul_32x32_fp
$00EC	$0870			MOVF	STACK_0, 0
$00ED	$00DE			MOVWF	FloatToStr_un_L0
$00EE	$0871			MOVF	STACK_0+1, 0
$00EF	$00DF			MOVWF	FloatToStr_un_L0+1
$00F0	$0872			MOVF	STACK_0+2, 0
$00F1	$00E0			MOVWF	FloatToStr_un_L0+2
$00F2	$0873			MOVF	STACK_0+3, 0
$00F3	$00E1			MOVWF	FloatToStr_un_L0+3
$00F4	$0ADD			INCF	FloatToStr_dexpon_L0, 1
$00F5	$28C3			GOTO	L_FloatToStr_35
$00F6	$	L_FloatToStr_36:
$00F6	$30FF			MOVLW	255
$00F7	$055E			ANDWF	FloatToStr_un_L0, 0
$00F8	$00F5			MOVWF	STACK_5
$00F9	$30FF			MOVLW	255
$00FA	$055F			ANDWF	FloatToStr_un_L0+1, 0
$00FB	$00F6			MOVWF	STACK_5+1
$00FC	$307F			MOVLW	127
$00FD	$0560			ANDWF	FloatToStr_un_L0+2, 0
$00FE	$00F7			MOVWF	STACK_5+2
$00FF	$3000			MOVLW	0
$0100	$0561			ANDWF	FloatToStr_un_L0+3, 0
$0101	$00F8			MOVWF	STACK_5+3
$0102	$0875			MOVF	STACK_5, 0
$0103	$00F0			MOVWF	STACK_0
$0104	$0876			MOVF	STACK_5+1, 0
$0105	$00F1			MOVWF	STACK_0+1
$0106	$0877			MOVF	STACK_5+2, 0
$0107	$00F2			MOVWF	STACK_0+2
$0108	$0878			MOVF	STACK_5+3, 0
$0109	$00F3			MOVWF	STACK_0+3
$010A	$0DF0			RLF	STACK_0, 1
$010B	$0DF1			RLF	STACK_0+1, 1
$010C	$0DF2			RLF	STACK_0+2, 1
$010D	$0DF3			RLF	STACK_0+3, 1
$010E	$1070			BCF	STACK_0, 0
$010F	$3000			MOVLW	0
$0110	$05DE			ANDWF	FloatToStr_un_L0, 1
$0111	$3000			MOVLW	0
$0112	$05DF			ANDWF	FloatToStr_un_L0+1, 1
$0113	$3000			MOVLW	0
$0114	$05E0			ANDWF	FloatToStr_un_L0+2, 1
$0115	$30FF			MOVLW	255
$0116	$05E1			ANDWF	FloatToStr_un_L0+3, 1
$0117	$0870			MOVF	STACK_0, 0
$0118	$04DE			IORWF	FloatToStr_un_L0, 1
$0119	$0871			MOVF	STACK_0+1, 0
$011A	$04DF			IORWF	FloatToStr_un_L0+1, 1
$011B	$0872			MOVF	STACK_0+2, 0
$011C	$04E0			IORWF	FloatToStr_un_L0+2, 1
$011D	$0873			MOVF	STACK_0+3, 0
$011E	$04E1			IORWF	FloatToStr_un_L0+3, 1
$011F	$307F			MOVLW	127
$0120	$0261			SUBWF	FloatToStr_un_L0+3, 0
$0121	$00F0			MOVWF	STACK_0
$0122	$0870			MOVF	STACK_0, 0
$0123	$00DC			MOVWF	FloatToStr_d_L0
$0124	$3001			MOVLW	1
$0125	$00E1			MOVWF	FloatToStr_un_L0+3
$0126	$0870			MOVF	STACK_0, 0
$0127	$	L_FloatToStr_63:
$0127	$1903			BTFSC	STATUS, Z
$0128	$2930			GOTO	L_FloatToStr_64
$0129	$0DDE			RLF	FloatToStr_un_L0, 1
$012A	$0DDF			RLF	FloatToStr_un_L0+1, 1
$012B	$0DE0			RLF	FloatToStr_un_L0+2, 1
$012C	$0DE1			RLF	FloatToStr_un_L0+3, 1
$012D	$105E			BCF	FloatToStr_un_L0, 0
$012E	$3FFF			ADDLW	255
$012F	$2927			GOTO	L_FloatToStr_63
$0130	$	L_FloatToStr_64:
$0130	$0861			MOVF	FloatToStr_un_L0+3, 0
$0131	$3F30			ADDLW	48
$0132	$00F0			MOVWF	STACK_0
$0133	$084F			MOVF	FARG_FloatToStr+4, 0
$0134	$0084			MOVWF	FSR
$0135	$0870			MOVF	STACK_0, 0
$0136	$0080			MOVWF	INDF
$0137	$0ACF			INCF	FARG_FloatToStr+4, 1
$0138	$3080			MOVLW	128
$0139	$065D			XORWF	FloatToStr_dexpon_L0, 0
$013A	$00F0			MOVWF	STACK_0
$013B	$3080			MOVLW	128
$013C	$3A01			XORLW	1
$013D	$0270			SUBWF	STACK_0, 0
$013E	$1C03			BTFSS	STATUS, C
$013F	$2948			GOTO	L374_ex_L_FloatToStr_39
$0140	$3080			MOVLW	128
$0141	$3A06			XORLW	6
$0142	$00F0			MOVWF	STACK_0
$0143	$3080			MOVLW	128
$0144	$065D			XORWF	FloatToStr_dexpon_L0, 0
$0145	$0270			SUBWF	STACK_0, 0
$0146	$1803			BTFSC	STATUS, C
$0147	$294F			GOTO	L_FloatToStr_39
$0148	$	L374_ex_L_FloatToStr_39:
$0148	$084F			MOVF	FARG_FloatToStr+4, 0
$0149	$0084			MOVWF	FSR
$014A	$302E			MOVLW	46
$014B	$0080			MOVWF	INDF
$014C	$0ACF			INCF	FARG_FloatToStr+4, 1
$014D	$3001			MOVLW	1
$014E	$00DA			MOVWF	FloatToStr_bpoint_L0
$014F	$	L_FloatToStr_39:
$014F	$3006			MOVLW	6
$0150	$00DC			MOVWF	FloatToStr_d_L0
$0151	$	L_FloatToStr_40:
$0151	$085C			MOVF	FloatToStr_d_L0, 0
$0152	$3A00			XORLW	0
$0153	$1903			BTFSC	STATUS, Z
$0154	$2995			GOTO	L_FloatToStr_41
$0155	$01E1			CLRF	FloatToStr_un_L0+3, 1
$0156	$085E			MOVF	FloatToStr_un_L0, 0
$0157	$00F0			MOVWF	STACK_0
$0158	$085F			MOVF	FloatToStr_un_L0+1, 0
$0159	$00F1			MOVWF	STACK_0+1
$015A	$0860			MOVF	FloatToStr_un_L0+2, 0
$015B	$00F2			MOVWF	STACK_0+2
$015C	$0861			MOVF	FloatToStr_un_L0+3, 0
$015D	$00F3			MOVWF	STACK_0+3
$015E	$0DF0			RLF	STACK_0, 1
$015F	$0DF1			RLF	STACK_0+1, 1
$0160	$0DF2			RLF	STACK_0+2, 1
$0161	$0DF3			RLF	STACK_0+3, 1
$0162	$1070			BCF	STACK_0, 0
$0163	$0DF0			RLF	STACK_0, 1
$0164	$0DF1			RLF	STACK_0+1, 1
$0165	$0DF2			RLF	STACK_0+2, 1
$0166	$0DF3			RLF	STACK_0+3, 1
$0167	$1070			BCF	STACK_0, 0
$0168	$0870			MOVF	STACK_0, 0
$0169	$07DE			ADDWF	FloatToStr_un_L0, 1
$016A	$0871			MOVF	STACK_0+1, 0
$016B	$1803			BTFSC	STATUS, C
$016C	$0F71			INCFSZ	STACK_0+1, 0
$016D	$07DF			ADDWF	FloatToStr_un_L0+1, 1
$016E	$0872			MOVF	STACK_0+2, 0
$016F	$1803			BTFSC	STATUS, C
$0170	$0F72			INCFSZ	STACK_0+2, 0
$0171	$07E0			ADDWF	FloatToStr_un_L0+2, 1
$0172	$0873			MOVF	STACK_0+3, 0
$0173	$1803			BTFSC	STATUS, C
$0174	$0F73			INCFSZ	STACK_0+3, 0
$0175	$07E1			ADDWF	FloatToStr_un_L0+3, 1
$0176	$0DDE			RLF	FloatToStr_un_L0, 1
$0177	$0DDF			RLF	FloatToStr_un_L0+1, 1
$0178	$0DE0			RLF	FloatToStr_un_L0+2, 1
$0179	$0DE1			RLF	FloatToStr_un_L0+3, 1
$017A	$105E			BCF	FloatToStr_un_L0, 0
$017B	$0861			MOVF	FloatToStr_un_L0+3, 0
$017C	$3F30			ADDLW	48
$017D	$00F0			MOVWF	STACK_0
$017E	$084F			MOVF	FARG_FloatToStr+4, 0
$017F	$0084			MOVWF	FSR
$0180	$0870			MOVF	STACK_0, 0
$0181	$0080			MOVWF	INDF
$0182	$0ACF			INCF	FARG_FloatToStr+4, 1
$0183	$085A			MOVF	FloatToStr_bpoint_L0, 0
$0184	$3A00			XORLW	0
$0185	$1D03			BTFSS	STATUS, Z
$0186	$2993			GOTO	L_FloatToStr_43
$0187	$03DD			DECF	FloatToStr_dexpon_L0, 1
$0188	$085D			MOVF	FloatToStr_dexpon_L0, 0
$0189	$3A00			XORLW	0
$018A	$1D03			BTFSS	STATUS, Z
$018B	$2993			GOTO	L_FloatToStr_44
$018C	$084F			MOVF	FARG_FloatToStr+4, 0
$018D	$0084			MOVWF	FSR
$018E	$302E			MOVLW	46
$018F	$0080			MOVWF	INDF
$0190	$0ACF			INCF	FARG_FloatToStr+4, 1
$0191	$3001			MOVLW	1
$0192	$00DA			MOVWF	FloatToStr_bpoint_L0
$0193	$	L_FloatToStr_44:
$0193	$	L_FloatToStr_43:
$0193	$	L_FloatToStr_42:
$0193	$03DC			DECF	FloatToStr_d_L0, 1
$0194	$2951			GOTO	L_FloatToStr_40
$0195	$	L_FloatToStr_41:
$0195	$	L_FloatToStr_45:
$0195	$30FF			MOVLW	255
$0196	$074F			ADDWF	FARG_FloatToStr+4, 0
$0197	$0084			MOVWF	FSR
$0198	$0800			MOVF	INDF, 0
$0199	$00F4			MOVWF	STACK_4
$019A	$0874			MOVF	STACK_4, 0
$019B	$3A30			XORLW	48
$019C	$1D03			BTFSS	STATUS, Z
$019D	$29A0			GOTO	L_FloatToStr_46
$019E	$03CF			DECF	FARG_FloatToStr+4, 1
$019F	$2995			GOTO	L_FloatToStr_45
$01A0	$	L_FloatToStr_46:
$01A0	$30FF			MOVLW	255
$01A1	$074F			ADDWF	FARG_FloatToStr+4, 0
$01A2	$0084			MOVWF	FSR
$01A3	$0800			MOVF	INDF, 0
$01A4	$00F4			MOVWF	STACK_4
$01A5	$0874			MOVF	STACK_4, 0
$01A6	$3A2E			XORLW	46
$01A7	$1D03			BTFSS	STATUS, Z
$01A8	$29AA			GOTO	L_FloatToStr_47
$01A9	$03CF			DECF	FARG_FloatToStr+4, 1
$01AA	$	L_FloatToStr_47:
$01AA	$085D			MOVF	FloatToStr_dexpon_L0, 0
$01AB	$3A00			XORLW	0
$01AC	$1903			BTFSC	STATUS, Z
$01AD	$29E3			GOTO	L_FloatToStr_48
$01AE	$084F			MOVF	FARG_FloatToStr+4, 0
$01AF	$0084			MOVWF	FSR
$01B0	$3065			MOVLW	101
$01B1	$0080			MOVWF	INDF
$01B2	$0ACF			INCF	FARG_FloatToStr+4, 1
$01B3	$3080			MOVLW	128
$01B4	$065D			XORWF	FloatToStr_dexpon_L0, 0
$01B5	$00F0			MOVWF	STACK_0
$01B6	$3080			MOVLW	128
$01B7	$3A00			XORLW	0
$01B8	$0270			SUBWF	STACK_0, 0
$01B9	$1803			BTFSC	STATUS, C
$01BA	$29C3			GOTO	L_FloatToStr_49
$01BB	$084F			MOVF	FARG_FloatToStr+4, 0
$01BC	$0084			MOVWF	FSR
$01BD	$302D			MOVLW	45
$01BE	$0080			MOVWF	INDF
$01BF	$0ACF			INCF	FARG_FloatToStr+4, 1
$01C0	$085D			MOVF	FloatToStr_dexpon_L0, 0
$01C1	$3C00			SUBLW	0
$01C2	$00DD			MOVWF	FloatToStr_dexpon_L0
$01C3	$	L_FloatToStr_49:
$01C3	$085D			MOVF	FloatToStr_dexpon_L0, 0
$01C4	$00DC			MOVWF	FloatToStr_d_L0
$01C5	$085D			MOVF	FloatToStr_dexpon_L0, 0
$01C6	$3C09			SUBLW	9
$01C7	$1803			BTFSC	STATUS, C
$01C8	$29D5			GOTO	L_FloatToStr_50
$01C9	$300A			MOVLW	10
$01CA	$00F4			MOVWF	STACK_4
$01CB	$085C			MOVF	FloatToStr_d_L0, 0
$01CC	$00F0			MOVWF	STACK_0
$01CD	$266E			CALL	_div_8x8_u
$01CE	$3030			MOVLW	48
$01CF	$07F0			ADDWF	STACK_0, 1
$01D0	$084F			MOVF	FARG_FloatToStr+4, 0
$01D1	$0084			MOVWF	FSR
$01D2	$0870			MOVF	STACK_0, 0
$01D3	$0080			MOVWF	INDF
$01D4	$0ACF			INCF	FARG_FloatToStr+4, 1
$01D5	$	L_FloatToStr_50:
$01D5	$300A			MOVLW	10
$01D6	$00F4			MOVWF	STACK_4
$01D7	$085C			MOVF	FloatToStr_d_L0, 0
$01D8	$00F0			MOVWF	STACK_0
$01D9	$266E			CALL	_div_8x8_u
$01DA	$0878			MOVF	STACK_8, 0
$01DB	$00F0			MOVWF	STACK_0
$01DC	$3030			MOVLW	48
$01DD	$07F0			ADDWF	STACK_0, 1
$01DE	$084F			MOVF	FARG_FloatToStr+4, 0
$01DF	$0084			MOVWF	FSR
$01E0	$0870			MOVF	STACK_0, 0
$01E1	$0080			MOVWF	INDF
$01E2	$0ACF			INCF	FARG_FloatToStr+4, 1
$01E3	$	L_FloatToStr_48:
$01E3	$084F			MOVF	FARG_FloatToStr+4, 0
$01E4	$0084			MOVWF	FSR
$01E5	$0180			CLRF	INDF, 1
$01E6	$01F0			CLRF	STACK_0, 1
$01E7	$0008			RETURN
$05BA	$	_lcd_gen_send_string:
;lcd.h,186 :: 		void lcd_gen_send_string(unsigned char *a)
;lcd.h,188 :: 		int p=0;
$05BA	$1303			BCF	STATUS, RP1
$05BB	$1283			BCF	STATUS, RP0
$05BC	$01CC			CLRF	lcd_gen_send_string_p_L0
$05BD	$01CD			CLRF	lcd_gen_send_string_p_L0+1
;lcd.h,190 :: 		b = a[p];
$05BE	$084B			MOVF	FARG_lcd_gen_send_string+0, 0
$05BF	$0084			MOVWF	FSR
$05C0	$0800			MOVF	INDF, 0
$05C1	$00CE			MOVWF	lcd_gen_send_string_b_L0
;lcd.h,191 :: 		while(b!=0x00)
$05C2	$	L_lcd_gen_send_string_25:
$05C2	$084E			MOVF	lcd_gen_send_string_b_L0, 0
$05C3	$3A00			XORLW	0
$05C4	$1903			BTFSC	STATUS, Z
$05C5	$2DD5			GOTO	L_lcd_gen_send_string_26
;lcd.h,193 :: 		b=a[p];
$05C6	$084C			MOVF	lcd_gen_send_string_p_L0, 0
$05C7	$074B			ADDWF	FARG_lcd_gen_send_string+0, 0
$05C8	$0084			MOVWF	FSR
$05C9	$0800			MOVF	INDF, 0
$05CA	$00F1			MOVWF	STACK_1
$05CB	$0871			MOVF	STACK_1, 0
$05CC	$00CE			MOVWF	lcd_gen_send_string_b_L0
;lcd.h,194 :: 		if(b!=0x00)
$05CD	$0871			MOVF	STACK_1, 0
$05CE	$3A00			XORLW	0
$05CF	$1903			BTFSC	STATUS, Z
$05D0	$2DD4			GOTO	L_lcd_gen_send_string_27
;lcd.h,196 :: 		p++;
$05D1	$0ACC			INCF	lcd_gen_send_string_p_L0, 1
$05D2	$1903			BTFSC	STATUS, Z
$05D3	$0ACD			INCF	lcd_gen_send_string_p_L0+1, 1
;lcd.h,197 :: 		}
$05D4	$	L_lcd_gen_send_string_27:
;lcd.h,198 :: 		}
$05D4	$2DC2			GOTO	L_lcd_gen_send_string_25
$05D5	$	L_lcd_gen_send_string_26:
;lcd.h,200 :: 		if (p>0)
$05D5	$3080			MOVLW	128
$05D6	$00F0			MOVWF	STACK_0
$05D7	$3080			MOVLW	128
$05D8	$064D			XORWF	lcd_gen_send_string_p_L0+1, 0
$05D9	$0270			SUBWF	STACK_0, 0
$05DA	$1D03			BTFSS	STATUS, Z
$05DB	$2DDE			GOTO	L_lcd_gen_send_string_44
$05DC	$084C			MOVF	lcd_gen_send_string_p_L0, 0
$05DD	$3C00			SUBLW	0
$05DE	$	L_lcd_gen_send_string_44:
$05DE	$1803			BTFSC	STATUS, C
$05DF	$2DFF			GOTO	L_lcd_gen_send_string_28
;lcd.h,202 :: 		p=0;
$05E0	$01CC			CLRF	lcd_gen_send_string_p_L0
$05E1	$01CD			CLRF	lcd_gen_send_string_p_L0+1
;lcd.h,203 :: 		b = a[p];
$05E2	$084B			MOVF	FARG_lcd_gen_send_string+0, 0
$05E3	$0084			MOVWF	FSR
$05E4	$0800			MOVF	INDF, 0
$05E5	$00CE			MOVWF	lcd_gen_send_string_b_L0
;lcd.h,204 :: 		while(b!=0x00)
$05E6	$	L_lcd_gen_send_string_29:
$05E6	$084E			MOVF	lcd_gen_send_string_b_L0, 0
$05E7	$3A00			XORLW	0
$05E8	$1903			BTFSC	STATUS, Z
$05E9	$2DFF			GOTO	L_lcd_gen_send_string_30
;lcd.h,206 :: 		b=a[p];
$05EA	$084C			MOVF	lcd_gen_send_string_p_L0, 0
$05EB	$074B			ADDWF	FARG_lcd_gen_send_string+0, 0
$05EC	$0084			MOVWF	FSR
$05ED	$0800			MOVF	INDF, 0
$05EE	$00F1			MOVWF	STACK_1
$05EF	$0871			MOVF	STACK_1, 0
$05F0	$00CE			MOVWF	lcd_gen_send_string_b_L0
;lcd.h,207 :: 		if(b!=0x00)
$05F1	$0871			MOVF	STACK_1, 0
$05F2	$3A00			XORLW	0
$05F3	$1903			BTFSC	STATUS, Z
$05F4	$2DFE			GOTO	L_lcd_gen_send_string_31
;lcd.h,209 :: 		lcd_gen_send_data(a[p]);
$05F5	$084C			MOVF	lcd_gen_send_string_p_L0, 0
$05F6	$074B			ADDWF	FARG_lcd_gen_send_string+0, 0
$05F7	$0084			MOVWF	FSR
$05F8	$0800			MOVF	INDF, 0
$05F9	$00E2			MOVWF	FARG_lcd_gen_send_data+0
$05FA	$2641			CALL	_lcd_gen_send_data
;lcd.h,210 :: 		p++;
$05FB	$0ACC			INCF	lcd_gen_send_string_p_L0, 1
$05FC	$1903			BTFSC	STATUS, Z
$05FD	$0ACD			INCF	lcd_gen_send_string_p_L0+1, 1
;lcd.h,211 :: 		}
$05FE	$	L_lcd_gen_send_string_31:
;lcd.h,212 :: 		}
$05FE	$2DE6			GOTO	L_lcd_gen_send_string_29
$05FF	$	L_lcd_gen_send_string_30:
;lcd.h,214 :: 		}
$05FF	$	L_lcd_gen_send_string_28:
;lcd.h,216 :: 		}
$05FF	$0008			RETURN
$067F	$	_Usart_Write:
$067F	$	L_Usart_Write_3:
$067F	$3000			MOVLW	0
$0680	$1303			BCF	STATUS, RP1
$0681	$1683			BSF	STATUS, RP0
$0682	$1898			BTFSC	TXSTA, 1
$0683	$3001			MOVLW	1
$0684	$00F1			MOVWF	STACK_1
$0685	$0871			MOVF	STACK_1, 0
$0686	$3A00			XORLW	0
$0687	$1D03			BTFSS	STATUS, Z
$0688	$2E8B			GOTO	L_Usart_Write_4
$0689	$0000			NOP
$068A	$2E7F			GOTO	L_Usart_Write_3
$068B	$	L_Usart_Write_4:
$068B	$1283			BCF	STATUS, RP0
$068C	$084B			MOVF	FARG_Usart_Write+0, 0
$068D	$0099			MOVWF	TXREG
$068E	$0008			RETURN
$06F5	$	GlobalIniporta_ou_exclusivo:
$06F5	$300C			MOVLW	12
$06F6	$1303			BCF	STATUS, RP1
$06F7	$1283			BCF	STATUS, RP0
$06F8	$00A3			MOVWF	_mounth+0
$06F9	$3000			MOVLW	0
$06FA	$00A4			MOVWF	_mounth+1
$06FB	$0008			RETURN
$068F	$	_Usart_Init:
$068F	$1303			BCF	STATUS, RP1
$0690	$1683			BSF	STATUS, RP0
$0691	$1698			BSF	TXSTA, 5
$0692	$3090			MOVLW	144
$0693	$1283			BCF	STATUS, RP0
$0694	$0098			MOVWF	RCSTA
$0695	$1683			BSF	STATUS, RP0
$0696	$1787			BSF	TRISC, 7
$0697	$1307			BCF	TRISC, 6
$0698	$	L_Usart_Init_0:
$0698	$1283			BCF	STATUS, RP0
$0699	$1E8C			BTFSS	PIR1, 5
$069A	$2E9E			GOTO	L_Usart_Init_1
$069B	$081A			MOVF	RCREG, 0
$069C	$00CF			MOVWF	Usart_Init_tmp_L0
$069D	$2E98			GOTO	L_Usart_Init_0
$069E	$	L_Usart_Init_1:
$069E	$0008			RETURN
$044E	$	_main:
;porta_ou_exclusivo.c,17 :: 		void main()
;porta_ou_exclusivo.c,23 :: 		TRISA = 0b00000011;
$044E	$26F5			CALL	GlobalIniporta_ou_exclusivo
$044F	$3003			MOVLW	3
$0450	$1683			BSF	STATUS, RP0
$0451	$0085			MOVWF	TRISA
;porta_ou_exclusivo.c,24 :: 		TRISB = 0x00;
$0452	$0186			CLRF	TRISB, 1
;porta_ou_exclusivo.c,25 :: 		TRISC = 0x00;
$0453	$0187			CLRF	TRISC, 1
;porta_ou_exclusivo.c,26 :: 		TRISD = 0x00;
$0454	$0188			CLRF	TRISD, 1
;porta_ou_exclusivo.c,27 :: 		TRISE = 0x00;
$0455	$0189			CLRF	TRISE, 1
;porta_ou_exclusivo.c,28 :: 		ADCON1= 0x07;
$0456	$3007			MOVLW	7
$0457	$009F			MOVWF	ADCON1
;porta_ou_exclusivo.c,29 :: 		Adc_Read(0);
$0458	$1283			BCF	STATUS, RP0
$0459	$01CB			CLRF	FARG_Adc_Read+0, 1
$045A	$2600			CALL	_Adc_Read
;porta_ou_exclusivo.c,34 :: 		asdf = a/b;
$045B	$30AB			MOVLW	171
$045C	$1283			BCF	STATUS, RP0
$045D	$00A5			MOVWF	_asdf
$045E	$30AA			MOVLW	170
$045F	$00A6			MOVWF	_asdf+1
$0460	$306A			MOVLW	106
$0461	$00A7			MOVWF	_asdf+2
$0462	$3081			MOVLW	129
$0463	$00A8			MOVWF	_asdf+3
;porta_ou_exclusivo.c,35 :: 		lcd_gen_setup();
$0464	$26EE			CALL	_lcd_gen_setup
;porta_ou_exclusivo.c,36 :: 		lcd_gen_init();
$0465	$2316			CALL	_lcd_gen_init
;porta_ou_exclusivo.c,37 :: 		lcd_gen_send_command(0x01);   //
$0466	$3001			MOVLW	1
$0467	$00E2			MOVWF	FARG_lcd_gen_send_command+0
$0468	$262E			CALL	_lcd_gen_send_command
;porta_ou_exclusivo.c,38 :: 		delay_ms(2);
$0469	$300D			MOVLW	13
$046A	$00FB			MOVWF	STACK_11
$046B	$30FF			MOVLW	255
$046C	$00FA			MOVWF	STACK_10
$046D	$0BFB			DECFSZ	STACK_11, F
$046E	$2C70			GOTO	$+2
$046F	$2C73			GOTO	$+4
$0470	$0BFA			DECFSZ	STACK_10, F
$0471	$2C70			GOTO	$-1
$0472	$2C6D			GOTO	$-5
$0473	$30F3			MOVLW	243
$0474	$00FA			MOVWF	STACK_10
$0475	$0BFA			DECFSZ	STACK_10, F
$0476	$2C75			GOTO	$-1
$0477	$0000			NOP
;porta_ou_exclusivo.c,39 :: 		lcd_gen_send_data(0x41);
$0478	$3041			MOVLW	65
$0479	$00E2			MOVWF	FARG_lcd_gen_send_data+0
$047A	$2641			CALL	_lcd_gen_send_data
;porta_ou_exclusivo.c,40 :: 		FloatToStr(asdf  ,gh);
$047B	$0825			MOVF	_asdf, 0
$047C	$00CB			MOVWF	FARG_FloatToStr+0
$047D	$0826			MOVF	_asdf+1, 0
$047E	$00CC			MOVWF	FARG_FloatToStr+1
$047F	$0827			MOVF	_asdf+2, 0
$0480	$00CD			MOVWF	FARG_FloatToStr+2
$0481	$0828			MOVF	_asdf+3, 0
$0482	$00CE			MOVWF	FARG_FloatToStr+3
$0483	$302D			MOVLW	main_gh_L0
$0484	$00CF			MOVWF	FARG_FloatToStr+4
$0485	$201F			CALL	_FloatToStr
;porta_ou_exclusivo.c,41 :: 		lcd_gen_send_string(gh);
$0486	$302D			MOVLW	main_gh_L0
$0487	$00CB			MOVWF	FARG_lcd_gen_send_string+0
$0488	$25BA			CALL	_lcd_gen_send_string
;porta_ou_exclusivo.c,43 :: 		Usart_Init(9600);
$0489	$3081			MOVLW	129
$048A	$1683			BSF	STATUS, RP0
$048B	$0099			MOVWF	SPBRG
$048C	$1518			BSF	TXSTA, BRGH
$048D	$268F			CALL	_Usart_Init
;porta_ou_exclusivo.c,45 :: 		Usart_Write(0x41);
$048E	$3041			MOVLW	65
$048F	$00CB			MOVWF	FARG_Usart_Write+0
$0490	$267F			CALL	_Usart_Write
;porta_ou_exclusivo.c,51 :: 		mounth = razao;
$0491	$26D4			CALL	_Get_Fosc_kHz
$0492	$30A0			MOVLW	160
$0493	$00F4			MOVWF	STACK_4
$0494	$300F			MOVLW	15
$0495	$00F5			MOVWF	STACK_4+1
$0496	$3000			MOVLW	0
$0497	$00F6			MOVWF	STACK_4+2
$0498	$3000			MOVLW	0
$0499	$00F7			MOVWF	STACK_4+3
$049A	$23B4			CALL	_div_32x32_s
$049B	$0870			MOVF	STACK_0, 0
$049C	$00A3			MOVWF	_mounth
$049D	$0871			MOVF	STACK_0+1, 0
$049E	$00A4			MOVWF	_mounth+1
;porta_ou_exclusivo.c,52 :: 		asm {goto $};
$049F	$2C9F			GOTO	$
;porta_ou_exclusivo.c,54 :: 		while(true)
$04A0	$	L_main_35:
;porta_ou_exclusivo.c,56 :: 		if(porta.f0 ^ porta.f1)  portb.f0=1;
$04A0	$3001			MOVLW	1
$04A1	$0505			ANDWF	PORTA, 0
$04A2	$00F5			MOVWF	STACK_5
$04A3	$3000			MOVLW	0
$04A4	$1885			BTFSC	PORTA, 1
$04A5	$3001			MOVLW	1
$04A6	$00F4			MOVWF	STACK_4
$04A7	$0874			MOVF	STACK_4, 0
$04A8	$0675			XORWF	STACK_5, 0
$04A9	$1903			BTFSC	STATUS, Z
$04AA	$2CAD			GOTO	L_main_37
$04AB	$1406			BSF	PORTB, 0
$04AC	$2CAE			GOTO	L_main_38
$04AD	$	L_main_37:
;porta_ou_exclusivo.c,57 :: 		else    portb.f0=0;
$04AD	$1006			BCF	PORTB, 0
$04AE	$	L_main_38:
;porta_ou_exclusivo.c,59 :: 		}
$04AE	$2CA0			GOTO	L_main_35
;porta_ou_exclusivo.c,62 :: 		}
$04AF	$2CAF			GOTO	$


//** Procedures locations **
//ADDRESS		PROCEDURE
//----------------------------------------------
$0004		interrupt
$001F		FloatToStr
$01E8		SDIV3232L
$0316		lcd_gen_init
$03B4		Div_32x32_S
$044E		main
$04B0		Mul_32x32_FP
$0511		lcd_gen_send_nibble
$056A		Compare_Double
$05BA		lcd_gen_send_string
$0600		Adc_Read
$062E		lcd_gen_send_command
$0641		lcd_gen_send_data
$0654		strcpy
$066E		Div_8x8_U
$067F		Usart_Write
$068F		Usart_Init
$069F		COMFREM
$06AD		SETFOV32
$06BB		SETFUN32
$06C9		Usart_Read
$06D4		Get_Fosc_kHz
$06DD		RES032
$06E6		Delay_22us
$06EE		lcd_gen_setup
$06F5		GlobalIniporta_ou_exclusivo


//** Labels locations **
//ADDRESS		LABEL
//----------------------------------------------
$0004		_interrupt:
$0014		L_interrupt_34:
$0014		L_Interrupt_end:
$001F		_FloatToStr:
$004A		L_FloatToStr_60:
$0054		L_FloatToStr_29:
$0060		L_FloatToStr_30:
$006F		L_FloatToStr_61:
$0078		L_FloatToStr_31:
$0086		L_FloatToStr_62:
$0090		L_FloatToStr_32:
$0090		L_FloatToStr_33:
$00C3		L_FloatToStr_34:
$00C3		L_FloatToStr_35:
$00F6		L_FloatToStr_36:
$0127		L_FloatToStr_63:
$0130		L_FloatToStr_64:
$0148		L374_ex_L_FloatToStr_39:
$014F		L_FloatToStr_39:
$0151		L_FloatToStr_40:
$0193		L_FloatToStr_42:
$0193		L_FloatToStr_43:
$0193		L_FloatToStr_44:
$0195		L_FloatToStr_41:
$0195		L_FloatToStr_45:
$01A0		L_FloatToStr_46:
$01AA		L_FloatToStr_47:
$01C3		L_FloatToStr_49:
$01D5		L_FloatToStr_50:
$01E3		L_FloatToStr_48:
$01E8		_SDIV3232L:
$01FB		LOOPS3232A:
$0211		SADD22LA:
$021E		SOK22LA:
$0237		SADD22L8:
$0244		SOK22L8:
$0247		LOOPS3232B:
$025D		SADD22LB:
$026A		SOK22LB:
$0283		SADD22L16:
$0290		SOK22L16:
$0293		LOOPS3232C:
$02A9		SADD22LC:
$02B6		SOK22LC:
$02CF		SADD22L24:
$02DC		SOK22L24:
$02DF		LOOPS3232D:
$02F5		SADD22LD:
$0302		SOK22LD:
$0315		SOK22L:
$0316		_lcd_gen_init:
$0355		L_lcd_gen_init_13:
$035E		L_lcd_gen_init_40:
$0360		L_lcd_gen_init_15:
$0364		L_lcd_gen_init_14:
$0369		L_lcd_gen_init_16:
$0372		L_lcd_gen_init_41:
$0374		L_lcd_gen_init_18:
$0378		L_lcd_gen_init_17:
$038F		L_lcd_gen_init_19:
$0398		L_lcd_gen_init_42:
$039A		L_lcd_gen_init_21:
$039E		L_lcd_gen_init_20:
$03A3		L_lcd_gen_init_22:
$03AC		L_lcd_gen_init_43:
$03AE		L_lcd_gen_init_24:
$03B2		L_lcd_gen_init_23:
$03B4		_Div_32x32_S:
$03B6		FXD3232S:
$03D6		CA3232S:
$03E3		C3232SX:
$03E8		C3232S:
$03E9		C3232S2:
$03EB		C3232SOK:
$0404		C3232SX1:
$0415		C3232SX2:
$041B		C3232SX3:
$0421		C3232SX4:
$0448		END_ALL:
$044C		avoid_comfrem:
$044E		_main:
$04A0		L_main_35:
$04AD		L_main_37:
$04AE		L_main_38:
$04B0		_Mul_32x32_FP:
$04B2		FPM32:
$04B8		M32BNE0:
$04C4		MTUN32:
$04C7		MOK32:
$04D5		MLOOP32:
$04D7		MADD32:
$04E1		MNOADD32:
$04F1		MROUND32:
$0503		MUL32OK:
$0507		JPMRES032:
$050A		JPMSETFOV32:
$050D		JPMSETFUN32:
$050F		MUL32EEE:
$0511		_lcd_gen_send_nibble:
$0520		L_lcd_gen_send_nibble_6:
$052B		L_lcd_gen_send_nibble_7:
$0538		L_lcd_gen_send_nibble_8:
$0547		L_lcd_gen_send_nibble_9:
$0549		L_lcd_gen_send_nibble_10:
$0561		L_lcd_gen_send_nibble_39:
$0566		L_lcd_gen_send_nibble_12:
$0568		L_lcd_gen_send_nibble_11:
$056A		_Compare_Double:
$057B		COMPARE_YNOTZERO:
$057E		COMPARE_XNOTZERO:
$0581		COMPARE_NOTZERO:
$058F		COMPARE_TESTALL:
$0596		COMPARE_C1:
$059D		COMPARE_C2:
$05A4		COMPARE_C3:
$05AA		GT_FALSE:
$05AE		GT_TRUE:
$05B2		COMPARE_GT:
$05B4		COMPARE_LT:
$05B6		COMPARE_EQU:
$05BA		_lcd_gen_send_string:
$05C2		L_lcd_gen_send_string_25:
$05D4		L_lcd_gen_send_string_27:
$05D5		L_lcd_gen_send_string_26:
$05DE		L_lcd_gen_send_string_44:
$05E6		L_lcd_gen_send_string_29:
$05FE		L_lcd_gen_send_string_31:
$05FF		L_lcd_gen_send_string_28:
$05FF		L_lcd_gen_send_string_30:
$0600		_Adc_Read:
$0616		L_Adc_Read_0:
$061A		L_Adc_Read_1:
$0621		L_Adc_Read_2:
$0628		L_Adc_Read_3:
$062E		_lcd_gen_send_command:
$0641		_lcd_gen_send_data:
$0654		_strcpy:
$0658		L_strcpy_31:
$066B		L_strcpy_32:
$066E		_Div_8x8_U:
$067F		_Usart_Write:
$067F		L_Usart_Write_3:
$068B		L_Usart_Write_4:
$068F		_Usart_Init:
$0698		L_Usart_Init_0:
$069E		L_Usart_Init_1:
$069F		_COMFREM:
$06AD		_SETFOV32:
$06B9		SETFOV32EEE:
$06BB		_SETFUN32:
$06C7		SETFUN32EEE:
$06C9		_Usart_Read:
$06D1		L_Usart_Read_2:
$06D4		_Get_Fosc_kHz:
$06DD		_RES032:
$06E6		_Delay_22us:
$06EE		_lcd_gen_setup:
$06EE		L_lcd_gen_setup_0:
$06EE		L_lcd_gen_setup_1:
$06EE		L_lcd_gen_setup_2:
$06F4		L_lcd_gen_setup_5:
$06F5		GlobalIniporta_ou_exclusivo:


//** Variables locations **
//ADDRESS		VARIABLE
//----------------------------------------------
$0000		INDF
$0002		PCL
$0003		STATUS
$0004		FSR
$0005		PORTA
$0006		PORTB
$0008		PORTD
$0009		PORTE
$000A		PCLATH
$000C		PIR1
$0018		RCSTA
$0019		TXREG
$001A		RCREG
$001E		ADRESH
$001F		ADCON0
$0020		___math_tempbD
$0021		___math_tempb
$0022		_gen
$0023		_mounth
$0025		_asdf
$0029		?saveFSR
$002A		?saveSTATUS
$002B		?savePCLATH
$002C		Usart_Read_tmp_L0
$002D		main_gh_L0
$004B		FARG_Adc_Read+0
$004B		FARG_FloatToStr+0
$004B		FARG_lcd_gen_send_string+0
$004B		FARG_Usart_Init+0
$004B		FARG_Usart_Write+0
$004B		lcd_gen_init_c_L0
$004C		lcd_gen_send_string_p_L0
$004E		lcd_gen_send_string_b_L0
$004F		FARG_FloatToStr+4
$004F		Usart_Init_tmp_L0
$0050		lstr1_conv
$0054		lstr2_conv
$0056		lstr3_conv
$005A		FloatToStr_bpoint_L0
$005B		FloatToStr_i_L0
$005C		FloatToStr_d_L0
$005D		FloatToStr_dexpon_L0
$005E		FloatToStr_un_L0
$0062		FARG_lcd_gen_send_command+0
$0062		FARG_lcd_gen_send_data+0
$0062		FARG_strcpy+0
$0063		FARG_strcpy+1
$0064		strcpy_cp_L0
$0065		FARG_lcd_gen_send_nibble+0
$0066		lcd_gen_send_nibble_c_L0
$0070		STACK_0
$0071		STACK_1
$0072		STACK_2
$0073		STACK_3
$0074		STACK_4
$0075		STACK_5
$0076		STACK_6
$0077		STACK_7
$0078		STACK_8
$0079		STACK_9
$007A		STACK_10
$007B		STACK_11
$007C		STACK_12
$007D		STACK_13
$007E		STACK_14
$007F		STACK_15
$0085		TRISA
$0086		TRISB
$0087		TRISC
$0088		TRISD
$0089		TRISE
$0098		TXSTA
$0099		SPBRG
$009E		ADRESL
$009F		ADCON1


