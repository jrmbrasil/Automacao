;  ASM code generated by mikroVirtualMachine for PIC - V. 8.1.0.0
;  Date/Time: 06/06/2010 01:02:25
;  Info: http://www.mikroe.com


; ADDRESS	OPCODE	ASM
; ----------------------------------------------
$0000	$2804			GOTO	_main
$0377	$	_Delay_1us:
;delays.c,7 :: 		void Delay_1us() {
;delays.c,8 :: 		Delay_us(1);
$0377	$0000			NOP
;delays.c,9 :: 		}
$0378	$0008			RETURN
$0339	$	_Delay_5500us:
;delays.c,31 :: 		void Delay_5500us() {
;delays.c,32 :: 		Delay_us(5500);
$0339	$3008			MOVLW	8
$033A	$1303			BCF	STATUS, RP1
$033B	$1283			BCF	STATUS, RP0
$033C	$00FB			MOVWF	STACK_11
$033D	$30FF			MOVLW	255
$033E	$00FA			MOVWF	STACK_10
$033F	$0BFB			DECFSZ	STACK_11, F
$0340	$2B42			GOTO	$+2
$0341	$2B45			GOTO	$+4
$0342	$0BFA			DECFSZ	STACK_10, F
$0343	$2B42			GOTO	$-1
$0344	$2B3F			GOTO	$-5
$0345	$301E			MOVLW	30
$0346	$00FA			MOVWF	STACK_10
$0347	$0BFA			DECFSZ	STACK_10, F
$0348	$2B47			GOTO	$-1
;delays.c,33 :: 		}
$0349	$0008			RETURN
$0353	$	_Delay_50us:
;delays.c,19 :: 		void Delay_50us() {
;delays.c,20 :: 		Delay_us(50);
$0353	$3010			MOVLW	16
$0354	$1303			BCF	STATUS, RP1
$0355	$1283			BCF	STATUS, RP0
$0356	$00FA			MOVWF	STACK_10
$0357	$0BFA			DECFSZ	STACK_10, F
$0358	$2B57			GOTO	$-1
$0359	$0000			NOP
;delays.c,21 :: 		}
$035A	$0008			RETURN
$01C1	$	_Lcd_Cmd:
$01C1	$1303			BCF	STATUS, RP1
$01C2	$1283			BCF	STATUS, RP0
$01C3	$0820			MOVF	LCD_port_address, 0
$01C4	$0084			MOVWF	FSR
$01C5	$084C			MOVF	FARG_Lcd_Cmd+0, 0
$01C6	$1903			BTFSC	STATUS, Z
$01C7	$29C8			GOTO	L_Lcd_Cmd_0
$01C8	$	L_Lcd_Cmd_0:
$01C8	$1180			BCF	INDF, ___ENABLE
$01C9	$1100			BCF	INDF, ___RS
$01CA	$1380			BCF	INDF, ___DB7
$01CB	$1300			BCF	INDF, ___DB6
$01CC	$1280			BCF	INDF, ___DB5
$01CD	$1200			BCF	INDF, ___DB4
$01CE	$1BCC			BTFSC	FARG_Lcd_Cmd+0, 7
$01CF	$1780			BSF	INDF, ___DB7
$01D0	$1B4C			BTFSC	FARG_Lcd_Cmd+0, 6
$01D1	$1700			BSF	INDF, ___DB6
$01D2	$1ACC			BTFSC	FARG_Lcd_Cmd+0, 5
$01D3	$1680			BSF	INDF, ___DB5
$01D4	$1A4C			BTFSC	FARG_Lcd_Cmd+0, 4
$01D5	$1600			BSF	INDF, ___DB4
$01D6	$0821			MOVF	LCD_cmd_status, 0
$01D7	$1903			BTFSC	STATUS, Z
$01D8	$29DB			GOTO	L_Lcd_Cmd_1
$01D9	$1100			BCF	INDF, ___RS
$01DA	$29DC			GOTO	L_Lcd_Cmd_2
$01DB	$	L_Lcd_Cmd_1:
$01DB	$1500			BSF	INDF, ___RS
$01DC	$	L_Lcd_Cmd_2:
$01DC	$1580			BSF	INDF, ___ENABLE
$01DD	$2377			CALL	_Delay_1us
$01DE	$084C			MOVF	FARG_Lcd_Cmd+0, 0
$01DF	$1903			BTFSC	STATUS, Z
$01E0	$29E1			GOTO	L_Lcd_Cmd_3
$01E1	$	L_Lcd_Cmd_3:
$01E1	$1180			BCF	INDF, ___ENABLE
$01E2	$1100			BCF	INDF, ___RS
$01E3	$1380			BCF	INDF, ___DB7
$01E4	$1300			BCF	INDF, ___DB6
$01E5	$1280			BCF	INDF, ___DB5
$01E6	$1200			BCF	INDF, ___DB4
$01E7	$19CC			BTFSC	FARG_Lcd_Cmd+0, 3
$01E8	$1780			BSF	INDF, ___DB7
$01E9	$194C			BTFSC	FARG_Lcd_Cmd+0, 2
$01EA	$1700			BSF	INDF, ___DB6
$01EB	$18CC			BTFSC	FARG_Lcd_Cmd+0, 1
$01EC	$1680			BSF	INDF, ___DB5
$01ED	$184C			BTFSC	FARG_Lcd_Cmd+0, 0
$01EE	$1600			BSF	INDF, ___DB4
$01EF	$0821			MOVF	LCD_cmd_status, 0
$01F0	$1903			BTFSC	STATUS, Z
$01F1	$29F4			GOTO	L_Lcd_Cmd_4
$01F2	$1100			BCF	INDF, ___RS
$01F3	$29F5			GOTO	L_Lcd_Cmd_5
$01F4	$	L_Lcd_Cmd_4:
$01F4	$1500			BSF	INDF, ___RS
$01F5	$	L_Lcd_Cmd_5:
$01F5	$1580			BSF	INDF, ___ENABLE
$01F6	$2377			CALL	_Delay_1us
$01F7	$1180			BCF	INDF, ___ENABLE
$01F8	$0821			MOVF	LCD_cmd_status, 0
$01F9	$1903			BTFSC	STATUS, Z
$01FA	$29FD			GOTO	L_Lcd_Cmd_6
$01FB	$2339			CALL	_Delay_5500us
$01FC	$29FE			GOTO	L_Lcd_Cmd_7
$01FD	$	L_Lcd_Cmd_6:
$01FD	$2353			CALL	_Delay_50us
$01FE	$	L_Lcd_Cmd_7:
$01FE	$0008			RETURN
$034A	$	_Lcd_Chr_CP:
$034A	$1303			BCF	STATUS, RP1
$034B	$1283			BCF	STATUS, RP0
$034C	$01A1			CLRF	LCD_cmd_status, 1
$034D	$084B			MOVF	FARG_Lcd_Chr_CP+0, 0
$034E	$00CC			MOVWF	FARG_Lcd_Cmd+0
$034F	$21C1			CALL	_Lcd_Cmd
$0350	$3001			MOVLW	1
$0351	$00A1			MOVWF	LCD_cmd_status
$0352	$0008			RETURN
$0242	$	_Mul_16x16_S:
$0242	$1303			BCF	STATUS, RP1
$0243	$1283			BCF	STATUS, RP0
$0244	$01FB			CLRF	STACK_11
$0245	$01FA			CLRF	STACK_10
$0246	$01F9			CLRF	STACK_9
$0247	$3080			MOVLW	128
$0248	$00F8			MOVWF	STACK_8
$0249	$01FD			CLRF	STACK_13
$024A	$1FF1			BTFSS	STACK_1, 7
$024B	$2A52			GOTO	$+7
$024C	$09F1			COMF	STACK_1, F
$024D	$09F0			COMF	STACK_0, F
$024E	$0AF0			INCF	STACK_0, F
$024F	$1903			BTFSC	STATUS, Z
$0250	$0AF1			INCF	STACK_1, F
$0251	$0AFD			INCF	STACK_13, F
$0252	$1FF5			BTFSS	STACK_5, 7
$0253	$2A5A			GOTO	$+7
$0254	$09F5			COMF	STACK_5, F
$0255	$09F4			COMF	STACK_4, F
$0256	$0AF4			INCF	STACK_4, F
$0257	$1903			BTFSC	STATUS, Z
$0258	$0AF5			INCF	STACK_5, F
$0259	$0AFD			INCF	STACK_13, F
$025A	$0CF1			RRF	STACK_1, F
$025B	$0CF0			RRF	STACK_0, F
$025C	$1C03			BTFSS	STATUS, C
$025D	$2A67			GOTO	$+10
$025E	$0874			MOVF	STACK_4, W
$025F	$07F9			ADDWF	STACK_9, F
$0260	$0875			MOVF	STACK_5, W
$0261	$1803			BTFSC	STATUS, C
$0262	$0F75			INCFSZ	STACK_5, W
$0263	$07FA			ADDWF	STACK_10, F
$0264	$1803			BTFSC	STATUS, C
$0265	$0AFB			INCF	STACK_11, F
$0266	$1003			BCF	STATUS, C
$0267	$1FF0			BTFSS	STACK_0, 7
$0268	$2A6F			GOTO	$+7
$0269	$0874			MOVF	STACK_4, W
$026A	$07FA			ADDWF	STACK_10, F
$026B	$1803			BTFSC	STATUS, C
$026C	$0AFB			INCF	STACK_11, F
$026D	$0875			MOVF	STACK_5, W
$026E	$07FB			ADDWF	STACK_11, F
$026F	$0CFB			RRF	STACK_11, F
$0270	$0CFA			RRF	STACK_10, F
$0271	$0CF9			RRF	STACK_9, F
$0272	$0CF8			RRF	STACK_8, F
$0273	$1C03			BTFSS	STATUS, C
$0274	$2A5A			GOTO	$-26
$0275	$1C7D			BTFSS	STACK_13, 0
$0276	$2A82			GOTO	$+12
$0277	$09FB			COMF	STACK_11, F
$0278	$09FA			COMF	STACK_10, F
$0279	$09F9			COMF	STACK_9, F
$027A	$09F8			COMF	STACK_8, F
$027B	$0AF8			INCF	STACK_8, F
$027C	$1903			BTFSC	STATUS, Z
$027D	$0AF9			INCF	STACK_9, F
$027E	$1903			BTFSC	STATUS, Z
$027F	$0AFA			INCF	STACK_10, F
$0280	$1903			BTFSC	STATUS, Z
$0281	$0AFB			INCF	STACK_11, F
$0282	$087B			MOVF	STACK_11, W
$0283	$00F3			MOVWF	STACK_3
$0284	$087A			MOVF	STACK_10, W
$0285	$00F2			MOVWF	STACK_2
$0286	$0879			MOVF	STACK_9, W
$0287	$00F1			MOVWF	STACK_1
$0288	$0878			MOVF	STACK_8, W
$0289	$00F0			MOVWF	STACK_0
$028A	$0000			NOP
$028B	$0008			RETURN
$031C	$	_Div_16x16_U:
$031C	$1303			BCF	STATUS, RP1
$031D	$1283			BCF	STATUS, RP0
$031E	$01F8			CLRF	STACK_8
$031F	$01F9			CLRF	STACK_9
$0320	$3010			MOVLW	16
$0321	$00FC			MOVWF	STACK_12
$0322	$0D71			RLF	STACK_1, W
$0323	$0DF8			RLF	STACK_8, F
$0324	$0DF9			RLF	STACK_9, F
$0325	$0874			MOVF	STACK_4, W
$0326	$02F8			SUBWF	STACK_8, F
$0327	$0875			MOVF	STACK_5, W
$0328	$1C03			BTFSS	STATUS, C
$0329	$0F75			INCFSZ	STACK_5, W
$032A	$02F9			SUBWF	STACK_9, F
$032B	$1803			BTFSC	STATUS, C
$032C	$2B34			GOTO	$+8
$032D	$0874			MOVF	STACK_4, W
$032E	$07F8			ADDWF	STACK_8, F
$032F	$0875			MOVF	STACK_5, W
$0330	$1803			BTFSC	STATUS, C
$0331	$0F75			INCFSZ	STACK_5, W
$0332	$07F9			ADDWF	STACK_9, F
$0333	$1003			BCF	STATUS, C
$0334	$0DF0			RLF	STACK_0, F
$0335	$0DF1			RLF	STACK_1, F
$0336	$0BFC			DECFSZ	STACK_12, F
$0337	$2B22			GOTO	$-21
$0338	$0008			RETURN
$009A	$	_Lcd_Init:
$009A	$2339			CALL	_Delay_5500us
$009B	$2339			CALL	_Delay_5500us
$009C	$2339			CALL	_Delay_5500us
$009D	$0846			MOVF	FARG_Lcd_Init+0, 0
$009E	$00A0			MOVWF	LCD_port_address
$009F	$0846			MOVF	FARG_Lcd_Init+0, 0
$00A0	$0084			MOVWF	FSR
$00A1	$1784			BSF	FSR, 7
$00A2	$1180			BCF	INDF, ___ENABLE
$00A3	$1100			BCF	INDF, ___RS
$00A4	$1000			BCF	INDF, ___RW
$00A5	$1380			BCF	INDF, ___DB7
$00A6	$1300			BCF	INDF, ___DB6
$00A7	$1280			BCF	INDF, ___DB5
$00A8	$1200			BCF	INDF, ___DB4
$00A9	$1384			BCF	FSR, 7
$00AA	$1180			BCF	INDF, ___ENABLE
$00AB	$1100			BCF	INDF, ___RS
$00AC	$1000			BCF	INDF, ___RW
$00AD	$1380			BCF	INDF, ___DB7
$00AE	$1300			BCF	INDF, ___DB6
$00AF	$1280			BCF	INDF, ___DB5
$00B0	$1200			BCF	INDF, ___DB4
$00B1	$1680			BSF	INDF, ___DB5
$00B2	$1600			BSF	INDF, ___DB4
$00B3	$1580			BSF	INDF, ___ENABLE
$00B4	$1180			BCF	INDF, ___ENABLE
$00B5	$2339			CALL	_Delay_5500us
$00B6	$1580			BSF	INDF, ___ENABLE
$00B7	$1180			BCF	INDF, ___ENABLE
$00B8	$2339			CALL	_Delay_5500us
$00B9	$1580			BSF	INDF, ___ENABLE
$00BA	$1180			BCF	INDF, ___ENABLE
$00BB	$2339			CALL	_Delay_5500us
$00BC	$1680			BSF	INDF, ___DB5
$00BD	$1200			BCF	INDF, ___DB4
$00BE	$1580			BSF	INDF, ___ENABLE
$00BF	$1180			BCF	INDF, ___ENABLE
$00C0	$2339			CALL	_Delay_5500us
$00C1	$0180			CLRF	INDF
$00C2	$1680			BSF	INDF, ___DB5
$00C3	$1580			BSF	INDF, ___ENABLE
$00C4	$1180			BCF	INDF, ___ENABLE
$00C5	$0180			CLRF	INDF
$00C6	$1780			BSF	INDF, ___DB7
$00C7	$1580			BSF	INDF, ___ENABLE
$00C8	$1180			BCF	INDF, ___ENABLE
$00C9	$2339			CALL	_Delay_5500us
$00CA	$0180			CLRF	INDF
$00CB	$1600			BSF	INDF, ___DB4
$00CC	$1580			BSF	INDF, ___ENABLE
$00CD	$1180			BCF	INDF, ___ENABLE
$00CE	$0180			CLRF	INDF
$00CF	$1580			BSF	INDF, ___ENABLE
$00D0	$1180			BCF	INDF, ___ENABLE
$00D1	$2339			CALL	_Delay_5500us
$00D2	$0180			CLRF	INDF
$00D3	$1580			BSF	INDF, ___ENABLE
$00D4	$1180			BCF	INDF, ___ENABLE
$00D5	$1600			BSF	INDF, ___DB4
$00D6	$1580			BSF	INDF, ___ENABLE
$00D7	$1180			BCF	INDF, ___ENABLE
$00D8	$2339			CALL	_Delay_5500us
$00D9	$0180			CLRF	INDF
$00DA	$1580			BSF	INDF, ___ENABLE
$00DB	$1180			BCF	INDF, ___ENABLE
$00DC	$1600			BSF	INDF, ___DB4
$00DD	$1680			BSF	INDF, ___DB5
$00DE	$1700			BSF	INDF, ___DB6
$00DF	$1780			BSF	INDF, ___DB7
$00E0	$1580			BSF	INDF, ___ENABLE
$00E1	$1180			BCF	INDF, ___ENABLE
$00E2	$2339			CALL	_Delay_5500us
$00E3	$3001			MOVLW	1
$00E4	$00A1			MOVWF	LCD_cmd_status
$00E5	$0008			RETURN
$01FF	$	_LCD_Out:
$01FF	$2A11			GOTO	L_LCD_Out_17
$0200	$	L_LCD_Out_19:
$0200	$3080			MOVLW	128
$0201	$1303			BCF	STATUS, RP1
$0202	$1283			BCF	STATUS, RP0
$0203	$00C6			MOVWF	FARG_LCD_Out+0
$0204	$2A24			GOTO	L_LCD_Out_18
$0205	$	L_LCD_Out_20:
$0205	$30C0			MOVLW	192
$0206	$00C6			MOVWF	FARG_LCD_Out+0
$0207	$2A24			GOTO	L_LCD_Out_18
$0208	$	L_LCD_Out_21:
$0208	$3094			MOVLW	148
$0209	$00C6			MOVWF	FARG_LCD_Out+0
$020A	$2A24			GOTO	L_LCD_Out_18
$020B	$	L_LCD_Out_22:
$020B	$30D4			MOVLW	212
$020C	$00C6			MOVWF	FARG_LCD_Out+0
$020D	$2A24			GOTO	L_LCD_Out_18
$020E	$	L_LCD_Out_23:
$020E	$3080			MOVLW	128
$020F	$00C6			MOVWF	FARG_LCD_Out+0
$0210	$2A24			GOTO	L_LCD_Out_18
$0211	$	L_LCD_Out_17:
$0211	$1303			BCF	STATUS, RP1
$0212	$1283			BCF	STATUS, RP0
$0213	$0846			MOVF	FARG_LCD_Out+0, 0
$0214	$3A01			XORLW	1
$0215	$1903			BTFSC	STATUS, Z
$0216	$2A00			GOTO	L_LCD_Out_19
$0217	$0846			MOVF	FARG_LCD_Out+0, 0
$0218	$3A02			XORLW	2
$0219	$1903			BTFSC	STATUS, Z
$021A	$2A05			GOTO	L_LCD_Out_20
$021B	$0846			MOVF	FARG_LCD_Out+0, 0
$021C	$3A03			XORLW	3
$021D	$1903			BTFSC	STATUS, Z
$021E	$2A08			GOTO	L_LCD_Out_21
$021F	$0846			MOVF	FARG_LCD_Out+0, 0
$0220	$3A04			XORLW	4
$0221	$1903			BTFSC	STATUS, Z
$0222	$2A0B			GOTO	L_LCD_Out_22
$0223	$2A0E			GOTO	L_LCD_Out_23
$0224	$	L_LCD_Out_18:
$0224	$0347			DECF	FARG_LCD_Out+1, 0
$0225	$00F0			MOVWF	STACK_0
$0226	$0846			MOVF	FARG_LCD_Out+0, 0
$0227	$07F0			ADDWF	STACK_0, 1
$0228	$0870			MOVF	STACK_0, 0
$0229	$00C6			MOVWF	FARG_LCD_Out+0
$022A	$0870			MOVF	STACK_0, 0
$022B	$00CC			MOVWF	FARG_Lcd_Cmd+0
$022C	$21C1			CALL	_Lcd_Cmd
$022D	$01A1			CLRF	LCD_cmd_status, 1
$022E	$01C9			CLRF	LCD_Out_i_L0, 1
$022F	$	L_LCD_Out_24:
$022F	$0849			MOVF	LCD_Out_i_L0, 0
$0230	$0748			ADDWF	FARG_LCD_Out+2, 0
$0231	$0084			MOVWF	FSR
$0232	$0800			MOVF	INDF, 0
$0233	$00F0			MOVWF	STACK_0
$0234	$0870			MOVF	STACK_0, 0
$0235	$1903			BTFSC	STATUS, Z
$0236	$2A3F			GOTO	L_LCD_Out_25
$0237	$0849			MOVF	LCD_Out_i_L0, 0
$0238	$0748			ADDWF	FARG_LCD_Out+2, 0
$0239	$0084			MOVWF	FSR
$023A	$0800			MOVF	INDF, 0
$023B	$00CB			MOVWF	FARG_Lcd_Chr_CP+0
$023C	$234A			CALL	_Lcd_Chr_CP
$023D	$0AC9			INCF	LCD_Out_i_L0, 1
$023E	$2A2F			GOTO	L_LCD_Out_24
$023F	$	L_LCD_Out_25:
$023F	$3001			MOVLW	1
$0240	$00A1			MOVWF	LCD_cmd_status
$0241	$0008			RETURN
$0363	$	_PWM2_Start:
$0363	$1303			BCF	STATUS, RP1
$0364	$1683			BSF	STATUS, RP0
$0365	$1087			BCF	TRISC, 1
$0366	$1283			BCF	STATUS, RP0
$0367	$1512			BSF	T2CON, 2
$0368	$300C			MOVLW	12
$0369	$049D			IORWF	CCP2CON, 1
$036A	$0008			RETURN
$02C5	$	_PWM2_Change_Duty:
$02C5	$1303			BCF	STATUS, RP1
$02C6	$1683			BSF	STATUS, RP0
$02C7	$0812			MOVF	PR2, 0
$02C8	$3F01			ADDLW	1
$02C9	$00F0			MOVWF	STACK_0
$02CA	$01F1			CLRF	STACK_0+1
$02CB	$1803			BTFSC	STATUS, C
$02CC	$0AF1			INCF	STACK_0+1, 1
$02CD	$1283			BCF	STATUS, RP0
$02CE	$0846			MOVF	FARG_PWM2_Change_Duty+0, 0
$02CF	$00F4			MOVWF	STACK_4
$02D0	$01F5			CLRF	STACK_4+1
$02D1	$2242			CALL	_mul_16x16_s
$02D2	$3006			MOVLW	6
$02D3	$00F2			MOVWF	STACK_2
$02D4	$0870			MOVF	STACK_0, 0
$02D5	$00F4			MOVWF	STACK_4
$02D6	$0871			MOVF	STACK_0+1, 0
$02D7	$00F5			MOVWF	STACK_4+1
$02D8	$0872			MOVF	STACK_2, 0
$02D9	$	L_PWM2_Change_Duty_0:
$02D9	$1903			BTFSC	STATUS, Z
$02DA	$2AE0			GOTO	L_PWM2_Change_Duty_1
$02DB	$0CF5			RRF	STACK_4+1, 1
$02DC	$0CF4			RRF	STACK_4, 1
$02DD	$13F5			BCF	STACK_4+1, 7
$02DE	$3FFF			ADDLW	255
$02DF	$2AD9			GOTO	L_PWM2_Change_Duty_0
$02E0	$	L_PWM2_Change_Duty_1:
$02E0	$0874			MOVF	STACK_4, 0
$02E1	$00F0			MOVWF	STACK_0
$02E2	$0DF0			RLF	STACK_0, 1
$02E3	$1070			BCF	STACK_0, 0
$02E4	$0DF0			RLF	STACK_0, 1
$02E5	$1070			BCF	STACK_0, 0
$02E6	$0DF0			RLF	STACK_0, 1
$02E7	$1070			BCF	STACK_0, 0
$02E8	$0DF0			RLF	STACK_0, 1
$02E9	$1070			BCF	STACK_0, 0
$02EA	$3030			MOVLW	48
$02EB	$0570			ANDWF	STACK_0, 0
$02EC	$00F3			MOVWF	STACK_3
$02ED	$0874			MOVF	STACK_4, 0
$02EE	$00F0			MOVWF	STACK_0
$02EF	$0875			MOVF	STACK_4+1, 0
$02F0	$00F1			MOVWF	STACK_0+1
$02F1	$0CF1			RRF	STACK_0+1, 1
$02F2	$0CF0			RRF	STACK_0, 1
$02F3	$13F1			BCF	STACK_0+1, 7
$02F4	$0CF1			RRF	STACK_0+1, 1
$02F5	$0CF0			RRF	STACK_0, 1
$02F6	$13F1			BCF	STACK_0+1, 7
$02F7	$0870			MOVF	STACK_0, 0
$02F8	$009B			MOVWF	CCPR2L
$02F9	$300F			MOVLW	15
$02FA	$059D			ANDWF	CCP2CON, 1
$02FB	$0873			MOVF	STACK_3, 0
$02FC	$049D			IORWF	CCP2CON, 1
$02FD	$0008			RETURN
$0371	$	_PWM1_Init:
$0371	$1303			BCF	STATUS, RP1
$0372	$1283			BCF	STATUS, RP0
$0373	$0195			CLRF	CCPR1L, 1
$0374	$1217			BCF	CCP1CON, 4
$0375	$1297			BCF	CCP1CON, 5
$0376	$0008			RETURN
$036B	$	_PWM2_Init:
$036B	$1303			BCF	STATUS, RP1
$036C	$1283			BCF	STATUS, RP0
$036D	$019B			CLRF	CCPR2L, 1
$036E	$121D			BCF	CCP2CON, 4
$036F	$129D			BCF	CCP2CON, 5
$0370	$0008			RETURN
$00E6	$	_WordToStr:
$00E6	$1303			BCF	STATUS, RP1
$00E7	$1283			BCF	STATUS, RP0
$00E8	$0848			MOVF	FARG_WordToStr+2, 0
$00E9	$0084			MOVWF	FSR
$00EA	$3020			MOVLW	32
$00EB	$0080			MOVWF	INDF
$00EC	$0A48			INCF	FARG_WordToStr+2, 0
$00ED	$00F0			MOVWF	STACK_0
$00EE	$0870			MOVF	STACK_0, 0
$00EF	$0084			MOVWF	FSR
$00F0	$3020			MOVLW	32
$00F1	$0080			MOVWF	INDF
$00F2	$3002			MOVLW	2
$00F3	$0748			ADDWF	FARG_WordToStr+2, 0
$00F4	$00F0			MOVWF	STACK_0
$00F5	$0870			MOVF	STACK_0, 0
$00F6	$0084			MOVWF	FSR
$00F7	$3020			MOVLW	32
$00F8	$0080			MOVWF	INDF
$00F9	$3003			MOVLW	3
$00FA	$0748			ADDWF	FARG_WordToStr+2, 0
$00FB	$00F0			MOVWF	STACK_0
$00FC	$0870			MOVF	STACK_0, 0
$00FD	$0084			MOVWF	FSR
$00FE	$3020			MOVLW	32
$00FF	$0080			MOVWF	INDF
$0100	$3004			MOVLW	4
$0101	$0748			ADDWF	FARG_WordToStr+2, 0
$0102	$00F0			MOVWF	STACK_0
$0103	$0870			MOVF	STACK_0, 0
$0104	$0084			MOVWF	FSR
$0105	$3030			MOVLW	48
$0106	$0080			MOVWF	INDF
$0107	$3005			MOVLW	5
$0108	$0748			ADDWF	FARG_WordToStr+2, 0
$0109	$00F0			MOVWF	STACK_0
$010A	$0870			MOVF	STACK_0, 0
$010B	$0084			MOVWF	FSR
$010C	$0180			CLRF	INDF, 1
$010D	$3004			MOVLW	4
$010E	$00C9			MOVWF	WordToStr_pos_L0
$010F	$	L_WordToStr_4:
$010F	$0847			MOVF	FARG_WordToStr+1, 0
$0110	$3C00			SUBLW	0
$0111	$1D03			BTFSS	STATUS, Z
$0112	$2915			GOTO	L_WordToStr_51
$0113	$0846			MOVF	FARG_WordToStr+0, 0
$0114	$3C00			SUBLW	0
$0115	$	L_WordToStr_51:
$0115	$1803			BTFSC	STATUS, C
$0116	$293A			GOTO	L_WordToStr_5
$0117	$0849			MOVF	WordToStr_pos_L0, 0
$0118	$0748			ADDWF	FARG_WordToStr+2, 0
$0119	$00CA			MOVWF	FLOC_WordToStr+1
$011A	$300A			MOVLW	10
$011B	$00F4			MOVWF	STACK_4
$011C	$01F5			CLRF	STACK_4+1
$011D	$0846			MOVF	FARG_WordToStr+0, 0
$011E	$00F0			MOVWF	STACK_0
$011F	$0847			MOVF	FARG_WordToStr+1, 0
$0120	$00F1			MOVWF	STACK_0+1
$0121	$231C			CALL	_div_16x16_u
$0122	$0878			MOVF	STACK_8, 0
$0123	$00F0			MOVWF	STACK_0
$0124	$0879			MOVF	STACK_9, 0
$0125	$00F1			MOVWF	STACK_1
$0126	$3030			MOVLW	48
$0127	$07F0			ADDWF	STACK_0, 1
$0128	$084A			MOVF	FLOC_WordToStr+1, 0
$0129	$0084			MOVWF	FSR
$012A	$0870			MOVF	STACK_0, 0
$012B	$0080			MOVWF	INDF
$012C	$300A			MOVLW	10
$012D	$00F4			MOVWF	STACK_4
$012E	$01F5			CLRF	STACK_4+1
$012F	$0846			MOVF	FARG_WordToStr+0, 0
$0130	$00F0			MOVWF	STACK_0
$0131	$0847			MOVF	FARG_WordToStr+1, 0
$0132	$00F1			MOVWF	STACK_0+1
$0133	$231C			CALL	_div_16x16_u
$0134	$0870			MOVF	STACK_0, 0
$0135	$00C6			MOVWF	FARG_WordToStr+0
$0136	$0871			MOVF	STACK_0+1, 0
$0137	$00C7			MOVWF	FARG_WordToStr+1
$0138	$03C9			DECF	WordToStr_pos_L0, 1
$0139	$290F			GOTO	L_WordToStr_4
$013A	$	L_WordToStr_5:
$013A	$0008			RETURN
$0193	$	_InitMain:
;pwmdisplay.c,8 :: 		void InitMain() {
;pwmdisplay.c,10 :: 		TRISB = 0;              // PORTB is output
$0193	$1303			BCF	STATUS, RP1
$0194	$1683			BSF	STATUS, RP0
$0195	$0186			CLRF	TRISB, 1
;pwmdisplay.c,13 :: 		TRISB = 0;                // PORTB is output
$0196	$0186			CLRF	TRISB, 1
;pwmdisplay.c,14 :: 		Lcd_Init(&PORTB);         // Initialize LCD connected to PORTB
$0197	$3006			MOVLW	PORTB
$0198	$1283			BCF	STATUS, RP0
$0199	$00C6			MOVWF	FARG_Lcd_Init+0
$019A	$209A			CALL	_Lcd_Init
;pwmdisplay.c,15 :: 		Lcd_Cmd(Lcd_CLEAR);       // Clear display
$019B	$3001			MOVLW	1
$019C	$00CC			MOVWF	FARG_Lcd_Cmd+0
$019D	$21C1			CALL	_Lcd_Cmd
;pwmdisplay.c,16 :: 		Lcd_Cmd(Lcd_CURSOR_OFF);  // Turn cursor off
$019E	$300C			MOVLW	12
$019F	$00CC			MOVWF	FARG_Lcd_Cmd+0
$01A0	$21C1			CALL	_Lcd_Cmd
;pwmdisplay.c,17 :: 		Lcd_Out(1, 1, text);      // Print text to LCD, 2nd row, 1st column
$01A1	$3001			MOVLW	1
$01A2	$00C6			MOVWF	FARG_LCD_Out+0
$01A3	$3001			MOVLW	1
$01A4	$00C7			MOVWF	FARG_LCD_Out+1
$01A5	$0822			MOVF	_text, 0
$01A6	$00C8			MOVWF	FARG_LCD_Out+2
$01A7	$21FF			CALL	_LCD_Out
;pwmdisplay.c,20 :: 		ADCON1 = 6;             // All ADC pins to digital I/O
$01A8	$3006			MOVLW	6
$01A9	$1683			BSF	STATUS, RP0
$01AA	$009F			MOVWF	ADCON1
;pwmdisplay.c,22 :: 		TRISA = 3;            // PORTA is input
$01AB	$3003			MOVLW	3
$01AC	$0085			MOVWF	TRISA
;pwmdisplay.c,25 :: 		portc = 0;
$01AD	$1283			BCF	STATUS, RP0
$01AE	$0187			CLRF	PORTC, 1
;pwmdisplay.c,26 :: 		TRISC = 0;              // PORTC is output
$01AF	$1683			BSF	STATUS, RP0
$01B0	$0187			CLRF	TRISC, 1
;pwmdisplay.c,27 :: 		Pwm1_Init(2000);         // Initialize PWM module p/ 2KHz
$01B1	$1283			BCF	STATUS, RP0
$01B2	$1412			BSF	T2CON, T2CKPS0
$01B3	$307C			MOVLW	124
$01B4	$1683			BSF	STATUS, RP0
$01B5	$0092			MOVWF	PR2
$01B6	$2371			CALL	_PWM1_Init
;pwmdisplay.c,28 :: 		pwm2_init(2000);
$01B7	$1412			BSF	T2CON, T2CKPS0
$01B8	$307C			MOVLW	124
$01B9	$1683			BSF	STATUS, RP0
$01BA	$0092			MOVWF	PR2
$01BB	$236B			CALL	_PWM2_Init
;pwmdisplay.c,29 :: 		pwm2_start();
$01BC	$2363			CALL	_PWM2_Start
;pwmdisplay.c,30 :: 		pwm2_change_duty(150);
$01BD	$3096			MOVLW	150
$01BE	$00C6			MOVWF	FARG_PWM2_Change_Duty+0
$01BF	$22C5			CALL	_PWM2_Change_Duty
;pwmdisplay.c,31 :: 		}//~
$01C0	$0008			RETURN
$035B	$	_PWM1_Start:
$035B	$1303			BCF	STATUS, RP1
$035C	$1683			BSF	STATUS, RP0
$035D	$1107			BCF	TRISC, 2
$035E	$1283			BCF	STATUS, RP0
$035F	$1512			BSF	T2CON, 2
$0360	$300C			MOVLW	12
$0361	$0497			IORWF	CCP1CON, 1
$0362	$0008			RETURN
$013B	$	_IntToStr:
$013B	$1303			BCF	STATUS, RP1
$013C	$1283			BCF	STATUS, RP0
$013D	$01C3			CLRF	IntToStr_negative_L0, 1
$013E	$083F			MOVF	FARG_IntToStr+0, 0
$013F	$00C4			MOVWF	IntToStr_inword_L0
$0140	$0840			MOVF	FARG_IntToStr+1, 0
$0141	$00C5			MOVWF	IntToStr_inword_L0+1
$0142	$3080			MOVLW	128
$0143	$0640			XORWF	FARG_IntToStr+1, 0
$0144	$00F0			MOVWF	STACK_0
$0145	$3080			MOVLW	128
$0146	$0270			SUBWF	STACK_0, 0
$0147	$1D03			BTFSS	STATUS, Z
$0148	$294B			GOTO	L_IntToStr_52
$0149	$3000			MOVLW	0
$014A	$023F			SUBWF	FARG_IntToStr+0, 0
$014B	$	L_IntToStr_52:
$014B	$1803			BTFSC	STATUS, C
$014C	$2957			GOTO	L_IntToStr_12
$014D	$3001			MOVLW	1
$014E	$00C3			MOVWF	IntToStr_negative_L0
$014F	$083F			MOVF	FARG_IntToStr+0, 0
$0150	$3C00			SUBLW	0
$0151	$00C4			MOVWF	IntToStr_inword_L0
$0152	$0840			MOVF	FARG_IntToStr+1, 0
$0153	$1C03			BTFSS	STATUS, C
$0154	$3F01			ADDLW	1
$0155	$01C5			CLRF	IntToStr_inword_L0+1
$0156	$02C5			SUBWF	IntToStr_inword_L0+1, 1
$0157	$	L_IntToStr_12:
$0157	$0844			MOVF	IntToStr_inword_L0, 0
$0158	$00C6			MOVWF	FARG_WordToStr+0
$0159	$0845			MOVF	IntToStr_inword_L0+1, 0
$015A	$00C7			MOVWF	FARG_WordToStr+1
$015B	$0841			MOVF	FARG_IntToStr+2, 0
$015C	$00C8			MOVWF	FARG_WordToStr+2
$015D	$20E6			CALL	_WordToStr
$015E	$3006			MOVLW	6
$015F	$00C2			MOVWF	IntToStr_i_L0
$0160	$	L_IntToStr_13:
$0160	$0842			MOVF	IntToStr_i_L0, 0
$0161	$3C00			SUBLW	0
$0162	$1803			BTFSC	STATUS, C
$0163	$2978			GOTO	L_IntToStr_14
$0164	$0842			MOVF	IntToStr_i_L0, 0
$0165	$0741			ADDWF	FARG_IntToStr+2, 0
$0166	$00F2			MOVWF	STACK_2
$0167	$3001			MOVLW	1
$0168	$0242			SUBWF	IntToStr_i_L0, 0
$0169	$00F0			MOVWF	STACK_0
$016A	$01F1			CLRF	STACK_0+1
$016B	$1C03			BTFSS	STATUS, C
$016C	$03F1			DECF	STACK_0+1, 1
$016D	$0870			MOVF	STACK_0, 0
$016E	$0741			ADDWF	FARG_IntToStr+2, 0
$016F	$0084			MOVWF	FSR
$0170	$0800			MOVF	INDF, 0
$0171	$00F0			MOVWF	STACK_0
$0172	$0872			MOVF	STACK_2, 0
$0173	$0084			MOVWF	FSR
$0174	$0870			MOVF	STACK_0, 0
$0175	$0080			MOVWF	INDF
$0176	$03C2			DECF	IntToStr_i_L0, 1
$0177	$2960			GOTO	L_IntToStr_13
$0178	$	L_IntToStr_14:
$0178	$0841			MOVF	FARG_IntToStr+2, 0
$0179	$0084			MOVWF	FSR
$017A	$3020			MOVLW	32
$017B	$0080			MOVWF	INDF
$017C	$0843			MOVF	IntToStr_negative_L0, 0
$017D	$1903			BTFSC	STATUS, Z
$017E	$2992			GOTO	L_IntToStr_15
$017F	$	L_IntToStr_16:
$017F	$0842			MOVF	IntToStr_i_L0, 0
$0180	$0741			ADDWF	FARG_IntToStr+2, 0
$0181	$0084			MOVWF	FSR
$0182	$0800			MOVF	INDF, 0
$0183	$00F2			MOVWF	STACK_2
$0184	$0872			MOVF	STACK_2, 0
$0185	$3A20			XORLW	32
$0186	$1D03			BTFSS	STATUS, Z
$0187	$298A			GOTO	L_IntToStr_17
$0188	$0AC2			INCF	IntToStr_i_L0, 1
$0189	$297F			GOTO	L_IntToStr_16
$018A	$	L_IntToStr_17:
$018A	$03C2			DECF	IntToStr_i_L0, 1
$018B	$0842			MOVF	IntToStr_i_L0, 0
$018C	$0741			ADDWF	FARG_IntToStr+2, 0
$018D	$00F0			MOVWF	STACK_0
$018E	$0870			MOVF	STACK_0, 0
$018F	$0084			MOVWF	FSR
$0190	$302D			MOVLW	45
$0191	$0080			MOVWF	INDF
$0192	$	L_IntToStr_15:
$0192	$0008			RETURN
$028C	$	_PWM1_Change_Duty:
$028C	$1303			BCF	STATUS, RP1
$028D	$1683			BSF	STATUS, RP0
$028E	$0812			MOVF	PR2, 0
$028F	$3F01			ADDLW	1
$0290	$00F0			MOVWF	STACK_0
$0291	$01F1			CLRF	STACK_0+1
$0292	$1803			BTFSC	STATUS, C
$0293	$0AF1			INCF	STACK_0+1, 1
$0294	$1283			BCF	STATUS, RP0
$0295	$083F			MOVF	FARG_PWM1_Change_Duty+0, 0
$0296	$00F4			MOVWF	STACK_4
$0297	$01F5			CLRF	STACK_4+1
$0298	$2242			CALL	_mul_16x16_s
$0299	$3006			MOVLW	6
$029A	$00F2			MOVWF	STACK_2
$029B	$0870			MOVF	STACK_0, 0
$029C	$00F4			MOVWF	STACK_4
$029D	$0871			MOVF	STACK_0+1, 0
$029E	$00F5			MOVWF	STACK_4+1
$029F	$0872			MOVF	STACK_2, 0
$02A0	$	L_PWM1_Change_Duty_2:
$02A0	$1903			BTFSC	STATUS, Z
$02A1	$2AA7			GOTO	L_PWM1_Change_Duty_3
$02A2	$0CF5			RRF	STACK_4+1, 1
$02A3	$0CF4			RRF	STACK_4, 1
$02A4	$13F5			BCF	STACK_4+1, 7
$02A5	$3FFF			ADDLW	255
$02A6	$2AA0			GOTO	L_PWM1_Change_Duty_2
$02A7	$	L_PWM1_Change_Duty_3:
$02A7	$0874			MOVF	STACK_4, 0
$02A8	$00F0			MOVWF	STACK_0
$02A9	$0DF0			RLF	STACK_0, 1
$02AA	$1070			BCF	STACK_0, 0
$02AB	$0DF0			RLF	STACK_0, 1
$02AC	$1070			BCF	STACK_0, 0
$02AD	$0DF0			RLF	STACK_0, 1
$02AE	$1070			BCF	STACK_0, 0
$02AF	$0DF0			RLF	STACK_0, 1
$02B0	$1070			BCF	STACK_0, 0
$02B1	$3030			MOVLW	48
$02B2	$0570			ANDWF	STACK_0, 0
$02B3	$00F3			MOVWF	STACK_3
$02B4	$0874			MOVF	STACK_4, 0
$02B5	$00F0			MOVWF	STACK_0
$02B6	$0875			MOVF	STACK_4+1, 0
$02B7	$00F1			MOVWF	STACK_0+1
$02B8	$0CF1			RRF	STACK_0+1, 1
$02B9	$0CF0			RRF	STACK_0, 1
$02BA	$13F1			BCF	STACK_0+1, 7
$02BB	$0CF1			RRF	STACK_0+1, 1
$02BC	$0CF0			RRF	STACK_0, 1
$02BD	$13F1			BCF	STACK_0+1, 7
$02BE	$0870			MOVF	STACK_0, 0
$02BF	$0095			MOVWF	CCPR1L
$02C0	$300F			MOVLW	15
$02C1	$0597			ANDWF	CCP1CON, 1
$02C2	$0873			MOVF	STACK_3, 0
$02C3	$0497			IORWF	CCP1CON, 1
$02C4	$0008			RETURN
$02FE	$	GlobalInipwmdisplay:
$02FE	$3056			MOVLW	86
$02FF	$1303			BCF	STATUS, RP1
$0300	$1283			BCF	STATUS, RP0
$0301	$00A3			MOVWF	lstr1_pwmdisplay+0
$0302	$3061			MOVLW	97
$0303	$00A4			MOVWF	lstr1_pwmdisplay+1
$0304	$306C			MOVLW	108
$0305	$00A5			MOVWF	lstr1_pwmdisplay+2
$0306	$306F			MOVLW	111
$0307	$00A6			MOVWF	lstr1_pwmdisplay+3
$0308	$3072			MOVLW	114
$0309	$00A7			MOVWF	lstr1_pwmdisplay+4
$030A	$3020			MOVLW	32
$030B	$00A8			MOVWF	lstr1_pwmdisplay+5
$030C	$3064			MOVLW	100
$030D	$00A9			MOVWF	lstr1_pwmdisplay+6
$030E	$3065			MOVLW	101
$030F	$00AA			MOVWF	lstr1_pwmdisplay+7
$0310	$3020			MOVLW	32
$0311	$00AB			MOVWF	lstr1_pwmdisplay+8
$0312	$3050			MOVLW	80
$0313	$00AC			MOVWF	lstr1_pwmdisplay+9
$0314	$3057			MOVLW	87
$0315	$00AD			MOVWF	lstr1_pwmdisplay+10
$0316	$303A			MOVLW	58
$0317	$00AE			MOVWF	lstr1_pwmdisplay+11
$0318	$01AF			CLRF	lstr1_pwmdisplay+12
$0319	$3023			MOVLW	lstr1_pwmdisplay
$031A	$00A2			MOVWF	_text+0
$031B	$0008			RETURN
$0004	$	_main:
;pwmdisplay.c,33 :: 		void main()
;pwmdisplay.c,35 :: 		InitMain();
$0004	$22FE			CALL	GlobalInipwmdisplay
$0005	$2193			CALL	_InitMain
;pwmdisplay.c,36 :: 		j   = 20;               // Initial value for j  (0<=j<=255)
$0006	$3014			MOVLW	20
$0007	$00B0			MOVWF	_j
;pwmdisplay.c,37 :: 		oj  = 0;                // oj will keep the 'old j' value
$0008	$01B1			CLRF	_oj, 1
;pwmdisplay.c,38 :: 		Pwm1_Start();            // Start PWM
$0009	$235B			CALL	_PWM1_Start
;pwmdisplay.c,40 :: 		IntToStr(j, txt1);
$000A	$0830			MOVF	_j, 0
$000B	$00BF			MOVWF	FARG_IntToStr+0
$000C	$01C0			CLRF	FARG_IntToStr+1
$000D	$3032			MOVLW	_txt1
$000E	$00C1			MOVWF	FARG_IntToStr+2
$000F	$213B			CALL	_IntToStr
;pwmdisplay.c,41 :: 		Lcd_Out(2, 1, txt1);
$0010	$3002			MOVLW	2
$0011	$00C6			MOVWF	FARG_LCD_Out+0
$0012	$3001			MOVLW	1
$0013	$00C7			MOVWF	FARG_LCD_Out+1
$0014	$3032			MOVLW	_txt1
$0015	$00C8			MOVWF	FARG_LCD_Out+2
$0016	$21FF			CALL	_LCD_Out
;pwmdisplay.c,44 :: 		do
$0017	$	L_main_0:
;pwmdisplay.c,46 :: 		if (PORTA.F0)
$0017	$1C05			BTFSS	PORTA, 0
$0018	$2853			GOTO	L_main_2
;pwmdisplay.c,48 :: 		Delay_ms(10);
$0019	$300D			MOVLW	13
$001A	$00FB			MOVWF	STACK_11
$001B	$30FF			MOVLW	255
$001C	$00FA			MOVWF	STACK_10
$001D	$0BFB			DECFSZ	STACK_11, F
$001E	$2820			GOTO	$+2
$001F	$2823			GOTO	$+4
$0020	$0BFA			DECFSZ	STACK_10, F
$0021	$2820			GOTO	$-1
$0022	$281D			GOTO	$-5
$0023	$30F3			MOVLW	243
$0024	$00FA			MOVWF	STACK_10
$0025	$0BFA			DECFSZ	STACK_10, F
$0026	$2825			GOTO	$-1
$0027	$0000			NOP
;pwmdisplay.c,49 :: 		if(PORTA.F0)
$0028	$1C05			BTFSS	PORTA, 0
$0029	$2840			GOTO	L_main_3
;pwmdisplay.c,51 :: 		if( j <= 220 )
$002A	$0830			MOVF	_j, 0
$002B	$3CDC			SUBLW	220
$002C	$1C03			BTFSS	STATUS, C
$002D	$2840			GOTO	L_main_4
;pwmdisplay.c,53 :: 		j=j+10 ;
$002E	$300A			MOVLW	10
$002F	$0730			ADDWF	_j, 0
$0030	$00F0			MOVWF	STACK_0
$0031	$0870			MOVF	STACK_0, 0
$0032	$00B0			MOVWF	_j
;pwmdisplay.c,54 :: 		IntToStr(j, txt1);
$0033	$0870			MOVF	STACK_0, 0
$0034	$00BF			MOVWF	FARG_IntToStr+0
$0035	$01C0			CLRF	FARG_IntToStr+1
$0036	$3032			MOVLW	_txt1
$0037	$00C1			MOVWF	FARG_IntToStr+2
$0038	$213B			CALL	_IntToStr
;pwmdisplay.c,55 :: 		Lcd_Out(2, 1, txt1);
$0039	$3002			MOVLW	2
$003A	$00C6			MOVWF	FARG_LCD_Out+0
$003B	$3001			MOVLW	1
$003C	$00C7			MOVWF	FARG_LCD_Out+1
$003D	$3032			MOVLW	_txt1
$003E	$00C8			MOVWF	FARG_LCD_Out+2
$003F	$21FF			CALL	_LCD_Out
;pwmdisplay.c,56 :: 		}
$0040	$	L_main_4:
;pwmdisplay.c,57 :: 		}
$0040	$	L_main_3:
;pwmdisplay.c,58 :: 		do
$0040	$	L_main_5:
;pwmdisplay.c,60 :: 		do
$0040	$	L_main_7:
;pwmdisplay.c,62 :: 		}while(PORTA.F0);
$0040	$1805			BTFSC	PORTA, 0
$0041	$2840			GOTO	L_main_7
$0042	$	L_main_8:
;pwmdisplay.c,63 :: 		Delay_ms(10);
$0042	$300D			MOVLW	13
$0043	$00FB			MOVWF	STACK_11
$0044	$30FF			MOVLW	255
$0045	$00FA			MOVWF	STACK_10
$0046	$0BFB			DECFSZ	STACK_11, F
$0047	$2849			GOTO	$+2
$0048	$284C			GOTO	$+4
$0049	$0BFA			DECFSZ	STACK_10, F
$004A	$2849			GOTO	$-1
$004B	$2846			GOTO	$-5
$004C	$30F3			MOVLW	243
$004D	$00FA			MOVWF	STACK_10
$004E	$0BFA			DECFSZ	STACK_10, F
$004F	$284E			GOTO	$-1
$0050	$0000			NOP
;pwmdisplay.c,64 :: 		}while(PORTA.F0);
$0051	$1805			BTFSC	PORTA, 0
$0052	$2840			GOTO	L_main_5
$0053	$	L_main_6:
;pwmdisplay.c,65 :: 		}
$0053	$	L_main_2:
;pwmdisplay.c,66 :: 		if (PORTA.F1)
$0053	$1C85			BTFSS	PORTA, 1
$0054	$288F			GOTO	L_main_9
;pwmdisplay.c,68 :: 		Delay_ms(10);
$0055	$300D			MOVLW	13
$0056	$00FB			MOVWF	STACK_11
$0057	$30FF			MOVLW	255
$0058	$00FA			MOVWF	STACK_10
$0059	$0BFB			DECFSZ	STACK_11, F
$005A	$285C			GOTO	$+2
$005B	$285F			GOTO	$+4
$005C	$0BFA			DECFSZ	STACK_10, F
$005D	$285C			GOTO	$-1
$005E	$2859			GOTO	$-5
$005F	$30F3			MOVLW	243
$0060	$00FA			MOVWF	STACK_10
$0061	$0BFA			DECFSZ	STACK_10, F
$0062	$2861			GOTO	$-1
$0063	$0000			NOP
;pwmdisplay.c,69 :: 		if(PORTA.F1)
$0064	$1C85			BTFSS	PORTA, 1
$0065	$287C			GOTO	L_main_10
;pwmdisplay.c,71 :: 		if( j >= 30)
$0066	$301E			MOVLW	30
$0067	$0230			SUBWF	_j, 0
$0068	$1C03			BTFSS	STATUS, C
$0069	$287C			GOTO	L_main_11
;pwmdisplay.c,73 :: 		j=j-10 ;
$006A	$300A			MOVLW	10
$006B	$0230			SUBWF	_j, 0
$006C	$00F0			MOVWF	STACK_0
$006D	$0870			MOVF	STACK_0, 0
$006E	$00B0			MOVWF	_j
;pwmdisplay.c,74 :: 		IntToStr(j, txt1);
$006F	$0870			MOVF	STACK_0, 0
$0070	$00BF			MOVWF	FARG_IntToStr+0
$0071	$01C0			CLRF	FARG_IntToStr+1
$0072	$3032			MOVLW	_txt1
$0073	$00C1			MOVWF	FARG_IntToStr+2
$0074	$213B			CALL	_IntToStr
;pwmdisplay.c,75 :: 		Lcd_Out(2, 1, txt1);
$0075	$3002			MOVLW	2
$0076	$00C6			MOVWF	FARG_LCD_Out+0
$0077	$3001			MOVLW	1
$0078	$00C7			MOVWF	FARG_LCD_Out+1
$0079	$3032			MOVLW	_txt1
$007A	$00C8			MOVWF	FARG_LCD_Out+2
$007B	$21FF			CALL	_LCD_Out
;pwmdisplay.c,76 :: 		}
$007C	$	L_main_11:
;pwmdisplay.c,77 :: 		}
$007C	$	L_main_10:
;pwmdisplay.c,78 :: 		do
$007C	$	L_main_12:
;pwmdisplay.c,80 :: 		do
$007C	$	L_main_14:
;pwmdisplay.c,82 :: 		}while(PORTA.F1);
$007C	$1885			BTFSC	PORTA, 1
$007D	$287C			GOTO	L_main_14
$007E	$	L_main_15:
;pwmdisplay.c,83 :: 		Delay_ms(10);
$007E	$300D			MOVLW	13
$007F	$00FB			MOVWF	STACK_11
$0080	$30FF			MOVLW	255
$0081	$00FA			MOVWF	STACK_10
$0082	$0BFB			DECFSZ	STACK_11, F
$0083	$2885			GOTO	$+2
$0084	$2888			GOTO	$+4
$0085	$0BFA			DECFSZ	STACK_10, F
$0086	$2885			GOTO	$-1
$0087	$2882			GOTO	$-5
$0088	$30F3			MOVLW	243
$0089	$00FA			MOVWF	STACK_10
$008A	$0BFA			DECFSZ	STACK_10, F
$008B	$288A			GOTO	$-1
$008C	$0000			NOP
;pwmdisplay.c,84 :: 		}while(PORTA.F1);
$008D	$1885			BTFSC	PORTA, 1
$008E	$287C			GOTO	L_main_12
$008F	$	L_main_13:
;pwmdisplay.c,85 :: 		}
$008F	$	L_main_9:
;pwmdisplay.c,86 :: 		if (oj != j)
$008F	$0831			MOVF	_oj, 0
$0090	$0630			XORWF	_j, 0
$0091	$1903			BTFSC	STATUS, Z
$0092	$2898			GOTO	L_main_16
;pwmdisplay.c,88 :: 		Pwm1_Change_Duty(j); //   set new duty ratio,
$0093	$0830			MOVF	_j, 0
$0094	$00BF			MOVWF	FARG_PWM1_Change_Duty+0
$0095	$228C			CALL	_PWM1_Change_Duty
;pwmdisplay.c,89 :: 		oj = j;             //   memorize it,
$0096	$0830			MOVF	_j, 0
$0097	$00B1			MOVWF	_oj
;pwmdisplay.c,90 :: 		}
$0098	$	L_main_16:
;pwmdisplay.c,91 :: 		}  while (1);
$0098	$2817			GOTO	L_main_0
;pwmdisplay.c,92 :: 		}
$0099	$2899			GOTO	$


//** Procedures locations **
//ADDRESS		PROCEDURE
//----------------------------------------------
$0004		main
$009A		Lcd_Init
$00E6		WordToStr
$013B		IntToStr
$0193		InitMain
$01C1		Lcd_Cmd
$01FF		LCD_Out
$0242		Mul_16x16_S
$028C		PWM1_Change_Duty
$02C5		PWM2_Change_Duty
$02FE		GlobalInipwmdisplay
$031C		Div_16x16_U
$0339		Delay_5500us
$034A		Lcd_Chr_CP
$0353		Delay_50us
$035B		PWM1_Start
$0363		PWM2_Start
$036B		PWM2_Init
$0371		PWM1_Init
$0377		Delay_1us


//** Labels locations **
//ADDRESS		LABEL
//----------------------------------------------
$0004		_main:
$0017		L_main_0:
$0040		L_main_3:
$0040		L_main_4:
$0040		L_main_5:
$0040		L_main_7:
$0042		L_main_8:
$0053		L_main_2:
$0053		L_main_6:
$007C		L_main_10:
$007C		L_main_11:
$007C		L_main_12:
$007C		L_main_14:
$007E		L_main_15:
$008F		L_main_13:
$008F		L_main_9:
$0098		L_main_16:
$009A		_Lcd_Init:
$00E6		_WordToStr:
$010F		L_WordToStr_4:
$0115		L_WordToStr_51:
$013A		L_WordToStr_5:
$013B		_IntToStr:
$014B		L_IntToStr_52:
$0157		L_IntToStr_12:
$0160		L_IntToStr_13:
$0178		L_IntToStr_14:
$017F		L_IntToStr_16:
$018A		L_IntToStr_17:
$0192		L_IntToStr_15:
$0193		_InitMain:
$01C1		_Lcd_Cmd:
$01C8		L_Lcd_Cmd_0:
$01DB		L_Lcd_Cmd_1:
$01DC		L_Lcd_Cmd_2:
$01E1		L_Lcd_Cmd_3:
$01F4		L_Lcd_Cmd_4:
$01F5		L_Lcd_Cmd_5:
$01FD		L_Lcd_Cmd_6:
$01FE		L_Lcd_Cmd_7:
$01FF		_LCD_Out:
$0200		L_LCD_Out_19:
$0205		L_LCD_Out_20:
$0208		L_LCD_Out_21:
$020B		L_LCD_Out_22:
$020E		L_LCD_Out_23:
$0211		L_LCD_Out_17:
$0224		L_LCD_Out_18:
$022F		L_LCD_Out_24:
$023F		L_LCD_Out_25:
$0242		_Mul_16x16_S:
$028C		_PWM1_Change_Duty:
$02A0		L_PWM1_Change_Duty_2:
$02A7		L_PWM1_Change_Duty_3:
$02C5		_PWM2_Change_Duty:
$02D9		L_PWM2_Change_Duty_0:
$02E0		L_PWM2_Change_Duty_1:
$02FE		GlobalInipwmdisplay:
$031C		_Div_16x16_U:
$0339		_Delay_5500us:
$034A		_Lcd_Chr_CP:
$0353		_Delay_50us:
$035B		_PWM1_Start:
$0363		_PWM2_Start:
$036B		_PWM2_Init:
$0371		_PWM1_Init:
$0377		_Delay_1us:


//** Variables locations **
//ADDRESS		VARIABLE
//----------------------------------------------
$0000		INDF
$0002		PCL
$0003		STATUS
$0004		FSR
$0005		PORTA
$0006		PORTB
$0007		PORTC
$000A		PCLATH
$0012		T2CON
$0015		CCPR1L
$0017		CCP1CON
$001B		CCPR2L
$001D		CCP2CON
$0020		LCD_port_address
$0021		LCD_cmd_status
$0022		_text
$0023		lstr1_pwmdisplay
$0030		_j
$0031		_oj
$0032		_txt1
$003F		FARG_IntToStr+0
$003F		FARG_PWM1_Change_Duty+0
$0041		FARG_IntToStr+2
$0042		IntToStr_i_L0
$0043		IntToStr_negative_L0
$0044		IntToStr_inword_L0
$0046		FARG_Lcd_Init+0
$0046		FARG_LCD_Out+0
$0046		FARG_PWM1_Init+0
$0046		FARG_PWM2_Change_Duty+0
$0046		FARG_PWM2_Init+0
$0046		FARG_WordToStr+0
$0047		FARG_LCD_Out+1
$0048		FARG_LCD_Out+2
$0048		FARG_WordToStr+2
$0049		LCD_Out_i_L0
$0049		WordToStr_pos_L0
$004A		
$004B		FARG_Lcd_Chr_CP+0
$004C		FARG_Lcd_Cmd+0
$0070		STACK_0
$0071		STACK_1
$0072		STACK_2
$0073		STACK_3
$0074		STACK_4
$0075		STACK_5
$0076		STACK_6
$0077		STACK_7
$0078		STACK_8
$0079		STACK_9
$007A		STACK_10
$007B		STACK_11
$007C		STACK_12
$007D		STACK_13
$007E		STACK_14
$007F		STACK_15
$0085		TRISA
$0086		TRISB
$0087		TRISC
$0092		PR2
$009F		ADCON1


