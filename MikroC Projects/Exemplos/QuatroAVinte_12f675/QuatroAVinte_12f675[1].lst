;  ASM code generated by mikroVirtualMachine for PIC - V. 8.1.0.0
;  Date/Time: 11/06/2010 19:41:15
;  Info: http://www.mikroe.com


; ADDRESS	OPCODE	ASM
; ----------------------------------------------
$0000	$28B4			GOTO	_main
$00F3	$	_timer_1_off:
;base_12f.h,81 :: 		void	timer_1_off()  {T1CON.TMR1ON = 0;}
$00F3	$1303			BCF	STATUS, RP1
$00F4	$1283			BCF	STATUS, RP0
$00F5	$1010			BCF	T1CON, 0
$00F6	$0008			RETURN
$00D0	$	_set_timer_1:
;base_12f.h,66 :: 		void set_timer_1(unsigned long c)	{
;base_12f.h,67 :: 		TMR1L = (unsigned char) (c);
$00D0	$1303			BCF	STATUS, RP1
$00D1	$1283			BCF	STATUS, RP0
$00D2	$0825			MOVF	FARG_set_timer_1+0, 0
$00D3	$008E			MOVWF	TMR1L
;base_12f.h,68 :: 		TMR1H = (unsigned char) (c>>8);
$00D4	$0826			MOVF	FARG_set_timer_1+1, 0
$00D5	$00D0			MOVWF	STACK_0
$00D6	$0827			MOVF	FARG_set_timer_1+2, 0
$00D7	$00D1			MOVWF	STACK_0+1
$00D8	$0828			MOVF	FARG_set_timer_1+3, 0
$00D9	$00D2			MOVWF	STACK_0+2
$00DA	$01D3			CLRF	STACK_0+3
$00DB	$0850			MOVF	STACK_0, 0
$00DC	$008F			MOVWF	TMR1H
;base_12f.h,69 :: 		}
$00DD	$0008			RETURN
$00F7	$	_timer_1_on:
;base_12f.h,79 :: 		void	timer_1_on()  {	T1CON.TMR1ON = 1;}
$00F7	$1303			BCF	STATUS, RP1
$00F8	$1283			BCF	STATUS, RP0
$00F9	$1410			BSF	T1CON, 0
$00FA	$0008			RETURN
$0004	$	_interrupt:
$0004	$00DF			MOVWF	STACK_15
$0005	$0E03			SWAPF	STATUS, 0
$0006	$0183			CLRF	STATUS
$0007	$00A3			MOVWF	?saveSTATUS
$0008	$0804			MOVF	FSR, 0
$0009	$00A2			MOVWF	?saveFSR
$000A	$080A			MOVF	PCLATH, 0
$000B	$00A4			MOVWF	?savePCLATH
$000C	$018A			CLRF	PCLATH
$000D	$0852			MOVF	STACK_2, 0
$000E	$00AC			MOVWF	STSAVED_2
$000F	$0851			MOVF	STACK_1, 0
$0010	$00AB			MOVWF	STSAVED_1
$0011	$0850			MOVF	STACK_0, 0
$0012	$00AA			MOVWF	STSAVED_0
;QuatroAVinte_12f675.c,49 :: 		void interrupt ()
;QuatroAVinte_12f675.c,51 :: 		INTCON.GIE =0;
$0013	$138B			BCF	INTCON, 7
;QuatroAVinte_12f675.c,54 :: 		if (PIR1.TMR1IF)
$0014	$1C0C			BTFSS	PIR1, 0
$0015	$2877			GOTO	L_interrupt_2
;QuatroAVinte_12f675.c,56 :: 		if(valor_adc>100 && valor_adc < 1020)
$0016	$3080			MOVLW	128
$0017	$00D0			MOVWF	STACK_0
$0018	$3080			MOVLW	128
$0019	$0621			XORWF	_valor_adc+1, 0
$001A	$0250			SUBWF	STACK_0, 0
$001B	$1D03			BTFSS	STATUS, Z
$001C	$281F			GOTO	L_interrupt_10
$001D	$0820			MOVF	_valor_adc, 0
$001E	$3C64			SUBLW	100
$001F	$	L_interrupt_10:
$001F	$1803			BTFSC	STATUS, C
$0020	$285E			GOTO	L_interrupt_5
$0021	$3080			MOVLW	128
$0022	$0621			XORWF	_valor_adc+1, 0
$0023	$00D0			MOVWF	STACK_0
$0024	$3080			MOVLW	128
$0025	$3A03			XORLW	3
$0026	$0250			SUBWF	STACK_0, 0
$0027	$1D03			BTFSS	STATUS, Z
$0028	$282B			GOTO	L_interrupt_11
$0029	$30FC			MOVLW	252
$002A	$0220			SUBWF	_valor_adc, 0
$002B	$	L_interrupt_11:
$002B	$1803			BTFSC	STATUS, C
$002C	$285E			GOTO	L_interrupt_5
$002D	$	L62_ex_L_interrupt_5:
;QuatroAVinte_12f675.c,58 :: 		if(GPIO.f2)    {
$002D	$1D05			BTFSS	GPIO, 2
$002E	$2847			GOTO	L_interrupt_6
;QuatroAVinte_12f675.c,59 :: 		timer_1_off();
$002F	$20F3			CALL	_timer_1_off
;QuatroAVinte_12f675.c,60 :: 		GPIO.f2 = 0;
$0030	$1105			BCF	GPIO, 2
;QuatroAVinte_12f675.c,61 :: 		set_timer_1(65535 - (1024-valor_adc));
$0031	$0820			MOVF	_valor_adc, 0
$0032	$3C00			SUBLW	0
$0033	$00D0			MOVWF	STACK_0
$0034	$0821			MOVF	_valor_adc+1, 0
$0035	$1C03			BTFSS	STATUS, C
$0036	$3F01			ADDLW	1
$0037	$3C04			SUBLW	4
$0038	$00D1			MOVWF	STACK_0+1
$0039	$0850			MOVF	STACK_0, 0
$003A	$3CFF			SUBLW	255
$003B	$00A5			MOVWF	FARG_set_timer_1+0
$003C	$0851			MOVF	STACK_0+1, 0
$003D	$1C03			BTFSS	STATUS, C
$003E	$3F01			ADDLW	1
$003F	$3CFF			SUBLW	255
$0040	$00A6			MOVWF	FARG_set_timer_1+1
$0041	$3000			MOVLW	0
$0042	$00A7			MOVWF	FARG_set_timer_1+2
$0043	$00A8			MOVWF	FARG_set_timer_1+3
$0044	$20D0			CALL	_set_timer_1
;QuatroAVinte_12f675.c,62 :: 		timer_1_on();
$0045	$20F7			CALL	_timer_1_on
;QuatroAVinte_12f675.c,64 :: 		}
$0046	$285E			GOTO	L_interrupt_7
$0047	$	L_interrupt_6:
;QuatroAVinte_12f675.c,66 :: 		timer_1_off();
$0047	$20F3			CALL	_timer_1_off
;QuatroAVinte_12f675.c,67 :: 		GPIO.f2 = 1;
$0048	$1505			BSF	GPIO, 2
;QuatroAVinte_12f675.c,68 :: 		set_timer_1(65535 - (valor_adc-1));
$0049	$3001			MOVLW	1
$004A	$0220			SUBWF	_valor_adc, 0
$004B	$00D0			MOVWF	STACK_0
$004C	$3000			MOVLW	0
$004D	$1C03			BTFSS	STATUS, C
$004E	$3F01			ADDLW	1
$004F	$0221			SUBWF	_valor_adc+1, 0
$0050	$00D1			MOVWF	STACK_0+1
$0051	$0850			MOVF	STACK_0, 0
$0052	$3CFF			SUBLW	255
$0053	$00A5			MOVWF	FARG_set_timer_1+0
$0054	$0851			MOVF	STACK_0+1, 0
$0055	$1C03			BTFSS	STATUS, C
$0056	$3F01			ADDLW	1
$0057	$3CFF			SUBLW	255
$0058	$00A6			MOVWF	FARG_set_timer_1+1
$0059	$3000			MOVLW	0
$005A	$00A7			MOVWF	FARG_set_timer_1+2
$005B	$00A8			MOVWF	FARG_set_timer_1+3
$005C	$20D0			CALL	_set_timer_1
;QuatroAVinte_12f675.c,69 :: 		timer_1_on();
$005D	$20F7			CALL	_timer_1_on
;QuatroAVinte_12f675.c,70 :: 		}
$005E	$	L_interrupt_7:
;QuatroAVinte_12f675.c,72 :: 		}
$005E	$	L_interrupt_5:
;QuatroAVinte_12f675.c,74 :: 		if(valor_adc < 100) GPIO.f2 = 0;
$005E	$3080			MOVLW	128
$005F	$0621			XORWF	_valor_adc+1, 0
$0060	$00D0			MOVWF	STACK_0
$0061	$3080			MOVLW	128
$0062	$0250			SUBWF	STACK_0, 0
$0063	$1D03			BTFSS	STATUS, Z
$0064	$2867			GOTO	L_interrupt_12
$0065	$3064			MOVLW	100
$0066	$0220			SUBWF	_valor_adc, 0
$0067	$	L_interrupt_12:
$0067	$1803			BTFSC	STATUS, C
$0068	$286A			GOTO	L_interrupt_8
$0069	$1105			BCF	GPIO, 2
$006A	$	L_interrupt_8:
;QuatroAVinte_12f675.c,75 :: 		if (valor_adc > 1020)  GPIO.f2 = 1;
$006A	$3080			MOVLW	128
$006B	$3A03			XORLW	3
$006C	$00D0			MOVWF	STACK_0
$006D	$3080			MOVLW	128
$006E	$0621			XORWF	_valor_adc+1, 0
$006F	$0250			SUBWF	STACK_0, 0
$0070	$1D03			BTFSS	STATUS, Z
$0071	$2874			GOTO	L_interrupt_13
$0072	$0820			MOVF	_valor_adc, 0
$0073	$3CFC			SUBLW	252
$0074	$	L_interrupt_13:
$0074	$1803			BTFSC	STATUS, C
$0075	$2877			GOTO	L_interrupt_9
$0076	$1505			BSF	GPIO, 2
$0077	$	L_interrupt_9:
;QuatroAVinte_12f675.c,79 :: 		}
$0077	$	L_interrupt_2:
;QuatroAVinte_12f675.c,80 :: 		PIR1.TMR1IF = 0;
$0077	$100C			BCF	PIR1, 0
;QuatroAVinte_12f675.c,81 :: 		INTCON.GIE =1;
$0078	$178B			BSF	INTCON, 7
;QuatroAVinte_12f675.c,82 :: 		}
$0079	$	L_Interrupt_end:
$0079	$082C			MOVF	STSAVED_2, 0
$007A	$00D2			MOVWF	STACK_2
$007B	$082B			MOVF	STSAVED_1, 0
$007C	$00D1			MOVWF	STACK_1
$007D	$082A			MOVF	STSAVED_0, 0
$007E	$00D0			MOVWF	STACK_0
$007F	$0824			MOVF	?savePCLATH, 0
$0080	$008A			MOVWF	PCLATH
$0081	$0822			MOVF	?saveFSR, 0
$0082	$0084			MOVWF	FSR
$0083	$0E23			SWAPF	?saveSTATUS, 0
$0084	$0083			MOVWF	STATUS
$0085	$0EDF			SWAPF	STACK_15, 1
$0086	$0E5F			SWAPF	STACK_15, 0
$0087	$0009			RETFIE
$00EC	$	_Delay_22us:
;delays.c,15 :: 		void Delay_22us() {
;delays.c,16 :: 		Delay_us(22);
$00EC	$3007			MOVLW	7
$00ED	$1303			BCF	STATUS, RP1
$00EE	$1283			BCF	STATUS, RP0
$00EF	$00DA			MOVWF	STACK_10
$00F0	$0BDA			DECFSZ	STACK_10, F
$00F1	$28F0			GOTO	$-1
;delays.c,17 :: 		}
$00F2	$0008			RETURN
$00DE	$	_timer_1_setup:
;base_12f.h,72 :: 		void	timer_1_setup(unsigned char pr)
;base_12f.h,74 :: 		T1CON = 0x00;
$00DE	$1303			BCF	STATUS, RP1
$00DF	$1283			BCF	STATUS, RP0
$00E0	$0190			CLRF	T1CON, 1
;base_12f.h,75 :: 		T1CON = (pr << 4);
$00E1	$0829			MOVF	FARG_timer_1_setup+0, 0
$00E2	$0090			MOVWF	T1CON
$00E3	$0D90			RLF	T1CON, 1
$00E4	$1010			BCF	T1CON, 0
$00E5	$0D90			RLF	T1CON, 1
$00E6	$1010			BCF	T1CON, 0
$00E7	$0D90			RLF	T1CON, 1
$00E8	$1010			BCF	T1CON, 0
$00E9	$0D90			RLF	T1CON, 1
$00EA	$1010			BCF	T1CON, 0
;base_12f.h,76 :: 		}
$00EB	$0008			RETURN
$0088	$	_Adc_Read:
$0088	$30F0			MOVLW	240
$0089	$1303			BCF	STATUS, RP1
$008A	$1283			BCF	STATUS, RP0
$008B	$059F			ANDWF	ADCON0, 1
$008C	$30F0			MOVLW	240
$008D	$1683			BSF	STATUS, RP0
$008E	$049F			IORWF	ANSEL, 1
$008F	$1283			BCF	STATUS, RP0
$0090	$179F			BSF	ADCON0, 7
$0091	$0829			MOVF	FARG_Adc_Read+0, 0
$0092	$00D0			MOVWF	STACK_0
$0093	$0DD0			RLF	STACK_0, 1
$0094	$1050			BCF	STACK_0, 0
$0095	$0DD0			RLF	STACK_0, 1
$0096	$1050			BCF	STACK_0, 0
$0097	$0850			MOVF	STACK_0, 0
$0098	$049F			IORWF	ADCON0, 1
$0099	$141F			BSF	ADCON0, 0
$009A	$20EC			CALL	_Delay_22us
$009B	$149F			BSF	ADCON0, 1
$009C	$	L_Adc_Read_0:
$009C	$1C9F			BTFSS	ADCON0, 1
$009D	$28A0			GOTO	L_Adc_Read_1
$009E	$0000			NOP
$009F	$289C			GOTO	L_Adc_Read_0
$00A0	$	L_Adc_Read_1:
$00A0	$101F			BCF	ADCON0, 0
$00A1	$3008			MOVLW	8
$00A2	$00D2			MOVWF	STACK_2
$00A3	$081E			MOVF	ADRESH, 0
$00A4	$00D0			MOVWF	STACK_0
$00A5	$01D1			CLRF	STACK_0+1
$00A6	$0852			MOVF	STACK_2, 0
$00A7	$	L_Adc_Read_2:
$00A7	$1903			BTFSC	STATUS, Z
$00A8	$28AE			GOTO	L_Adc_Read_3
$00A9	$0DD0			RLF	STACK_0, 1
$00AA	$0DD1			RLF	STACK_0+1, 1
$00AB	$1050			BCF	STACK_0, 0
$00AC	$3FFF			ADDLW	255
$00AD	$28A7			GOTO	L_Adc_Read_2
$00AE	$	L_Adc_Read_3:
$00AE	$1683			BSF	STATUS, RP0
$00AF	$081E			MOVF	ADRESL, 0
$00B0	$04D0			IORWF	STACK_0, 1
$00B1	$3000			MOVLW	0
$00B2	$04D1			IORWF	STACK_0+1, 1
$00B3	$0008			RETURN
$00B4	$	_main:
;QuatroAVinte_12f675.c,14 :: 		void main()
;QuatroAVinte_12f675.c,17 :: 		TRISIO = 0b00000001;
$00B4	$3001			MOVLW	1
$00B5	$1303			BCF	STATUS, RP1
$00B6	$1683			BSF	STATUS, RP0
$00B7	$0085			MOVWF	TRISIO
;QuatroAVinte_12f675.c,18 :: 		PIE1.TMR1IE = 1;
$00B8	$140C			BSF	PIE1, 0
;QuatroAVinte_12f675.c,19 :: 		INTCON.PEIE = 1;
$00B9	$170B			BSF	INTCON, 6
;QuatroAVinte_12f675.c,21 :: 		ansel = 1;  //GPIO_0 entrada analógica
$00BA	$3001			MOVLW	1
$00BB	$009F			MOVWF	ANSEL
;QuatroAVinte_12f675.c,23 :: 		timer_1_setup(T1_DIV_4);
$00BC	$3002			MOVLW	2
$00BD	$00A9			MOVWF	FARG_timer_1_setup+0
$00BE	$20DE			CALL	_timer_1_setup
;QuatroAVinte_12f675.c,26 :: 		TMR1H = 0xFD;
$00BF	$30FD			MOVLW	253
$00C0	$008F			MOVWF	TMR1H
;QuatroAVinte_12f675.c,27 :: 		TMR1L = 0xE8;
$00C1	$30E8			MOVLW	232
$00C2	$008E			MOVWF	TMR1L
;QuatroAVinte_12f675.c,29 :: 		timer_1_on();
$00C3	$20F7			CALL	_timer_1_on
;QuatroAVinte_12f675.c,31 :: 		GPIO.f2 =1;
$00C4	$1505			BSF	GPIO, 2
;QuatroAVinte_12f675.c,33 :: 		INTCON.GIE = 1;
$00C5	$178B			BSF	INTCON, 7
;QuatroAVinte_12f675.c,39 :: 		while(1)
$00C6	$	L_main_0:
;QuatroAVinte_12f675.c,41 :: 		valor_adc = adc_read(0);
$00C6	$1303			BCF	STATUS, RP1
$00C7	$1283			BCF	STATUS, RP0
$00C8	$01A9			CLRF	FARG_Adc_Read+0, 1
$00C9	$2088			CALL	_Adc_Read
$00CA	$0850			MOVF	STACK_0, 0
$00CB	$00A0			MOVWF	_valor_adc
$00CC	$0851			MOVF	STACK_0+1, 0
$00CD	$00A1			MOVWF	_valor_adc+1
;QuatroAVinte_12f675.c,44 :: 		}
$00CE	$28C6			GOTO	L_main_0
;QuatroAVinte_12f675.c,46 :: 		}
$00CF	$28CF			GOTO	$


//** Procedures locations **
//ADDRESS		PROCEDURE
//----------------------------------------------
$0004		interrupt
$0088		Adc_Read
$00B4		main
$00D0		set_timer_1
$00DE		timer_1_setup
$00EC		Delay_22us
$00F3		timer_1_off
$00F7		timer_1_on


//** Labels locations **
//ADDRESS		LABEL
//----------------------------------------------
$0004		_interrupt:
$001F		L_interrupt_10:
$002B		L_interrupt_11:
$002D		L62_ex_L_interrupt_5:
$0047		L_interrupt_6:
$005E		L_interrupt_5:
$005E		L_interrupt_7:
$0067		L_interrupt_12:
$006A		L_interrupt_8:
$0074		L_interrupt_13:
$0077		L_interrupt_2:
$0077		L_interrupt_9:
$0079		L_Interrupt_end:
$0088		_Adc_Read:
$009C		L_Adc_Read_0:
$00A0		L_Adc_Read_1:
$00A7		L_Adc_Read_2:
$00AE		L_Adc_Read_3:
$00B4		_main:
$00C6		L_main_0:
$00D0		_set_timer_1:
$00DE		_timer_1_setup:
$00EC		_Delay_22us:
$00F3		_timer_1_off:
$00F7		_timer_1_on:


//** Variables locations **
//ADDRESS		VARIABLE
//----------------------------------------------
$0000		INDF
$0002		PCL
$0003		STATUS
$0004		FSR
$0005		GPIO
$000A		PCLATH
$000B		INTCON
$000C		PIR1
$000E		TMR1L
$000F		TMR1H
$0010		T1CON
$001E		ADRESH
$001F		ADCON0
$0020		_valor_adc
$0022		?saveFSR
$0023		?saveSTATUS
$0024		?savePCLATH
$0025		FARG_set_timer_1+0
$0029		FARG_Adc_Read+0
$0029		FARG_timer_1_setup+0
$0050		STACK_0
$0051		STACK_1
$0052		STACK_2
$0053		STACK_3
$0054		STACK_4
$0055		STACK_5
$0056		STACK_6
$0057		STACK_7
$0058		STACK_8
$0059		STACK_9
$005A		STACK_10
$005B		STACK_11
$005C		STACK_12
$005D		STACK_13
$005E		STACK_14
$005F		STACK_15
$0085		TRISIO
$008C		PIE1
$009E		ADRESL
$009F		ANSEL


