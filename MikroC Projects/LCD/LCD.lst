;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 05/11/2010 17:18:05
;----------------------------------------------

;Address Opcode 	ASM
0x0000	0x28D2      	GOTO       210
_LCD_escreve:
;LCD.c,67 :: 		void LCD_escreve(unsigned char valor)
;LCD.c,69 :: 		display=valor;             //ATUALIZA DISPLAY (PORTB)
0x0003	0x1283      	BCF        STATUS, 5
0x0004	0x1303      	BCF        STATUS, 6
0x0005	0x082D      	MOVF       FARG_LCD_escreve_valor, 0
0x0006	0x0086      	MOVWF      PORTB
;LCD.c,70 :: 		Delay_us(1);                //PERDE 1us PARA ESTABILIZAÇÃO
0x0007	0x0000      	NOP
;LCD.c,72 :: 		LCD_EN=1;                        //ENVIA UM PULSO DE ENABLE AO DISPLAY
0x0008	0x1588      	BSF        RD3_bit, 3
;LCD.c,73 :: 		Delay_us(2);
0x0009	0x0000      	NOP
0x000A	0x0000      	NOP
;LCD.c,74 :: 		LCD_EN=0;
0x000B	0x1188      	BCF        RD3_bit, 3
;LCD.c,76 :: 		Delay_ms(2);                //DELAY DE 1ms
0x000C	0x3003      	MOVLW      3
0x000D	0x00FC      	MOVWF      R12
0x000E	0x3097      	MOVLW      151
0x000F	0x00FD      	MOVWF      R13
L_LCD_escreve5:
0x0010	0x0BFD      	DECFSZ     R13, 1
0x0011	0x2810      	GOTO       L_LCD_escreve5
0x0012	0x0BFC      	DECFSZ     R12, 1
0x0013	0x2810      	GOTO       L_LCD_escreve5
0x0014	0x0000      	NOP
0x0015	0x0000      	NOP
;LCD.c,78 :: 		}
0x0016	0x0008      	RETURN
; end of _LCD_escreve
_____DoICP:
;__Lib_System.c,6 :: 		
;__Lib_System.c,9 :: 		
0x0017	0x1283      	BCF        STATUS, 5
0x0018	0x1303      	BCF        STATUS, 6
0x0019	0x0821      	MOVF       ___DoICPAddr+1, 0
0x001A	0x008A      	MOVWF      PCLATH
;__Lib_System.c,10 :: 		
0x001B	0x0820      	MOVF       ___DoICPAddr, 0
0x001C	0x0082      	MOVWF      PCL
;__Lib_System.c,12 :: 		
0x001D	0x0008      	RETURN
; end of _____DoICP
_Div_8x8_U:
;__Lib_Math.c,189 :: 		
;__Lib_Math.c,196 :: 		
0x001E	0x1283      	BCF        STATUS, 5
;__Lib_Math.c,197 :: 		
0x001F	0x1303      	BCF        STATUS, 6
;__Lib_Math.c,198 :: 		
0x0020	0x01F8      	CLRF       R8
;__Lib_Math.c,199 :: 		
0x0021	0x3008      	MOVLW      8
;__Lib_Math.c,200 :: 		
0x0022	0x00FC      	MOVWF      R12
;__Lib_Math.c,201 :: 		
0x0023	0x0D70      	RLF        R0, 0
;__Lib_Math.c,202 :: 		
0x0024	0x0DF8      	RLF        R8, 1
;__Lib_Math.c,203 :: 		
0x0025	0x0874      	MOVF       R4, 0
;__Lib_Math.c,204 :: 		
0x0026	0x02F8      	SUBWF      R8, 1
;__Lib_Math.c,205 :: 		
0x0027	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.c,206 :: 		
0x0028	0x282B      	GOTO       $+3
;__Lib_Math.c,207 :: 		
0x0029	0x07F8      	ADDWF      R8, 1
;__Lib_Math.c,208 :: 		
0x002A	0x1003      	BCF        STATUS, 0
;__Lib_Math.c,209 :: 		
0x002B	0x0DF0      	RLF        R0, 1
;__Lib_Math.c,210 :: 		
0x002C	0x0BFC      	DECFSZ     R12, 1
;__Lib_Math.c,211 :: 		
0x002D	0x2823      	GOTO       $-10
;__Lib_Math.c,213 :: 		
0x002E	0x0008      	RETURN
; end of _Div_8x8_U
_LCD_limpar:
;LCD.c,102 :: 		void LCD_limpar(void)
;LCD.c,104 :: 		LCD_RS=0;                  //SELECIONA O DISPLAY P/ COMANDOS
0x002F	0x1283      	BCF        STATUS, 5
0x0030	0x1303      	BCF        STATUS, 6
0x0031	0x1108      	BCF        RD2_bit, 2
;LCD.c,105 :: 		LCD_escreve(0x01);         //COMANDO P/ LIMPAR A TELA
0x0032	0x3001      	MOVLW      1
0x0033	0x00AD      	MOVWF      FARG_LCD_escreve_valor
0x0034	0x2003      	CALL       _LCD_escreve
;LCD.c,106 :: 		LCD_RS=1;                  //SELECIONA O DISPLAY P/ DADOS
0x0035	0x1508      	BSF        RD2_bit, 2
;LCD.c,107 :: 		}
0x0036	0x0008      	RETURN
; end of _LCD_limpar
_LCD_mensagem:
;LCD.c,80 :: 		void LCD_mensagem(unsigned char linha,unsigned char coluna,unsigned char mensagem[])
;LCD.c,86 :: 		if(linha<=2)
0x0037	0x1283      	BCF        STATUS, 5
0x0038	0x1303      	BCF        STATUS, 6
0x0039	0x0827      	MOVF       FARG_LCD_mensagem_linha, 0
0x003A	0x3C02      	SUBLW      2
0x003B	0x1C03      	BTFSS      STATUS, 0
0x003C	0x2867      	GOTO       L_LCD_mensagem6
;LCD.c,88 :: 		LCD_RS=0;                        //SELECIONA O DISPLAY P/ COMANDOS
0x003D	0x1108      	BCF        RD2_bit, 2
;LCD.c,89 :: 		LCD_limpar();                //COMANDO P/ LIMPAR O LCD
0x003E	0x202F      	CALL       _LCD_limpar
;LCD.c,91 :: 		if(linha==1) posicao=0x80+coluna-1;
0x003F	0x0827      	MOVF       FARG_LCD_mensagem_linha, 0
0x0040	0x3A01      	XORLW      1
0x0041	0x1D03      	BTFSS      STATUS, 2
0x0042	0x2848      	GOTO       L_LCD_mensagem7
0x0043	0x0828      	MOVF       FARG_LCD_mensagem_coluna, 0
0x0044	0x3E80      	ADDLW      128
0x0045	0x00AA      	MOVWF      LCD_mensagem_posicao_L0
0x0046	0x03AA      	DECF       LCD_mensagem_posicao_L0, 1
0x0047	0x2850      	GOTO       L_LCD_mensagem8
L_LCD_mensagem7:
;LCD.c,92 :: 		else if(linha==2)posicao=0xC0+coluna-1;
0x0048	0x0827      	MOVF       FARG_LCD_mensagem_linha, 0
0x0049	0x3A02      	XORLW      2
0x004A	0x1D03      	BTFSS      STATUS, 2
0x004B	0x2850      	GOTO       L_LCD_mensagem9
0x004C	0x0828      	MOVF       FARG_LCD_mensagem_coluna, 0
0x004D	0x3EC0      	ADDLW      192
0x004E	0x00AA      	MOVWF      LCD_mensagem_posicao_L0
0x004F	0x03AA      	DECF       LCD_mensagem_posicao_L0, 1
L_LCD_mensagem9:
L_LCD_mensagem8:
;LCD.c,94 :: 		LCD_escreve(posicao);      //;COMANDO PARA POSICIONAR O CURSOR
0x0050	0x082A      	MOVF       LCD_mensagem_posicao_L0, 0
0x0051	0x00AD      	MOVWF      FARG_LCD_escreve_valor
0x0052	0x2003      	CALL       _LCD_escreve
;LCD.c,95 :: 		LCD_RS=1;                        //SELECIONA O DISPLAY P/ DADOS
0x0053	0x1508      	BSF        RD2_bit, 2
;LCD.c,97 :: 		for(cont=0;mensagem[cont]!=0;cont++)
0x0054	0x01AB      	CLRF       LCD_mensagem_cont_L0
0x0055	0x01AC      	CLRF       LCD_mensagem_cont_L0+1
L_LCD_mensagem10:
0x0056	0x082B      	MOVF       LCD_mensagem_cont_L0, 0
0x0057	0x0729      	ADDWF      FARG_LCD_mensagem_mensagem, 0
0x0058	0x0084      	MOVWF      FSR
0x0059	0x0800      	MOVF       INDF, 0
0x005A	0x3A00      	XORLW      0
0x005B	0x1903      	BTFSC      STATUS, 2
0x005C	0x2867      	GOTO       L_LCD_mensagem11
;LCD.c,98 :: 		LCD_escreve(mensagem[cont]);
0x005D	0x082B      	MOVF       LCD_mensagem_cont_L0, 0
0x005E	0x0729      	ADDWF      FARG_LCD_mensagem_mensagem, 0
0x005F	0x0084      	MOVWF      FSR
0x0060	0x0800      	MOVF       INDF, 0
0x0061	0x00AD      	MOVWF      FARG_LCD_escreve_valor
0x0062	0x2003      	CALL       _LCD_escreve
;LCD.c,97 :: 		for(cont=0;mensagem[cont]!=0;cont++)
0x0063	0x0AAB      	INCF       LCD_mensagem_cont_L0, 1
0x0064	0x1903      	BTFSC      STATUS, 2
0x0065	0x0AAC      	INCF       LCD_mensagem_cont_L0+1, 1
;LCD.c,98 :: 		LCD_escreve(mensagem[cont]);
0x0066	0x2856      	GOTO       L_LCD_mensagem10
L_LCD_mensagem11:
;LCD.c,99 :: 		}
L_LCD_mensagem6:
;LCD.c,100 :: 		}
0x0067	0x0008      	RETURN
; end of _LCD_mensagem
_ByteToStr:
;__Lib_Conversions.c,3 :: 		
;__Lib_Conversions.c,6 :: 		
0x0068	0x1283      	BCF        STATUS, 5
0x0069	0x1303      	BCF        STATUS, 6
0x006A	0x01A9      	CLRF       ByteToStr_DigitPos_L0
L_ByteToStr0:
0x006B	0x3003      	MOVLW      3
0x006C	0x0229      	SUBWF      ByteToStr_DigitPos_L0, 0
0x006D	0x1803      	BTFSC      STATUS, 0
0x006E	0x2876      	GOTO       L_ByteToStr1
;__Lib_Conversions.c,7 :: 		
0x006F	0x0829      	MOVF       ByteToStr_DigitPos_L0, 0
0x0070	0x0728      	ADDWF      FARG_ByteToStr_output, 0
0x0071	0x0084      	MOVWF      FSR
0x0072	0x3020      	MOVLW      32
0x0073	0x0080      	MOVWF      INDF
;__Lib_Conversions.c,6 :: 		
0x0074	0x0AA9      	INCF       ByteToStr_DigitPos_L0, 1
;__Lib_Conversions.c,7 :: 		
0x0075	0x286B      	GOTO       L_ByteToStr0
L_ByteToStr1:
;__Lib_Conversions.c,9 :: 		
0x0076	0x0829      	MOVF       ByteToStr_DigitPos_L0, 0
0x0077	0x0728      	ADDWF      FARG_ByteToStr_output, 0
0x0078	0x0084      	MOVWF      FSR
0x0079	0x0180      	CLRF       INDF
0x007A	0x03A9      	DECF       ByteToStr_DigitPos_L0, 1
;__Lib_Conversions.c,11 :: 		
L_ByteToStr3:
;__Lib_Conversions.c,12 :: 		
0x007B	0x0829      	MOVF       ByteToStr_DigitPos_L0, 0
0x007C	0x0728      	ADDWF      FARG_ByteToStr_output, 0
0x007D	0x00AA      	MOVWF      FLOC__ByteToStr
0x007E	0x300A      	MOVLW      10
0x007F	0x00F4      	MOVWF      R4
0x0080	0x0827      	MOVF       FARG_ByteToStr_input, 0
0x0081	0x00F0      	MOVWF      R0
0x0082	0x201E      	CALL       _Div_8x8_U
0x0083	0x0878      	MOVF       R8, 0
0x0084	0x00F0      	MOVWF      R0
0x0085	0x3030      	MOVLW      48
0x0086	0x07F0      	ADDWF      R0, 1
0x0087	0x082A      	MOVF       FLOC__ByteToStr, 0
0x0088	0x0084      	MOVWF      FSR
0x0089	0x0870      	MOVF       R0, 0
0x008A	0x0080      	MOVWF      INDF
;__Lib_Conversions.c,13 :: 		
0x008B	0x300A      	MOVLW      10
0x008C	0x00F4      	MOVWF      R4
0x008D	0x0827      	MOVF       FARG_ByteToStr_input, 0
0x008E	0x00F0      	MOVWF      R0
0x008F	0x201E      	CALL       _Div_8x8_U
0x0090	0x0870      	MOVF       R0, 0
0x0091	0x00A7      	MOVWF      FARG_ByteToStr_input
;__Lib_Conversions.c,14 :: 		
0x0092	0x0870      	MOVF       R0, 0
0x0093	0x3A00      	XORLW      0
0x0094	0x1D03      	BTFSS      STATUS, 2
0x0095	0x2897      	GOTO       L_ByteToStr5
;__Lib_Conversions.c,15 :: 		
0x0096	0x2899      	GOTO       L_ByteToStr4
L_ByteToStr5:
;__Lib_Conversions.c,16 :: 		
0x0097	0x03A9      	DECF       ByteToStr_DigitPos_L0, 1
;__Lib_Conversions.c,17 :: 		
0x0098	0x287B      	GOTO       L_ByteToStr3
L_ByteToStr4:
;__Lib_Conversions.c,18 :: 		
0x0099	0x0008      	RETURN
; end of _ByteToStr
_LCD_inicializa:
;LCD.c,55 :: 		void LCD_inicializa(void)
;LCD.c,57 :: 		LCD_RS=0;                   //SELECIONA O DISPLAY P/ COMANDOS
0x009A	0x1283      	BCF        STATUS, 5
0x009B	0x1303      	BCF        STATUS, 6
0x009C	0x1108      	BCF        RD2_bit, 2
;LCD.c,59 :: 		LCD_escreve(0b00111000);   //B'00111000'        FUNCTION SET (0 0 1 DL N F * *)
0x009D	0x3038      	MOVLW      56
0x009E	0x00AD      	MOVWF      FARG_LCD_escreve_valor
0x009F	0x2003      	CALL       _LCD_escreve
;LCD.c,63 :: 		Delay_ms(1000);
0x00A0	0x3006      	MOVLW      6
0x00A1	0x00FB      	MOVWF      R11
0x00A2	0x3013      	MOVLW      19
0x00A3	0x00FC      	MOVWF      R12
0x00A4	0x30AD      	MOVLW      173
0x00A5	0x00FD      	MOVWF      R13
L_LCD_inicializa4:
0x00A6	0x0BFD      	DECFSZ     R13, 1
0x00A7	0x28A6      	GOTO       L_LCD_inicializa4
0x00A8	0x0BFC      	DECFSZ     R12, 1
0x00A9	0x28A6      	GOTO       L_LCD_inicializa4
0x00AA	0x0BFB      	DECFSZ     R11, 1
0x00AB	0x28A6      	GOTO       L_LCD_inicializa4
0x00AC	0x0000      	NOP
0x00AD	0x0000      	NOP
;LCD.c,64 :: 		LCD_RS=1;                  //SELECIONA O DISPLAY P/ DADOS
0x00AE	0x1508      	BSF        RD2_bit, 2
;LCD.c,65 :: 		}
0x00AF	0x0008      	RETURN
; end of _LCD_inicializa
___CC2DW:
;__Lib_System.c,24 :: 		
;__Lib_System.c,27 :: 		
_CC2D_Loop1:
;__Lib_System.c,29 :: 		
0x00B0	0x2017      	CALL       _____DoICP
0x00B1	0x118A      	BCF        PCLATH, 3
0x00B2	0x120A      	BCF        PCLATH, 4
;__Lib_System.c,31 :: 		
0x00B3	0x0080      	MOVWF      INDF
;__Lib_System.c,32 :: 		
0x00B4	0x0A84      	INCF       FSR, 1
;__Lib_System.c,33 :: 		
0x00B5	0x0AA0      	INCF       ___DoICPAddr, 1
;__Lib_System.c,35 :: 		
0x00B6	0x1903      	BTFSC      STATUS, 2
;__Lib_System.c,36 :: 		
0x00B7	0x0AA1      	INCF       ___DoICPAddr+1, 1
;__Lib_System.c,37 :: 		
0x00B8	0x03F0      	DECF       R0, 1
;__Lib_System.c,39 :: 		
0x00B9	0x1D03      	BTFSS      STATUS, 2
;__Lib_System.c,40 :: 		
0x00BA	0x28B0      	GOTO       _CC2D_Loop1
;__Lib_System.c,42 :: 		
0x00BB	0x0008      	RETURN
; end of ___CC2DW
_LCD_ligar:
;LCD.c,109 :: 		void LCD_ligar(void)
;LCD.c,111 :: 		LCD_RS=0;                   //SELECIONA O DISPLAY P/ COMANDOS
0x00BC	0x1283      	BCF        STATUS, 5
0x00BD	0x1303      	BCF        STATUS, 6
0x00BE	0x1108      	BCF        RD2_bit, 2
;LCD.c,113 :: 		LCD_escreve(0b00001100);   //B'00001100'          DISPLAY ON/OFF CONTROL ( 0 0 0 0 1 D C B)
0x00BF	0x300C      	MOVLW      12
0x00C0	0x00AD      	MOVWF      FARG_LCD_escreve_valor
0x00C1	0x2003      	CALL       _LCD_escreve
;LCD.c,118 :: 		Delay_ms(1000);
0x00C2	0x3006      	MOVLW      6
0x00C3	0x00FB      	MOVWF      R11
0x00C4	0x3013      	MOVLW      19
0x00C5	0x00FC      	MOVWF      R12
0x00C6	0x30AD      	MOVLW      173
0x00C7	0x00FD      	MOVWF      R13
L_LCD_ligar13:
0x00C8	0x0BFD      	DECFSZ     R13, 1
0x00C9	0x28C8      	GOTO       L_LCD_ligar13
0x00CA	0x0BFC      	DECFSZ     R12, 1
0x00CB	0x28C8      	GOTO       L_LCD_ligar13
0x00CC	0x0BFB      	DECFSZ     R11, 1
0x00CD	0x28C8      	GOTO       L_LCD_ligar13
0x00CE	0x0000      	NOP
0x00CF	0x0000      	NOP
;LCD.c,119 :: 		LCD_RS=1;                        //SELECIONA O DISPLAY P/ DADOS
0x00D0	0x1508      	BSF        RD2_bit, 2
;LCD.c,120 :: 		}
0x00D1	0x0008      	RETURN
; end of _LCD_ligar
_main:
;LCD.c,31 :: 		void main()
;LCD.c,36 :: 		TRISB = 0x00;          // set direction to be output
0x00D2	0x1683      	BSF        STATUS, 5
0x00D3	0x1303      	BCF        STATUS, 6
0x00D4	0x0186      	CLRF       TRISB
;LCD.c,37 :: 		TRISC = 0x00;          // set direction to be output
0x00D5	0x0187      	CLRF       TRISC
;LCD.c,38 :: 		TRISD = 0x00;          // set direction to be output
0x00D6	0x0188      	CLRF       TRISD
;LCD.c,41 :: 		LCD_inicializa();
0x00D7	0x209A      	CALL       _LCD_inicializa
;LCD.c,42 :: 		LCD_ligar();
0x00D8	0x20BC      	CALL       _LCD_ligar
;LCD.c,43 :: 		temp = 0;
0x00D9	0x01A6      	CLRF       main_temp_L0
;LCD.c,44 :: 		do
L_main0:
;LCD.c,46 :: 		PORTB=temp;
0x00DA	0x0826      	MOVF       main_temp_L0, 0
0x00DB	0x0086      	MOVWF      PORTB
;LCD.c,47 :: 		ByteToStr(PORTB,contador);
0x00DC	0x0806      	MOVF       PORTB, 0
0x00DD	0x00A7      	MOVWF      FARG_ByteToStr_input
0x00DE	0x3022      	MOVLW      main_contador_L0
0x00DF	0x00A8      	MOVWF      FARG_ByteToStr_output
0x00E0	0x2068      	CALL       _ByteToStr
;LCD.c,48 :: 		LCD_mensagem(1,1,contador);
0x00E1	0x3001      	MOVLW      1
0x00E2	0x00A7      	MOVWF      FARG_LCD_mensagem_linha
0x00E3	0x3001      	MOVLW      1
0x00E4	0x00A8      	MOVWF      FARG_LCD_mensagem_coluna
0x00E5	0x3022      	MOVLW      main_contador_L0
0x00E6	0x00A9      	MOVWF      FARG_LCD_mensagem_mensagem
0x00E7	0x2037      	CALL       _LCD_mensagem
;LCD.c,49 :: 		Delay_ms(500);      // 0.5 second delay
0x00E8	0x3003      	MOVLW      3
0x00E9	0x00FB      	MOVWF      R11
0x00EA	0x308A      	MOVLW      138
0x00EB	0x00FC      	MOVWF      R12
0x00EC	0x3055      	MOVLW      85
0x00ED	0x00FD      	MOVWF      R13
L_main3:
0x00EE	0x0BFD      	DECFSZ     R13, 1
0x00EF	0x28EE      	GOTO       L_main3
0x00F0	0x0BFC      	DECFSZ     R12, 1
0x00F1	0x28EE      	GOTO       L_main3
0x00F2	0x0BFB      	DECFSZ     R11, 1
0x00F3	0x28EE      	GOTO       L_main3
0x00F4	0x0000      	NOP
0x00F5	0x0000      	NOP
;LCD.c,50 :: 		temp++;
0x00F6	0x0AA6      	INCF       main_temp_L0, 1
;LCD.c,52 :: 		while(1);            // Endless loop
0x00F7	0x28DA      	GOTO       L_main0
;LCD.c,53 :: 		}
0x00F8	0x28F8      	GOTO       $+0
; end of _main
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x0003      [20]    _LCD_escreve
0x0017       [7]    _____DoICP
0x001E      [17]    _Div_8x8_U
0x002F       [8]    _LCD_limpar
0x0037      [49]    _LCD_mensagem
0x0068      [50]    _ByteToStr
0x009A      [22]    _LCD_inicializa
0x00B0      [12]    ___CC2DW
0x00BC      [22]    _LCD_ligar
0x00D2      [39]    _main
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x0000       [1]    INDF
0x0001       [1]    TMR0
0x0002       [1]    PCL
0x0003       [0]    IRP_bit
0x0003       [0]    NOT_TO_bit
0x0003       [1]    STATUS
0x0003       [0]    Z_bit
0x0003       [0]    NOT_PD_bit
0x0003       [0]    RP1_bit
0x0003       [0]    RP0_bit
0x0003       [0]    C_bit
0x0003       [0]    DC_bit
0x0004       [1]    FSRPTR
0x0004       [1]    FSR
0x0005       [0]    RA0_bit
0x0005       [0]    RA4_bit
0x0005       [0]    RA5_bit
0x0005       [1]    PORTA
0x0005       [0]    RA3_bit
0x0005       [0]    RA2_bit
0x0005       [0]    RA1_bit
0x0006       [1]    PORTB
0x0006       [0]    RB3_bit
0x0006       [0]    RB4_bit
0x0006       [0]    RB6_bit
0x0006       [0]    RB7_bit
0x0006       [0]    RB5_bit
0x0006       [0]    RB2_bit
0x0006       [0]    RB0_bit
0x0006       [0]    RB1_bit
0x0007       [0]    RC1_bit
0x0007       [0]    RC2_bit
0x0007       [1]    PORTC
0x0007       [0]    RC0_bit
0x0007       [0]    RC3_bit
0x0007       [0]    RC6_bit
0x0007       [0]    RC7_bit
0x0007       [0]    RC4_bit
0x0007       [0]    RC5_bit
0x0008       [0]    RD2_bit
0x0008       [0]    RD3_bit
0x0008       [0]    RD1_bit
0x0008       [1]    PORTD
0x0008       [0]    RD0_bit
0x0008       [0]    RD5_bit
0x0008       [0]    RD6_bit
0x0008       [0]    RD7_bit
0x0008       [0]    RD4_bit
0x0008       [0]    LCD_EN
0x0008       [0]    LCD_RS
0x0009       [0]    RE0_bit
0x0009       [0]    RE2_bit
0x0009       [0]    RE1_bit
0x0009       [1]    PORTE
0x000A       [1]    PCLATH
0x000B       [0]    RBIE_bit
0x000B       [0]    RBIF_bit
0x000B       [1]    INTCON
0x000B       [0]    TMR0IF_bit
0x000B       [0]    INTE_bit
0x000B       [0]    TMR0IE_bit
0x000B       [0]    GIE_bit
0x000B       [0]    PEIE_bit
0x000B       [0]    INTF_bit
0x000B       [0]    T0IE_bit
0x000B       [0]    T0IF_bit
0x000C       [0]    TMR2IF_bit
0x000C       [0]    RCIF_bit
0x000C       [0]    ADIF_bit
0x000C       [0]    TXIF_bit
0x000C       [0]    CCP1IF_bit
0x000C       [0]    SSPIF_bit
0x000C       [0]    PSPIF_bit
0x000C       [1]    PIR1
0x000C       [0]    TMR1IF_bit
0x000D       [0]    BCLIF_bit
0x000D       [0]    CMIF_bit
0x000D       [0]    CCP2IF_bit
0x000D       [0]    EEIF_bit
0x000D       [1]    PIR2
0x000E       [1]    TMR1L
0x000F       [1]    TMR1H
0x0010       [0]    NOT_T1SYNC_bit
0x0010       [1]    T1CON
0x0010       [0]    T1OSCEN_bit
0x0010       [0]    T1CKPS1_bit
0x0010       [0]    T1CKPS0_bit
0x0010       [0]    TMR1CS_bit
0x0010       [0]    TMR1ON_bit
0x0010       [0]    T1INSYNC_bit
0x0010       [0]    T1SYNC_bit
0x0011       [1]    TMR2
0x0012       [0]    TOUTPS2_bit
0x0012       [0]    TOUTPS1_bit
0x0012       [1]    T2CON
0x0012       [0]    TOUTPS3_bit
0x0012       [0]    T2CKPS1_bit
0x0012       [0]    T2CKPS0_bit
0x0012       [0]    TOUTPS0_bit
0x0012       [0]    TMR2ON_bit
0x0013       [1]    SSPBUF
0x0014       [0]    SSPM3_bit
0x0014       [0]    CKP_bit
0x0014       [0]    SSPM1_bit
0x0014       [0]    SSPM2_bit
0x0014       [0]    WCOL_bit
0x0014       [1]    SSPCON
0x0014       [0]    SSPEN_bit
0x0014       [0]    SSPOV_bit
0x0014       [0]    SSPM0_bit
0x0015       [1]    CCPR1L
0x0015       [2]    CCPR1
0x0016       [1]    CCPR1H
0x0017       [0]    CCP1M3_bit
0x0017       [0]    CCP1Y_bit
0x0017       [1]    CCP1CON
0x0017       [0]    CCP1M1_bit
0x0017       [0]    CCP1X_bit
0x0017       [0]    CCP1M0_bit
0x0017       [0]    CCP1M2_bit
0x0018       [0]    RX9_bit
0x0018       [0]    SPEN_bit
0x0018       [0]    CREN_bit
0x0018       [0]    SREN_bit
0x0018       [0]    NOT_RC8_bit
0x0018       [0]    RC9_bit
0x0018       [1]    RCSTA
0x0018       [0]    RC8_9_bit
0x0018       [0]    OERR_bit
0x0018       [0]    RX9D_bit
0x0018       [0]    RCD8_bit
0x0018       [0]    ADDEN_bit
0x0018       [0]    FERR_bit
0x0019       [1]    TXREG
0x001A       [1]    RCREG
0x001B       [1]    CCPR2L
0x001B       [2]    CCPR2
0x001C       [1]    CCPR2H
0x001D       [0]    CCP2M1_bit
0x001D       [1]    CCP2CON
0x001D       [0]    CCP2M0_bit
0x001D       [0]    CCP2Y_bit
0x001D       [0]    CCP2X_bit
0x001D       [0]    CCP2M2_bit
0x001D       [0]    CCP2M3_bit
0x001E       [1]    ADRESH
0x001F       [0]    NOT_DONE_bit
0x001F       [0]    CHS0_bit
0x001F       [0]    GO_bit
0x001F       [1]    ADCON0
0x001F       [0]    CHS1_bit
0x001F       [0]    ADCS0_bit
0x001F       [0]    ADON_bit
0x001F       [0]    ADCS1_bit
0x001F       [0]    GO_DONE_bit
0x001F       [0]    CHS2_bit
0x0020       [2]    ___DoICPAddr
0x0022       [4]    main_contador_L0
0x0026       [1]    main_temp_L0
0x0027       [1]    FARG_LCD_mensagem_linha
0x0027       [1]    FARG_ByteToStr_input
0x0028       [1]    FARG_LCD_mensagem_coluna
0x0028       [1]    FARG_ByteToStr_output
0x0029       [1]    FARG_LCD_mensagem_mensagem
0x0029       [1]    ByteToStr_DigitPos_L0
0x002A       [1]    FLOC__ByteToStr
0x002A       [1]    LCD_mensagem_posicao_L0
0x002B       [2]    LCD_mensagem_cont_L0
0x002D       [1]    FARG_LCD_escreve_valor
0x0070       [1]    R0
0x0071       [1]    R1
0x0072       [1]    R2
0x0073       [1]    R3
0x0074       [1]    R4
0x0075       [1]    R5
0x0076       [1]    R6
0x0077       [1]    R7
0x0078       [1]    R8
0x0079       [1]    R9
0x007A       [1]    R10
0x007B       [1]    R11
0x007C       [1]    R12
0x007D       [1]    R13
0x007E       [1]    R14
0x007F       [1]    R15
0x0081       [0]    T0CS_bit
0x0081       [0]    T0SE_bit
0x0081       [0]    NOT_RBPU_bit
0x0081       [0]    INTEDG_bit
0x0081       [0]    PSA_bit
0x0081       [0]    PS0_bit
0x0081       [1]    OPTION_REG
0x0081       [0]    PS2_bit
0x0081       [0]    PS1_bit
0x0085       [0]    TRISA4_bit
0x0085       [0]    TRISA5_bit
0x0085       [1]    TRISA
0x0085       [0]    TRISA3_bit
0x0085       [0]    TRISA0_bit
0x0085       [0]    TRISA1_bit
0x0085       [0]    TRISA2_bit
0x0086       [0]    TRISB3_bit
0x0086       [0]    TRISB4_bit
0x0086       [0]    TRISB2_bit
0x0086       [0]    TRISB0_bit
0x0086       [0]    TRISB1_bit
0x0086       [0]    TRISB7_bit
0x0086       [1]    TRISB
0x0086       [0]    TRISB5_bit
0x0086       [0]    TRISB6_bit
0x0087       [0]    TRISC6_bit
0x0087       [0]    TRISC5_bit
0x0087       [1]    TRISC
0x0087       [0]    TRISC7_bit
0x0087       [0]    TRISC1_bit
0x0087       [0]    TRISC0_bit
0x0087       [0]    TRISC2_bit
0x0087       [0]    TRISC4_bit
0x0087       [0]    TRISC3_bit
0x0088       [0]    TRISD1_bit
0x0088       [0]    TRISD2_bit
0x0088       [1]    TRISD
0x0088       [0]    TRISD0_bit
0x0088       [0]    TRISD3_bit
0x0088       [0]    TRISD6_bit
0x0088       [0]    TRISD7_bit
0x0088       [0]    TRISD5_bit
0x0088       [0]    TRISD4_bit
0x0089       [1]    TRISE
0x0089       [0]    PSPMODE_TRISE_bit
0x0089       [0]    IBOV_TRISE_bit
0x0089       [0]    TRISE2_bit
0x0089       [0]    TRISE0_bit
0x0089       [0]    TRISE1_bit
0x0089       [0]    IBF_TRISE_bit
0x0089       [0]    OBF_bit
0x0089       [0]    IBF_bit
0x0089       [0]    IBOV_bit
0x0089       [0]    OBF_TRISE_bit
0x0089       [0]    PSPMODE_bit
0x008C       [1]    PIE1
0x008C       [0]    RCIE_bit
0x008C       [0]    TXIE_bit
0x008C       [0]    PSPIE_bit
0x008C       [0]    ADIE_bit
0x008C       [0]    SSPIE_bit
0x008C       [0]    TMR1IE_bit
0x008C       [0]    TMR2IE_bit
0x008C       [0]    CCP1IE_bit
0x008D       [1]    PIE2
0x008D       [0]    BCLIE_bit
0x008D       [0]    EEIE_bit
0x008D       [0]    CMIE_bit
0x008D       [0]    CCP2IE_bit
0x008E       [0]    NOT_BOR_bit
0x008E       [1]    PCON
0x008E       [0]    NOT_POR_bit
0x008E       [0]    NOT_BO_bit
0x0091       [0]    ACKEN_bit
0x0091       [0]    RCEN_bit
0x0091       [0]    ACKDT_bit
0x0091       [0]    GCEN_bit
0x0091       [0]    ACKSTAT_bit
0x0091       [0]    SEN_bit
0x0091       [1]    SSPCON2
0x0091       [0]    PEN_bit
0x0091       [0]    RSEN_bit
0x0092       [1]    PR2
0x0093       [1]    SSPADD
0x0094       [0]    NOT_WRITE_bit
0x0094       [0]    R_W_bit
0x0094       [0]    I2C_READ_bit
0x0094       [0]    NOT_W_bit
0x0094       [0]    BF_bit
0x0094       [1]    SSPSTAT
0x0094       [0]    READ_WRITE_bit
0x0094       [0]    UA_bit
0x0094       [0]    R_bit
0x0094       [0]    I2C_DATA_bit
0x0094       [0]    NOT_A_bit
0x0094       [0]    NOT_ADDRESS_bit
0x0094       [0]    SMP_bit
0x0094       [0]    CKE_bit
0x0094       [0]    D_bit
0x0094       [0]    I2C_STOP__bit
0x0094       [0]    S_bit
0x0094       [0]    I2C_START__bit
0x0094       [0]    D_A_bit
0x0094       [0]    DATA_ADDRESS_bit
0x0094       [0]    P_bit
0x0098       [0]    TX9D_bit
0x0098       [0]    TXD8_bit
0x0098       [1]    TXSTA
0x0098       [0]    TX8_9_bit
0x0098       [0]    NOT_TX8_bit
0x0098       [0]    SYNC_bit
0x0098       [0]    TXEN_bit
0x0098       [0]    TX9_bit
0x0098       [0]    BRGH_bit
0x0098       [0]    TRMT_bit
0x0098       [0]    CSRC_bit
0x0099       [1]    SPBRG
0x009C       [1]    CMCON
0x009C       [0]    C2INV_bit
0x009C       [0]    C1INV_bit
0x009C       [0]    C2OUT_bit
0x009C       [0]    C1OUT_bit
0x009C       [0]    CIS_bit
0x009C       [0]    CM0_bit
0x009C       [0]    CM1_bit
0x009C       [0]    CM2_bit
0x009D       [1]    CVRCON
0x009D       [0]    CVRR_bit
0x009D       [0]    CVR3_bit
0x009D       [0]    CVREN_bit
0x009D       [0]    CVROE_bit
0x009D       [0]    CVR0_bit
0x009D       [0]    CVR1_bit
0x009D       [0]    CVR2_bit
0x009E       [1]    ADRESL
0x009F       [1]    ADCON1
0x009F       [0]    PCFG2_bit
0x009F       [0]    PCFG1_bit
0x009F       [0]    PCFG3_bit
0x009F       [0]    ADFM_bit
0x009F       [0]    ADCS2_bit
0x009F       [0]    PCFG0_bit
0x010C       [1]    EEDATA
0x010D       [1]    EEADR
0x010E       [1]    EEDATH
0x010F       [1]    EEADRH
0x018C       [0]    WREN_bit
0x018C       [0]    WRERR_bit
0x018C       [0]    EEPGD_bit
0x018C       [0]    WR_bit
0x018C       [0]    RD_bit
0x018C       [1]    EECON1
0x018D       [1]    EECON2
//** Label List: ** 
//----------------------------------------------
  L_main0
  L_main1
  L_main2
  L_main3
  L_LCD_inicializa4
  L_LCD_escreve5
  L_LCD_mensagem6
  L_LCD_mensagem7
  L_LCD_mensagem8
  L_LCD_mensagem9
  L_LCD_mensagem10
  L_LCD_mensagem11
  L_LCD_mensagem12
  L_LCD_ligar13
  _main
  _LCD_inicializa
  _LCD_escreve
  _LCD_mensagem
  _LCD_limpar
  _LCD_ligar
  L_ByteToStr0
  L_ByteToStr1
  L_ByteToStr2
  L_ByteToStr3
  L_ByteToStr4
  L_ByteToStr5
  L_WordToStr6
  L_WordToStr7
  L_WordToStr8
  L_WordToStr9
  L_WordToStr10
  L_WordToStr11
  L_ShortToStr12
  L_ShortToStr13
  L_ShortToStr14
  L_ShortToStr15
  L_ShortToStr16
  L_ShortToStr17
  L_IntToStr18
  L_IntToStr19
  L_IntToStr20
  L_IntToStr21
  L_IntToStr22
  L_IntToStr23
  L_LongWordToStr24
  L_LongWordToStr25
  L_LongWordToStr26
  L_LongWordToStr27
  L_LongWordToStr28
  L_LongWordToStr29
  L_LongToStr30
  L_LongToStr31
  L_LongToStr32
  L_LongToStr33
  L_LongToStr34
  L_LongToStr35
  L_Dec2Bcd36
  L_Dec2Bcd37
  L_Rtrim38
  L_Rtrim39
  L_Ltrim40
  L_Ltrim41
  L_Ltrim42
  L_Ltrim43
  L_Ltrim44
  L_Ltrim45
  L_FloatToStr46
  L_FloatToStr47
  L_FloatToStr48
  L_FloatToStr49
  L_FloatToStr50
  L_FloatToStr51
  L_FloatToStr52
  L_FloatToStr53
  L_FloatToStr54
  L_FloatToStr55
  L_FloatToStr56
  L_FloatToStr57
  L_FloatToStr58
  L_FloatToStr59
  L_FloatToStr60
  L_FloatToStr61
  L_FloatToStr62
  L_FloatToStr63
  L_FloatToStr64
  L_FloatToStr65
  L_FloatToStr66
  L_FloatToStr67
  L__Ltrim68
  L__FloatToStr69
  _ByteToStr
  _WordToStr
  L__WordToStr70
  _ShortToStr
  L__ShortToStr71
  _IntToStr
  L__IntToStr72
  L__IntToStr73
  _LongWordToStr
  L__LongWordToStr74
  L__LongWordToStr75
  _LongToStr
  L__LongToStr76
  L__LongToStr77
  _Dec2Bcd
  _Bcd2Dec
  _Bcd2Dec16
  L__Bcd2Dec1678
  L__Bcd2Dec1679
  _Dec2Bcd16
  L__Dec2Bcd1680
  L__Dec2Bcd1681
  _Rtrim
  _Ltrim
  _FloatToStr
  L__FloatToStr82
  L__FloatToStr83
  L__FloatToStr84
  L__FloatToStr85
  L__FloatToStr86
  L_Div_16x16_S0
  L_Div_16x16_S1
  LOOPS3232A
  SADD22LA
  SOK22LA
  SADD22L8
  SOK22L8
  LOOPS3232B
  SADD22LB
  SOK22LB
  SADD22L16
  SOK22L16
  LOOPS3232C
  SADD22LC
  SOK22LC
  SADD22L24
  SOK22L24
  LOOPS3232D
  SADD22LD
  SOK22LD
  SOK22L
  L_Div_32x32_S6
  L_Div_32x32_S7
  L_Div_32x32_S8
  L_Div_32x32_S9
  FXD3232S
  END_ALL
  CA3232S
  C3232SX
  C3232SX1
  C3232S
  C3232S2
  C3232SX4
  C3232SOK
  C3232SX3
  C3232SX2
  avoid_comfrem
  LOOPU3232A
  UADD22LA
  UOK22LA
  UADD22L8
  UOK22L8
  LOOPU3232B
  UADD22LB
  UOK22LB
  UADD22L16
  UOK22L16
  LOOPU3232C
  UADD22LC
  UOK22LC
  UADD22L24
  UOK22L24
  LOOPU3232D
  UADD22LD
  UOK22LD
  UOK22L
  _NEXT
  _EXIT2
  _LOOP
  _EXIT1
  _IF_FIRST
  _IF_SECOND
  _INVERCE_FIRST
  _MULT
  _INBERSE_SECOND
  _EXIT
  _Mul_8x8_U
  _Mul_16x16_U
  _Div_8x8_U
  _Div_16x16_U
  _Mul_8x8_S
  _Mul_16x16_S
  _Div_16x16_S_L
  _Div_16x16_S
  _Div_8x8_S
  _SDIV3232L
  _COMFREM
  _Div_32x32_S
  _Div_32x32_U
  _Mul_32x32_U
  _Mul_32x32_S
  _CC2D_Loop1
  _____DoICP
  _____DoIFC
  ___CC2DW
  _Swap
